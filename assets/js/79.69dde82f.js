(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{408:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"常见的几种实体类"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常见的几种实体类"}},[t._v("#")]),t._v(" 常见的几种实体类")]),t._v(" "),s("p",[t._v("在实际开发中，经常看见很多个实体类的包，诸如Pojo、Entity、VO、PO、DTO等\n那这些实体类对象的含义是什么   又有什么区别？")]),t._v(" "),s("h2",{attrs:{id:"vo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vo"}},[t._v("#")]),t._v(" VO")]),t._v(" "),s("p",[t._v("VO：value object值对象 / view object表现层对象\n1.主要"),s("strong",[t._v("对应页面显示（web页面/swt、swing界面）的数据对象。也就是前端渲染的对象")]),t._v("\n2.可以和表对应，也可以不，这根据业务的需要。")]),t._v(" "),s("p",[t._v("注 ：在struts中，用ActionForm做VO，需要做一个转换，因为PO是面向对象的，而ActionForm是和view对应的，要将几个PO要显示的属性合成一个ActionForm，可以使用BeanUtils的copy方法。")]),t._v(" "),s("h2",{attrs:{id:"entity"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#entity"}},[t._v("#")]),t._v(" Entity")]),t._v(" "),s("p",[t._v("entity:实体类对应数据库中的表，类的属性对应表的字段\nentity 里的"),s("strong",[t._v("每一个字段，与数据库相对应")])]),t._v(" "),s("h2",{attrs:{id:"pojo"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pojo"}},[t._v("#")]),t._v(" POJO")]),t._v(" "),s("p",[t._v("POJO（Plain Ordinary Java Object）"),s("strong",[t._v("简单的Java对象")]),t._v("\nPOJO类中可以包含：属性/get/set/构造方法，不允许有业务逻辑代码\n实际就是普通JavaBeans")]),t._v(" "),s("h2",{attrs:{id:"po"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#po"}},[t._v("#")]),t._v(" PO")]),t._v(" "),s("p",[t._v("PO: "),s("strong",[t._v("persistent object")]),t._v("\n持久对象，可以用来对照数据库中的一条记录\n这么看PO和Entity有什么区别呢？都是与数据库的字段一一对应。")]),t._v(" "),s("p",[t._v("GPT的回答")]),t._v(" "),s("blockquote",[s("p",[t._v("虽然Entity和PO的目标都是表示数据库实体，并与数据库进行交互，但它们在设计思想上有所区别。"),s("strong",[t._v("Entity更关注业务领域的建模和封装")]),t._v("，它们"),s("strong",[t._v("可能包含更多的业务逻辑")]),t._v("。而"),s("strong",[t._v("PO则更加偏向于数据库的持久化操作")]),t._v("，通常与底层的数据访问框架（如JPA）密切相关。")])]),t._v(" "),s("h2",{attrs:{id:"dto"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dto"}},[t._v("#")]),t._v(" DTO")]),t._v(" "),s("p",[t._v("也叫TO,   "),s("strong",[t._v("Data Transfer Object数据传输对象")]),t._v("\n1.用在需要"),s("strong",[t._v("跨进程或远程传输")]),t._v("时，它不应该包含业务逻辑。\n2.比如一张表有100个字段，那么对应的PO就有100个属性（大多数情况下，"),s("strong",[t._v("DTO 内的数据来自多个表")]),t._v("）。但view层只需显示10个字段，没有必要把整个PO对象传递到client，这时我们就可以用只有这10个属性的DTO来传输数据到client，这样也"),s("strong",[t._v("不会暴露server端表结构")]),t._v("。到达客户端以后，如果用这个对象来对应界面显示，那此时它的身份就转为VO。")]),t._v(" "),s("blockquote",[s("p",[t._v("也就是说 其实DTO是用来传输的，可以结合多个表，然后用于业务之间的传递，因为这时候的对象可能就不是业务上的对象了，而是结合了多个其他的字段，优点在于不会暴露数据库的表结构。")])]),t._v(" "),s("p",[t._v("DTO（Data Transfer Object）是一种用于在不同层或不同服务之间传递数据的对象。它主要用于封装数据，并提供一种方便的方式在不同的组件或模块之间传递数据，减少数据传输的复杂性。")]),t._v(" "),s("p",[t._v("DTO的主要功能包括：")]),t._v(" "),s("ol",[s("li",[s("p",[s("strong",[t._v("数据封装")]),t._v("：DTO用于封装一组相关的数据，可以将多个属性组合成一个DTO对象，方便传递和处理。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据传输")]),t._v("：DTO用于在不同的层或不同的服务之间传输数据。例如，在前端和后端之间传输数据时，可以将数据封装到DTO对象中，以便传递和处理。")])]),t._v(" "),s("li",[s("p",[s("strong",[t._v("数据转换")]),t._v("：DTO还可以用于实现数据转换的功能。例如，当从数据库中获取数据时，可以将查询结果映射到DTO对象中，以便于在业务逻辑层或展示层中使用。")])])]),t._v(" "),s("p",[t._v("举个简单的例子，假设有一个电子商务网站，有一个商品详情页面需要显示商品的基本信息和价格信息。在这种情况下，可以定义一个ProductDTO（商品DTO）来封装这些信息。ProductDTO可能包含以下属性：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductDTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" description"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BigDecimal")]),t._v(" price"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Getters and setters")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[t._v("当从数据库中获取商品信息时，可以使用一个查询语句来获取相关的数据，并将其映射到ProductDTO对象中：")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductDTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getProductDetails")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行查询语句获取商品信息")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Product")]),t._v(" product "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" productRepository"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("findById")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("productId"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 将商品信息映射到ProductDTO对象")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductDTO")]),t._v(" productDTO "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProductDTO")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    productDTO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    productDTO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDescription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDescription")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    productDTO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("product"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPrice")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" productDTO"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[t._v("在上述例子中，ProductDTO用于封装商品的基本信息，并"),s("strong",[t._v("作为数据传输对象在不同层之间进行传递。这样可以将商品信息从数据库层传递到业务逻辑层或展示层，避免直接暴露底层数据结构，提高代码的可维护性和灵活性。")])]),t._v(" "),s("p",[t._v("总结起来，DTO提供了一种简化数据传输和转换的方式，帮助解耦不同层或不同服务之间的数据传输，并提供了灵活的数据封装和传递机制。")]),t._v(" "),s("h2",{attrs:{id:"栗子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#栗子"}},[t._v("#")]),t._v(" 栗子")]),t._v(" "),s("p",[t._v("举个例子：")]),t._v(" "),s("p",[t._v("你的"),s("strong",[t._v("html页面")]),t._v("上有三个字段，name，pass，sex\n你的"),s("strong",[t._v("数据库表里")]),t._v("，有两个字段，name，pass ， 注意没有 sex。\n而你的 "),s("strong",[t._v("vo")]),t._v(" 里，就应该有下面三个成员变量 ，因为对应 html 页面上三个字段 。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//VO")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" string name；\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" string password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" string sex"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[t._v("这个时候，你的 "),s("strong",[t._v("entity")]),t._v(" 里，就应该有两个成员变量 ，因为对应数据库表中的 2 个字段 。")]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//Entity")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" string name；\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" string password"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("到了这里，好了，业务经理让你做这样一个业务“"),s("strong",[t._v("性别为女性female 的才能存入数据库")]),t._v('"，这个时候，你'),s("strong",[t._v("就要用到 dto 了")]),t._v("，")]),t._v(" "),s("ul",[s("li",[t._v("你要先从页面上拿到 vo，然后判断 vo 中的 sex是不是female 。")]),t._v(" "),s("li",[t._v("如果"),s("strong",[t._v("sex是female，就把 vo 中的 name 和 pass 拿出来，放到 dto 中")]),t._v("。")]),t._v(" "),s("li",[t._v("然后在把 "),s("strong",[t._v("dto 中的 name 和 pass 原封不动的给 entity，然后根据 entity 的值，在传入数据库")]),t._v("。")])]),t._v(" "),s("p",[t._v("PS： dto 和 entity 里面的字段应该是一样的，"),s("strong",[t._v("dto")]),t._v(" 只是 entity 到 vo，或者 vo 到 entity 的"),s("strong",[t._v("中间过程")]),t._v("，如果没有这个过程，你仍然可以做到增删改查，这是根据具体公司规范来的 。")])])}),[],!1,null,null,null);s.default=e.exports}}]);