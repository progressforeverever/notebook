{"remainingRequest":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\coding\\CzyNotebook\\notebook02\\docs\\.vuepress\\components\\IndexBigImg.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\coding\\CzyNotebook\\notebook02\\docs\\.vuepress\\components\\IndexBigImg.vue","mtime":1685605312506},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679311674030},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\babel-loader\\lib\\index.js","mtime":1679311673578},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679311674030},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\index.js","mtime":1679311675722}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucHVzaC5qcyI7Ci8vIOS4pOS4quWPmOmHj+WIhuWIq+aYr+iDjOaZr+WFg+e0oOeahCBjbGFzc+OAgeeUn+aIkOeahOeureWktCBjbGFzcwpjb25zdCBiYW5uZXIgPSAiYmFubmVyIjsKY29uc3QgYmFubmVyX2Fycm93ID0gImJhbm5lci1hcnJvdyI7CmV4cG9ydCBkZWZhdWx0IHsKICBtb3VudGVkKCkgewogICAgY29uc3QgYXJyb3cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChiYW5uZXJfYXJyb3cpOwogICAgYXJyb3cgJiYgYXJyb3cucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChhcnJvdyk7CiAgICBsZXQgYSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgIGEuaWQgPSBiYW5uZXJfYXJyb3c7CiAgICBhLmNsYXNzTmFtZSA9IGJhbm5lcl9hcnJvdzsKICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYmFubmVyKVswXS5hcHBlbmQoYSk7CiAgICBsZXQgdGFyZ2V0QSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGJhbm5lcl9hcnJvdyk7CiAgICB0YXJnZXRBLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZSA9PiB7CiAgICAgIC8vIOa3u+WKoOeCueWHu+S6i+S7tgogICAgICB0aGlzLnNjcm9sbEZuKCk7CiAgICB9KTsKICAgIC8vIOi/memHjOaYr+i/meWHoOS4quWxnuaAp+eahOm7mOiupOWAvO+8jOW7uuiuruWcqCB0aGVtZUNvbmZpZyDov5vooYzphY3nva7vvIzlroPku6zlsIbopobnm5bov5nlh6DkuKrlsZ7mgKflgLwKICAgIGxldCBuYXZDb2xvciA9IDE7CiAgICBsZXQgc3dpdGNoTmF2Q29sb3IgPSBmYWxzZTsKICAgIGxldCBiZ1RpbWVDb2xvciA9IGZhbHNlOwogICAgbGV0IGJnVGltZUNvbG9yQXJyYXkgPSBbInRyYW5zcGFyZW50IiwgInJnYmEoMjU1LCAxNDgsIDQ4LCAuMiIsICJyZ2JhKDAsIDAsIDAsIC4zKSIsICJyZ2JhKDAsIDAsIDAsIC41KSJdOwogICAgbGV0IGRlc2NGYWRlSW4gPSBmYWxzZTsKICAgIGxldCBkZXNjID0gW107CiAgICBsZXQgZGVzY0ZhZGVJblRpbWUgPSAyMDA7CiAgICBsZXQgZGVzY0ZhZGVPdXRUaW1lID0gMTAwOwogICAgbGV0IGRlc2NOZXh0VGltZSA9IDgwMDsKICAgIGxldCBkZXNjRm9udFNpemUgPSAiMS40cmVtIjsKICAgIGxldCBidWJibGUgPSBmYWxzZTsKICAgIGxldCBidWJibGVQb3NpdGlvbiA9IDA7CiAgICBsZXQgYnViYmxlTnVtID0gMjAwOwogICAgaWYgKHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nICYmIE9iamVjdC5rZXlzKHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nKS5sZW5ndGggPiAwKSB7CiAgICAgIG5hdkNvbG9yID0gdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcubmF2Q29sb3IgPT0gdW5kZWZpbmVkID8gbmF2Q29sb3IgOiB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5uYXZDb2xvcjsKICAgICAgc3dpdGNoTmF2Q29sb3IgPSB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5zd2l0Y2hOYXZDb2xvciA9PSB1bmRlZmluZWQgPyBzd2l0Y2hOYXZDb2xvciA6IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLnN3aXRjaE5hdkNvbG9yOwogICAgICBiZ1RpbWVDb2xvciA9IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmJnVGltZUNvbG9yID09IHVuZGVmaW5lZCA/IGJnVGltZUNvbG9yIDogdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuYmdUaW1lQ29sb3I7CiAgICAgIGJnVGltZUNvbG9yQXJyYXkgPSB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5iZ1RpbWVDb2xvckFycmF5ID09IHVuZGVmaW5lZCA/IGJnVGltZUNvbG9yQXJyYXkgOiB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5iZ1RpbWVDb2xvckFycmF5OwogICAgICBkZXNjRmFkZUluID0gdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuZGVzY0ZhZGVJbiA9PSB1bmRlZmluZWQgPyBkZXNjRmFkZUluIDogdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuZGVzY0ZhZGVJbjsKICAgICAgZGVzYyA9IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmRlc2MgPT0gdW5kZWZpbmVkID8gZGVzYyA6IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmRlc2M7CiAgICAgIGRlc2NGb250U2l6ZSA9IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmRlc2NGb250U2l6ZSA9PSB1bmRlZmluZWQgPyBkZXNjRm9udFNpemUgOiB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5kZXNjRm9udFNpemU7CiAgICAgIGRlc2NGYWRlSW5UaW1lID0gdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuZGVzY0ZhZGVJblRpbWUgPT0gdW5kZWZpbmVkID8gZGVzY0ZhZGVJblRpbWUgOiB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5kZXNjRmFkZUluVGltZTsKICAgICAgZGVzY05leHRUaW1lID0gdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuZGVzY05leHRUaW1lID09IHVuZGVmaW5lZCA/IGRlc2NOZXh0VGltZSA6IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmRlc2NOZXh0VGltZTsKICAgICAgYnViYmxlID0gdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuYnViYmxlID09IHVuZGVmaW5lZCA/IGJ1YmJsZSA6IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmJ1YmJsZTsKICAgICAgYnViYmxlUG9zaXRpb24gPSB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5idWJibGVQb3NpdGlvbiA9PSB1bmRlZmluZWQgPyBidWJibGVQb3NpdGlvbiA6IHRoaXMuJHRoZW1lQ29uZmlnLmluZGV4SW1nLmJ1YmJsZVBvc2l0aW9uOwogICAgICBidWJibGVOdW0gPSB0aGlzLiR0aGVtZUNvbmZpZy5pbmRleEltZy5idWJibGVOdW0gPT0gdW5kZWZpbmVkID8gYnViYmxlTnVtIDogdGhpcy4kdGhlbWVDb25maWcuaW5kZXhJbWcuYnViYmxlTnVtOwogICAgfQogICAgLy8g5Yid5aeL5YyWCiAgICBpZiAoYmdUaW1lQ29sb3IpIHsKICAgICAgdGhpcy5iZ1RpbWVDb2xvcihiZ1RpbWVDb2xvckFycmF5KTsKICAgIH0KICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICB0aGlzLm5vQmdCbHVyKCk7CiAgICB9LCAxMDApOwogICAgdGhpcy5ibHVyVGV4dChuYXZDb2xvcik7CiAgICB0aGlzLndhdGNoU2Nyb2xsKG5hdkNvbG9yLCBzd2l0Y2hOYXZDb2xvcik7CiAgICBpZiAoZGVzY0ZhZGVJbikgewogICAgICB0aGlzLnRleHRGYWRlSW5BbmRPdXQoZGVzYywgZGVzY0ZvbnRTaXplLCBkZXNjRmFkZUluVGltZSwgZGVzY0ZhZGVPdXRUaW1lLCBkZXNjTmV4dFRpbWUpOwogICAgfQogICAgaWYgKGJ1YmJsZSkgewogICAgICBsZXQgY2FudmFzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiY2FudmFzIik7CiAgICAgIGNhbnZhcy5pZCA9ICJjYW52YXMiOwogICAgICBjYW52YXMuc3R5bGUudG9wID0gYnViYmxlUG9zaXRpb24gKyAiJSI7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYmFubmVyKVswXS5hcHBlbmQoY2FudmFzKTsKICAgICAgdGhpcy5jYW52YXNCdWJibGUoYnViYmxlTnVtKTsKICAgIH0KICB9LAogIHdhdGNoOiB7CiAgICAkcm91dGUodG8sIGZyb20pIHsKICAgICAgaWYgKHRvLnBhdGggPT0gIi8iICYmIE9iamVjdC5rZXlzKHRoaXMuJHJvdXRlLnF1ZXJ5KS5sZW5ndGggPiAwKSB7CiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICB0aGlzLmNsaWNrQXJyb3coKTsKICAgICAgICB9LCAyMDApOwogICAgICB9CiAgICB9CiAgfSwKICBtZXRob2RzOiB7CiAgICBzY3JvbGxGbigpIHsKICAgICAgY29uc3Qgd2luZG93SCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYmFubmVyKVswXS5jbGllbnRIZWlnaHQ7IC8vIOiOt+WPlueql+WPo+mrmOW6pgogICAgICB3aW5kb3cuc2Nyb2xsVG8oewogICAgICAgIHRvcDogd2luZG93SCwKICAgICAgICBiZWhhdmlvcjogInNtb290aCIgLy8g5bmz5ruR5rua5YqoCiAgICAgIH0pOwogICAgfSwKCiAgICBjbGlja0Fycm93KCkgewogICAgICBjb25zdCBhcnJvdyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJiYW5uZXItYXJyb3ciKTsKICAgICAgYXJyb3cuY2xpY2soKTsKICAgIH0sCiAgICAvLyDnm5HlkKzpobXpnaLmu5rliqjnmoTlm57osIMKICAgIHdhdGNoU2Nyb2xsKG5hdkNvbG9yLCBzd2l0Y2hOYXZDb2xvcikgewogICAgICBjb25zdCB3aW5kb3dIID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShiYW5uZXIpWzBdLmNsaWVudEhlaWdodDsgLy8g6I635Y+W56qX5Y+j6auY5bqmCiAgICAgIHdpbmRvdy5vbnNjcm9sbCA9ICgpID0+IHsKICAgICAgICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCA8IHdpbmRvd0gpIHsKICAgICAgICAgIHRoaXMuYmx1clRleHQobmF2Q29sb3IpOwogICAgICAgICAgdGhpcy5ub0JnQmx1cigpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBpZiAoc3dpdGNoTmF2Q29sb3IgJiYgbmF2Q29sb3IgPT0gMSkgewogICAgICAgICAgICB0aGlzLmJsdXJUZXh0KDIpOwogICAgICAgICAgfSBlbHNlIGlmIChzd2l0Y2hOYXZDb2xvciAmJiBuYXZDb2xvciA9PSAyKSB7CiAgICAgICAgICAgIHRoaXMuYmx1clRleHQoMSk7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLmJnQmx1cigpOwogICAgICAgIH0KICAgICAgfTsKICAgIH0sCiAgICAvLyDlr7zoiKrmoI/mgaLlpI3ljp/kuLvpopjmoLflvI8KICAgIGJnQmx1cigpIHsKICAgICAgbGV0IG5hdmJhciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdmJhciIpWzBdOwogICAgICBuYXZiYXIuY2xhc3NOYW1lID0gIm5hdmJhciBibHVyIjsKICAgIH0sCiAgICAvLyDlr7zoiKrmoI/pgI/mmI4KICAgIG5vQmdCbHVyKCkgewogICAgICBsZXQgbmF2YmFyID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgibmF2YmFyIilbMF07CiAgICAgIG5hdmJhci5jbGFzc05hbWUgPSAibmF2YmFyIG5hdmJhcjEgYmx1ciI7CiAgICB9LAogICAgLy8g5a+86Iiq5qCP55qE5a2X5L2T6aKc6ImyCiAgICBibHVyVGV4dChuYXZDb2xvcikgewogICAgICBsZXQgdGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJzaXRlLW5hbWUiKVswXTsKICAgICAgbGV0IHNlYXJjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoInNlYXJjaC1ib3giKVswXTsKICAgICAgbGV0IG5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIm5hdi1saW5rcyIpWzBdOwogICAgICBpZiAobmF2Q29sb3IgPT0gMSkgewogICAgICAgIHRpdGxlLmNsYXNzTmFtZSA9ICJzaXRlLW5hbWUgY2FuLWhpZGUiOwogICAgICAgIG5hdi5jbGFzc05hbWUgPSAibmF2LWxpbmtzIGNhbi1oaWRlIjsKICAgICAgICBzZWFyY2guY2xhc3NOYW1lID0gInNlYXJjaC1ib3giOwogICAgICB9IGVsc2UgaWYgKG5hdkNvbG9yID09IDIpIHsKICAgICAgICB0aXRsZS5jbGFzc05hbWUgPSAic2l0ZS1uYW1lIHNpdGUtbmFtZTEgY2FuLWhpZGUiOwogICAgICAgIG5hdi5jbGFzc05hbWUgPSAibmF2LWxpbmtzIG5hdi1saW5rczEgY2FuLWhpZGUiOwogICAgICAgIHNlYXJjaC5jbGFzc05hbWUgPSAic2VhcmNoLWJveCBzZWFyY2gtYm94MSI7CiAgICAgIH0KICAgIH0sCiAgICAvLyDog4zmma/oibLpmo/ml7bpl7Tlj5jljJYKICAgIGJnVGltZUNvbG9yKGJnVGltZUNvbG9yQXJyYXkpIHsKICAgICAgdmFyIGhvdXJzID0gbmV3IERhdGUoKS5nZXRIb3VycygpOwogICAgICB2YXIgbWludXRlcyA9IG5ldyBEYXRlKCkuZ2V0TWludXRlcygpOwogICAgICB2YXIgc2Vjb25kcyA9IG5ldyBEYXRlKCkuZ2V0U2Vjb25kcygpOwogICAgICBob3VycyA9IGhvdXJzIDwgMTAgPyAiMCIgKyBob3VycyA6IGhvdXJzOwogICAgICBtaW51dGVzID0gbWludXRlcyA8IDEwID8gIjAiICsgbWludXRlcyA6IG1pbnV0ZXM7CiAgICAgIHNlY29uZHMgPSBzZWNvbmRzIDwgMTAgPyAiMCIgKyBzZWNvbmRzIDogc2Vjb25kczsKICAgICAgbGV0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICBkaXYuY2xhc3NOYW1lID0gImJhbm5lci1jb2xvciI7CiAgICAgIGlmIChob3VycyA+PSA2ICYmIGhvdXJzIDwgMTEpIHsKICAgICAgICBkaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmdUaW1lQ29sb3JBcnJheVswXTsKICAgICAgICBhZGRUaXAoYOaXqeS4iuWlveWRgH5+77yM546w5Zyo5pivICR7aG91cnN9OiR7bWludXRlc306JHtzZWNvbmRzfe+8jOWQg+aXqemkkOS6huWQl++8n/CfmIrwn6StYCwgImluZm8iLCA1MCwgNDAwMCk7CiAgICAgIH0gZWxzZSBpZiAoaG91cnMgPj0gMTIgJiYgaG91cnMgPD0gMTYpIHsKICAgICAgICBkaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmdUaW1lQ29sb3JBcnJheVswXTsKICAgICAgICBhZGRUaXAoYOS4i+WNiOWlveWRgH5+77yM546w5Zyo5pivICR7aG91cnN9OiR7bWludXRlc306JHtzZWNvbmRzfe+8jOe5geW/meeahOS4i+WNiOS5n+imgemAguW9k+S8keaBr+WTpvCfpaTwn4+Afn5gLCAiaW5mbyIsIDUwLCA0MDAwKTsKICAgICAgfSBlbHNlIGlmIChob3VycyA+PSAxNiAmJiBob3VycyA8PSAxOSkgewogICAgICAgIGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZ1RpbWVDb2xvckFycmF5WzFdOwogICAgICAgIGFkZFRpcChg5Yiw6buE5piP5LqGfn7vvIznjrDlnKjmmK8gJHtob3Vyc306JHttaW51dGVzfToke3NlY29uZHN977yM6K+l5YeG5aSH5ZCD6aWt5ZWm8J+ll/CfjZZ+fmAsICJpbmZvIiwgNTAsIDQwMDApOwogICAgICB9IGVsc2UgaWYgKGhvdXJzID49IDE5ICYmIGhvdXJzIDwgMjQpIHsKICAgICAgICBkaXYuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gYmdUaW1lQ29sb3JBcnJheVsyXTsKICAgICAgICBhZGRUaXAoYOaZmuS4iuWlveWRgH5+77yM546w5Zyo5pivICR7aG91cnN9OiR7bWludXRlc306JHtzZWNvbmRzfe+8jOivpeWHhuWkh+a0l+a8seedoeinieWVpvCfpbHwn5iqfn5gLCAiaW5mbyIsIDUwLCA0MDAwKTsKICAgICAgfSBlbHNlIGlmIChob3VycyA+PSAwICYmIGhvdXJzIDwgNikgewogICAgICAgIGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSBiZ1RpbWVDb2xvckFycmF5WzNdOwogICAgICAgIGFkZFRpcChg5Yir5YaN54as5aSc5LqGfn7vvIznjrDlnKjmmK8gJHtob3Vyc306JHttaW51dGVzfToke3NlY29uZHN977yM5pep54K5552h5ZCn77yM6K6p5oiR5Lus5LiA6LW35qyj6LWP5pep5LiK55qE5aSq6Zizfn7wn5iH8J+bj2AsICJpbmZvIiwgNTAsIDQwMDApOwogICAgICB9CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoYmFubmVyKVswXS5wYXJlbnROb2RlLmFwcGVuZChkaXYpOwogICAgfSwKICAgIC8vIOWtl+S9k+a3oeWFpQogICAgdGV4dEZhZGVJbkFuZE91dChkZXNjLCBkZXNjRm9udFNpemUsIGRlc2NGYWRlSW5UaW1lLCBkZXNjRmFkZU91dFRpbWUsIGRlc2NOZXh0VGltZSkgewogICAgICBsZXQgZGVzY0VsZW1lbnQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCJkZXNjcmlwdGlvbiIpWzBdOwogICAgICBkZXNjRWxlbWVudC5zdHlsZS5mb250U2l6ZSA9IGRlc2NGb250U2l6ZTsKICAgICAgaWYgKGRlc2NFbGVtZW50KSB7CiAgICAgICAgLy8g6Z2e6aaW6aG15LiN6Kem5Y+RCiAgICAgICAgdmFyIHNwYW4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7IC8vIOWIm+W7uiB8IOeahOWFg+e0oAogICAgICAgIHNwYW4uY2xhc3NOYW1lID0gInR5cGVkIjsKICAgICAgICBzcGFuLmlubmVySFRNTCA9ICJ8IjsKICAgICAgICB2YXIgaW5kZXggPSAwOyAvLyDkuLogZGVzYyDnmoTplb/luqbmnI3liqEKICAgICAgICB2YXIgbGVuZ3RoID0gMDsgLy8g5Li65pWw57uE5pyN5YqhCiAgICAgICAgdmFyIGRlc2NyaXB0aW9uID0gZGVzY0VsZW1lbnQuaW5uZXJUZXh0OyAvLyDlhYjlj5bpu5jorqTlgLwKICAgICAgICBkZXNjRWxlbWVudC5pbm5lclRleHQgPSAiIjsgLy8g5riF56m6IGRlc2MKICAgICAgICBkZXNjRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIikpOyAvLyDliJvlu7ogZGVzYyDmiYDlnKjnmoTmlrDlhYPntKAKICAgICAgICBkZXNjRWxlbWVudC5hcHBlbmRDaGlsZChzcGFuKTsgLy8g5re75YqgIHwg55qE5YWD57SgCiAgICAgICAgLy8g5Yid5aeL5YyW6L+t5LujCiAgICAgICAgdmFyIGludGVydmFsMSA9IHNldEludGVydmFsKGZhZGVJbiwgZGVzY0ZhZGVJblRpbWUpOwogICAgICAgIHZhciBpbnRlcnZhbDI7CiAgICAgIH0KICAgICAgLy8g5reh5YWl5Zue6LCDCiAgICAgIGZ1bmN0aW9uIGZhZGVJbigpIHsKICAgICAgICBpZiAoZGVzY0VsZW1lbnQpIHsKICAgICAgICAgIHNwYW4uc3R5bGUuYW5pbWF0aW9uID0gIm5vbmUiOyAvLyDmt6HlhaXml7bvvIx8IOWFieagh+S4jeWFgeiuuOmXqueDgQogICAgICAgICAgaWYgKGRlc2MgaW5zdGFuY2VvZiBBcnJheSAmJiBkZXNjLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgLy8g5aaC5p6c5pivIHRoZW1lQ29uZmlnIOS8oOadpeeahOaVsOe7hAogICAgICAgICAgICBkZXNjcmlwdGlvbiA9IGRlc2NbbGVuZ3RoXTsKICAgICAgICAgIH0KICAgICAgICAgIGRlc2NFbGVtZW50LmZpcnN0Q2hpbGQuaW5uZXJUZXh0ID0gZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIGluZGV4KyspOwogICAgICAgICAgaWYgKGluZGV4ID4gZGVzY3JpcHRpb24ubGVuZ3RoKSB7CiAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWwxKTsKICAgICAgICAgICAgc3Bhbi5zdHlsZS5hbmltYXRpb24gPSAidHlwZWRCbGluayAxcyBpbmZpbml0ZSI7IC8vIOa3oeWFpee7k+adn++8jHwg5YWJ5qCH5YWB6K646Zeq54OBCiAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAgIGludGVydmFsMiA9IHNldEludGVydmFsKGZhZGVPdXQsIGRlc2NGYWRlT3V0VGltZSk7CiAgICAgICAgICAgIH0sIGRlc2NOZXh0VGltZSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIC8vIOa3oeWHuuWbnuiwgwogICAgICBmdW5jdGlvbiBmYWRlT3V0KCkgewogICAgICAgIGlmIChpbmRleCA+PSAwKSB7CiAgICAgICAgICBzcGFuLnN0eWxlLmFuaW1hdGlvbiA9ICJub25lIjsgLy8g5reh5Ye65pe277yMfCDlhYnmoIfkuI3lhYHorrjpl6rng4EKICAgICAgICAgIGRlc2NFbGVtZW50LmZpcnN0Q2hpbGQuaW5uZXJUZXh0ID0gZGVzY3JpcHRpb24uc3Vic3RyaW5nKDAsIGluZGV4LS0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsMik7CiAgICAgICAgICBzcGFuLnN0eWxlLmFuaW1hdGlvbiA9ICJ0eXBlZEJsaW5rIDFzIGluZmluaXRlIjsgLy8g5reh5Ye657uT5p2f77yMfCDlhYnmoIflhYHorrjpl6rng4EKICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICBsZW5ndGgrKzsKICAgICAgICAgICAgaWYgKGxlbmd0aCA+PSBkZXNjLmxlbmd0aCkgewogICAgICAgICAgICAgIGxlbmd0aCA9IDA7IC8vIGRlc2Mg5bGV56S65a6M77yM6YeN5paw5byA5aeL6K6h5pWwCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGludGVydmFsMSA9IHNldEludGVydmFsKGZhZGVJbiwgZGVzY0ZhZGVJblRpbWUpOwogICAgICAgICAgfSwgZGVzY05leHRUaW1lKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAvLyDmsJTms6HmlYjmnpwKICAgIGNhbnZhc0J1YmJsZShidWJibGVOdW0pIHsKICAgICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJjYW52YXMiKTsKICAgICAgdmFyIGN4dCA9IGNhbnZhcy5nZXRDb250ZXh0KCIyZCIpOwogICAgICBmdW5jdGlvbiBEb3QoKSB7CiAgICAgICAgdGhpcy5hbGl2ZSA9IHRydWU7CiAgICAgICAgdGhpcy54ID0gTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogY2FudmFzLndpZHRoKTsKICAgICAgICB0aGlzLnkgPSBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiBjYW52YXMuaGVpZ2h0KTsKICAgICAgICB0aGlzLmRpYW1ldGVyID0gTWF0aC5yYW5kb20oKSAqIDEwLjg7CiAgICAgICAgdGhpcy5Db2xvckRhdGEgPSB7CiAgICAgICAgICBSZWQ6IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSksCiAgICAgICAgICBHcmVlbjogTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMjU1KSwKICAgICAgICAgIEJsdWU6IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDI1NSkKICAgICAgICB9OwogICAgICAgIHRoaXMuYWxwaGEgPSAwLjU7CiAgICAgICAgdGhpcy5jb2xvciA9ICJyZ2JhKCIgKyB0aGlzLkNvbG9yRGF0YS5SZWQgKyAiLCAiICsgdGhpcy5Db2xvckRhdGEuR3JlZW4gKyAiLCIgKyB0aGlzLkNvbG9yRGF0YS5CbHVlICsgIiwiICsgdGhpcy5hbHBoYSArICIpIjsKICAgICAgICB0aGlzLnZlbG9jaXR5ID0gewogICAgICAgICAgeDogTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpIDwgMC41ID8gLTEgOiAxKSAqIE1hdGgucmFuZG9tKCkgKiAwLjcsCiAgICAgICAgICB5OiBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgPCAwLjUgPyAtMSA6IDEpICogTWF0aC5yYW5kb20oKSAqIDAuNwogICAgICAgIH07CiAgICAgIH0KICAgICAgRG90LnByb3RvdHlwZSA9IHsKICAgICAgICBEcmF3OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBjeHQuZmlsbFN0eWxlID0gdGhpcy5jb2xvcjsKICAgICAgICAgIGN4dC5iZWdpblBhdGgoKTsKICAgICAgICAgIGN4dC5hcmModGhpcy54LCB0aGlzLnksIHRoaXMuZGlhbWV0ZXIsIDAsIE1hdGguUEkgKiAyLCBmYWxzZSk7CiAgICAgICAgICBjeHQuZmlsbCgpOwogICAgICAgIH0sCiAgICAgICAgVXBkYXRlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAodGhpcy5hbHBoYSA8IDAuOCkgewogICAgICAgICAgICB0aGlzLmFscGhhICs9IDAuMDE7CiAgICAgICAgICAgIHRoaXMuY29sb3IgPSAicmdiYSgiICsgdGhpcy5Db2xvckRhdGEuUmVkICsgIiwgIiArIHRoaXMuQ29sb3JEYXRhLkdyZWVuICsgIiwiICsgdGhpcy5Db2xvckRhdGEuQmx1ZSArICIsIiArIHRoaXMuYWxwaGEgKyAiKSI7CiAgICAgICAgICB9CiAgICAgICAgICB0aGlzLnggKz0gdGhpcy52ZWxvY2l0eS54OwogICAgICAgICAgdGhpcy55ICs9IHRoaXMudmVsb2NpdHkueTsKICAgICAgICAgIGlmICh0aGlzLnggPiBjYW52YXMud2lkdGggKyA1IHx8IHRoaXMueCA8IDAgLSA1IHx8IHRoaXMueSA+IGNhbnZhcy5oZWlnaHQgKyA1IHx8IHRoaXMueSA8IDAgLSA1KSB7CiAgICAgICAgICAgIHRoaXMuYWxpdmUgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH07CiAgICAgIHZhciBFdmVudCA9IHsKICAgICAgICByQXJyYXk6IFtdLAogICAgICAgIEluaXQ6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoOwogICAgICAgICAgY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDsKICAgICAgICAgIGZvciAodmFyIHggPSAwOyB4IDwgYnViYmxlTnVtOyB4KyspIHsKICAgICAgICAgICAgdGhpcy5yQXJyYXkucHVzaChuZXcgRG90KCkpOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5VcGRhdGUoKTsKICAgICAgICB9LAogICAgICAgIERyYXc6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGN4dC5jbGVhclJlY3QoMCwgMCwgY2FudmFzLndpZHRoLCBjYW52YXMuaGVpZ2h0KTsKICAgICAgICAgIHRoaXMuckFycmF5LmZvckVhY2goZnVuY3Rpb24gKGRvdCkgewogICAgICAgICAgICBkb3QuRHJhdygpOwogICAgICAgICAgfSk7CiAgICAgICAgfSwKICAgICAgICBVcGRhdGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGlmIChFdmVudC5yQXJyYXkubGVuZ3RoIDwgYnViYmxlTnVtKSB7CiAgICAgICAgICAgIGZvciAodmFyIHggPSBFdmVudC5yQXJyYXkubGVuZ3RoOyB4IDwgYnViYmxlTnVtOyB4KyspIHsKICAgICAgICAgICAgICBFdmVudC5yQXJyYXkucHVzaChuZXcgRG90KCkpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBFdmVudC5yQXJyYXkuZm9yRWFjaChmdW5jdGlvbiAoZG90KSB7CiAgICAgICAgICAgIGRvdC5VcGRhdGUoKTsKICAgICAgICAgIH0pOwogICAgICAgICAgRXZlbnQuckFycmF5ID0gRXZlbnQuckFycmF5LmZpbHRlcihmdW5jdGlvbiAoZG90KSB7CiAgICAgICAgICAgIHJldHVybiBkb3QuYWxpdmU7CiAgICAgICAgICB9KTsKICAgICAgICAgIEV2ZW50LkRyYXcoKTsKICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShFdmVudC5VcGRhdGUpOwogICAgICAgIH0KICAgICAgfTsKICAgICAgd2luZG93Lm9ucmVzaXplID0gZnVuY3Rpb24gKCkgewogICAgICAgIEV2ZW50LnJBcnJheSA9IFtdOwogICAgICAgIGNhbnZhcy53aWR0aCA9IHdpbmRvdy5pbm5lcldpZHRoOwogICAgICAgIGNhbnZhcy5oZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7CiAgICAgIH07CiAgICAgIEV2ZW50LkluaXQoKTsKICAgIH0KICB9Cn07Ci8qKg0KICog5re75Yqg5raI5oGv5o+Q56S6DQogKiBjb250ZW5077ya5YaF5a65DQogKiB0eXBl77ya5by556qX57G75Z6L77yIdGlw44CBc3VjY2Vzc+OAgXdhcm5pbmfjgIFkYW5nZXLvvIkNCiAqIHN0YXJ0SGVpZ2h077ya56ys5LiA5Liq5by556qX55qE6auY5bqm77yM6buY6K6kIDUwDQogKiBkaWVUaW1l77ya5by556qX5raI5aSx5pe26Ze077yI5q+r56eS77yJ77yM6buY6K6kIDMwMDAg5q+r56eSDQogKi8KZnVuY3Rpb24gYWRkVGlwKGNvbnRlbnQsIHR5cGUsIHN0YXJ0SGVpZ2h0ID0gNTAsIGRpZVRpbWUgPSAzMDAwKSB7CiAgdmFyIHRpcCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi50aXAiKTsKICB2YXIgdGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogIC8vIOiOt+WPluacgOWQjua2iOaBr+aPkOekuuWFg+e0oOeahOmrmOW6pgogIHZhciB0b3AgPSB0aXAubGVuZ3RoID09IDAgPyAwIDogdGlwW3RpcC5sZW5ndGggLSAxXS5nZXRBdHRyaWJ1dGUoImRhdGEtdG9wIik7CiAgLy8g5aaC5p6c5Lqn55Sf5Lik5Liq5Lul5LiK55qE5raI5oGv5o+Q56S677yM5YiZ5Ye6546w5Zyo5LiK5LiA5Liq5o+Q56S655qE5LiL6Z2i77yM5Y2z6auY5bqm5re75Yqg77yM5ZCm5YiZ6buY6K6kIDUwCiAgdmFyIGxhc3RUb3AgPSBwYXJzZUludCh0b3ApICsgKHRpcC5sZW5ndGggIT0gMCA/IHRpcFt0aXAubGVuZ3RoIC0gMV0ub2Zmc2V0SGVpZ2h0ICsgMTcgOiBzdGFydEhlaWdodCk7CiAgbGV0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGRpdi5jbGFzc05hbWUgPSBgdGlwIHRpcC0ke3R5cGV9ICR7dGltZX1gOwogIGRpdi5zdHlsZS50b3AgPSBwYXJzZUludCh0b3ApICsgInB4IjsKICBkaXYuc2V0QXR0cmlidXRlKCJkYXRhLXRvcCIsIGxhc3RUb3ApOwogIGlmICh0eXBlID09ICJpbmZvIiB8fCB0eXBlID09IDEpIHsKICAgIGRpdi5pbm5lckhUTUwgPSBgPGkgY2xhc3M9Imljb25mb250IGljb24taW5mbyBpY29uIj48L2k+PHAgY2xhc3M9InRpcC1pbmZvLWNvbnRlbnQiPiR7Y29udGVudH08L3A+YDsKICB9IGVsc2UgaWYgKHR5cGUgPT0gInN1Y2Nlc3MiIHx8IHR5cGUgPT0gMikgewogICAgZGl2LmlubmVySFRNTCA9IGA8aSBjbGFzcz0iaWNvbmZvbnQgaWNvbi1kYWdvdXlvdXF1YW4gaWNvbiI+PC9pPjxwIGNsYXNzPSJ0aXAtc3VjY2Vzcy1jb250ZW50Ij4ke2NvbnRlbnR9PC9wPmA7CiAgfSBlbHNlIGlmICh0eXBlID09ICJkYW5nZXIiIHx8IHR5cGUgPT0gMykgewogICAgZGl2LmlubmVySFRNTCA9IGA8aSBjbGFzcz0iaWNvbmZvbnQgaWNvbi1jdW93dSBpY29uIj48L2k+PHAgY2xhc3M9InRpcC1kYW5nZXItY29udGVudCI+JHtjb250ZW50fTwvcD5gOwogIH0gZWxzZSBpZiAodHlwZSA9PSAid2FybmluZyIgfHwgdHlwZSA9PSA0KSB7CiAgICBkaXYuaW5uZXJIVE1MID0gYDxpIGNsYXNzPSJpY29uZm9udCBpY29uLWdhbnRhbmhhbyBpY29uIj48L2k+PHAgY2xhc3M9InRpcC13YXJuaW5nLWNvbnRlbnQiPiR7Y29udGVudH08L3A+YDsKICB9CiAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChkaXYpOwogIGxldCB0aW1lVGlwID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSh0aW1lKVswXTsKICBzZXRUaW1lb3V0KCgpID0+IHsKICAgIHRpbWVUaXAuc3R5bGUudG9wID0gcGFyc2VJbnQobGFzdFRvcCkgKyAicHgiOwogICAgdGltZVRpcC5zdHlsZS5vcGFjaXR5ID0gIjEiOwogIH0sIDEwKTsKCiAgLy8g5raI5oGv5o+Q56S6IGRpZVRpbWUg56eS5ZCO6ZqQ6JeP5bm26KKr5Yig6ZmkCiAgc2V0VGltZW91dCgoKSA9PiB7CiAgICB0aW1lVGlwLnN0eWxlLnRvcCA9ICIwcHgiOwogICAgdGltZVRpcC5zdHlsZS5vcGFjaXR5ID0gIjAiOwoKICAgIC8vIOS4i+mdoueahOaJgOacieWFg+e0oOWbnuWIsOWQhOiHquabvue7j+eahOWHuuWPkeeCuQogICAgdmFyIGFsbFRpcEVsZW1lbnQgPSBuZXh0QWxsVGlwRWxlbWVudCh0aW1lVGlwKTsKICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYWxsVGlwRWxlbWVudC5sZW5ndGg7IGkrKykgewogICAgICB2YXIgbmV4dCA9IGFsbFRpcEVsZW1lbnRbaV07CiAgICAgIHZhciB0b3AgPSBwYXJzZUludChuZXh0LmdldEF0dHJpYnV0ZSgiZGF0YS10b3AiKSkgLSBuZXh0Lm9mZnNldEhlaWdodCAtIDE3OwogICAgICBuZXh0LnNldEF0dHJpYnV0ZSgiZGF0YS10b3AiLCB0b3ApOwogICAgICBuZXh0LnN0eWxlLnRvcCA9IHRvcCArICJweCI7CiAgICB9CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgdGltZVRpcC5yZW1vdmUoKTsKICAgIH0sIDUwMCk7CiAgfSwgZGllVGltZSk7Cn0KLyoqDQogKiDojrflj5blkI7pnaLnmoTlhYTlvJ/lhYPntKANCiAqLwpmdW5jdGlvbiBuZXh0QWxsVGlwRWxlbWVudChlbGVtKSB7CiAgdmFyIHIgPSBbXTsKICB2YXIgbiA9IGVsZW07CiAgZm9yICg7IG47IG4gPSBuLm5leHRTaWJsaW5nKSB7CiAgICBpZiAobi5ub2RlVHlwZSA9PT0gMSAmJiBuICE9PSBlbGVtKSB7CiAgICAgIHIucHVzaChuKTsKICAgIH0KICB9CiAgcmV0dXJuIHI7Cn0="},null]}