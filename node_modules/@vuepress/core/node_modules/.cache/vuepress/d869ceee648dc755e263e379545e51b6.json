{"remainingRequest":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??ref--6!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\index.js??ref--1-1!D:\\coding\\CzyNotebook\\notebook02\\node_modules\\@vuepress\\markdown-loader\\index.js??ref--1-2!D:\\coding\\CzyNotebook\\notebook02\\docs\\数据库与中间件\\10.MySQL\\13.MySQL 13 count()这么慢，我该怎么办.md?vue&type=template&id=3ad90805&","dependencies":[{"path":"D:\\coding\\CzyNotebook\\notebook02\\docs\\数据库与中间件\\10.MySQL\\13.MySQL 13 count()这么慢，我该怎么办.md","mtime":1701747957395},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679311674030},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679311674030},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\babel-loader\\lib\\index.js","mtime":1679311673578},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1679311675722},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1679311674030},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\vue-loader\\lib\\index.js","mtime":1679311675722},{"path":"D:\\coding\\CzyNotebook\\notebook02\\node_modules\\@vuepress\\markdown-loader\\index.js","mtime":1685605437953}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"names":["render","_vm","_c","_self","attrs","$parent","slotKey","id","staticClass","href","_v","src","alt","target","rel","staticRenderFns","_withStripped"],"sources":["D:/coding/CzyNotebook/notebook02/docs/数据库与中间件/10.MySQL/13.MySQL 13 count()这么慢，我该怎么办.md"],"sourcesContent":["var render = function render() {\n  var _vm = this,\n    _c = _vm._self._c\n  return _c(\n    \"ContentSlotsDistributor\",\n    { attrs: { \"slot-key\": _vm.$parent.slotKey } },\n    [\n      _c(\"h1\", { attrs: { id: \"mysql-13-count-这么慢-我该怎么办\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#mysql-13-count-这么慢-我该怎么办\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" MySQL 13 count(*)这么慢，我该怎么办\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"在开发系统的时候，你可能经常需要计算一个表的行数，比如一个交易系统的所有变更记录总数\"\n          ),\n        ]),\n        _vm._v(\"。这时候你可能会想，一条\"),\n        _c(\"code\", [_vm._v(\"select count(*) from t\")]),\n        _vm._v(\" 语句不就解决了吗？\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"但是，你会发现\"),\n        _c(\"strong\", [\n          _vm._v(\"随着系统中记录数越来越多，这条语句执行得也会越来越慢\"),\n        ]),\n        _vm._v(\"。然后你可能就想了，MySQL怎么这么笨啊，\"),\n        _c(\"strong\", [\n          _vm._v(\"记个总数，每次要查的时候直接读出来，不就好了吗。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"那么今天，我们就来聊聊\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"count(*)语句到底是怎样实现的，以及MySQL为什么会这么实现。然后，我会再和你说说，如果应用中有这种频繁变更并需要统计表行数的需求，业务设计上可以怎么做。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"count-的实现方式\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#count-的实现方式\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" count(*)的实现方式\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"你首先要明确的是，在不同的MySQL引擎中，count(*)有不同的实现方式。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"MyISAM引擎把一个表的总行数存在了磁盘上\")]),\n          _vm._v(\"，因此\"),\n          _c(\"strong\", [\n            _vm._v(\"执行count(*)的时候会直接返回这个数，效率很高；\"),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"而\"),\n          _c(\"strong\", [_vm._v(\"InnoDB引擎\")]),\n          _vm._v(\"就麻烦了，它执行count(*)的时候，需要\"),\n          _c(\"strong\", [\n            _vm._v(\"把数据一行一行地从引擎里面读出来，然后累积计数\"),\n          ]),\n          _vm._v(\"。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"这里需要注意的是，我们在这篇文章里讨论的是\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"没有过滤条件的count(*)，如果加了where 条件的话，MyISAM表也是不能返回得这么快的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在前面的文章中，我们一起分析了为什么要使用InnoDB，因为不论是在事务支持、并发能力还是在数据安全方面，InnoDB都优于MyISAM。我猜你的表也一定是用了InnoDB引擎。这就是当你的记录数越来越多的时候，计算一个表的总行数会越来越慢的原因。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"那\"),\n        _c(\"strong\", [\n          _vm._v(\"为什么InnoDB不跟MyISAM一样，也把数字存起来呢？\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"这是因为即使是在同一个时刻的多个查询，由于\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"多版本并发控制（MVCC）的原因，InnoDB表“应该返回多少行”也是不确定的\"\n          ),\n        ]),\n        _vm._v(\"。这里，我用一个算count(*)的例子来为你解释一下。\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"假设表t中现在有10000条记录，我们设计了三个用户并行的会话。\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [_vm._v(\"会话A先启动事务并查询一次表的总行数；\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"会话B启动事务，插入一行后记录后，查询表的总行数；\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"会话C先启动一个单独的语句，插入一行记录后，查询表的总行数。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"我们假设从上到下是按照时间顺序执行的，同一行语句是在同一时刻执行的。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: {\n            src: \"https://static001.geekbang.org/resource/image/5e/97/5e716ba1d464c8224c1c1f36135d0e97.png\",\n            alt: \"img\",\n          },\n        }),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"图1 会话A、B、C的执行流程\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你会看到，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"在最后一个时刻，三个会话A、B、C会同时查询表t的总行数，但拿到的结果却不同。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\"这和InnoDB的事务设计有关系，可重复读是它默认的隔离级别\"),\n        ]),\n        _vm._v(\"，在代码上就是通过多版本并发控制，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"也就是MVCC来实现的。每一行记录都要判断自己是否对这个会话可见，因此对于count(*)请求来说，InnoDB只好把数据一行一行地读出依次判断，可见的行才能够用于计算“基于这个查询”的表的总行数。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"备注：如果你对MVCC记忆模糊了，可以再回顾下第3篇文章\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://time.geekbang.org/column/article/68963\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n              },\n            },\n            [\n              _vm._v(\"《事务隔离：为什么你改了我还看不见？》\"),\n              _c(\"OutboundLink\"),\n            ],\n            1\n          ),\n          _vm._v(\"和第8篇文章\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://time.geekbang.org/column/article/70562\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n              },\n            },\n            [_vm._v(\"《事务到底是隔离的还是不隔离的？》\"), _c(\"OutboundLink\")],\n            1\n          ),\n          _vm._v(\"中的相关内容。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"当然，现在这个看上去笨笨的MySQL，在执行count(*)操作的时候还是做了优化的。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你知道的，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"InnoDB是索引组织表，主键索引树的叶子节点是数据，而普通索引树的叶子节点是主键值\"\n          ),\n        ]),\n        _vm._v(\"。所以，\"),\n        _c(\"strong\", [_vm._v(\"普通索引树比主键索引树小很多\")]),\n        _vm._v(\n          \"。对于count(*)这样的操作，遍历哪个索引树得到的结果逻辑上都是一样的。因此，\"\n        ),\n        _c(\"strong\", [_vm._v(\"MySQL优化器会找到最小的那棵树来遍历\")]),\n        _vm._v(\"。\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"在保证逻辑正确的前提下，尽量减少扫描的数据量，是数据库系统设计的通用法则之一。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"如果你用过\"),\n        _c(\"code\", [_vm._v(\"show table status\")]),\n        _vm._v(\" 命令的话，就会发现这个命令的\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"输出结果里面也有一个TABLE_ROWS用于显示这个表当前有多少行，这个命令执行挺快的，那这个TABLE_ROWS能代替count(*)吗？\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你可能还记得在第10篇文章\"),\n        _c(\n          \"a\",\n          {\n            attrs: {\n              href: \"https://time.geekbang.org/column/article/71173\",\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n            },\n          },\n          [_vm._v(\"《 MySQL为什么有时候会选错索引？》\"), _c(\"OutboundLink\")],\n          1\n        ),\n        _vm._v(\n          \"中我提到过，索引统计的值是通过采样来估算的。实际上，TABLE_ROWS就是从这个采样估算得来的，因此它也很不准。有多不准呢，官方文档说误差可能达到40%到50%。\"\n        ),\n        _c(\"strong\", [\n          _vm._v(\"所以，show table status命令显示的行数也不能直接使用。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"到这里我们小结一下：\")]),\n      _vm._v(\" \"),\n      _c(\"ul\", [\n        _c(\"li\", [\n          _c(\"strong\", [_vm._v(\"MyISAM表虽然count(*)很快，但是不支持事务；\")]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [\n            _vm._v(\"show table status命令虽然返回很快，但是不准确；\"),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _c(\"strong\", [\n            _vm._v(\n              \"InnoDB表直接count(*)会遍历全表，虽然结果准确，但会导致性能问题。\"\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"那么，回到文章开头的问题，如果你现在有一个页面经常要显示交易系统的操作记录总数，到底应该怎么办呢？答案是，\"\n        ),\n        _c(\"strong\", [_vm._v(\"我们只能自己计数。\")]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"接下来，我们讨论一下，看看自己计数有哪些方法，以及每种方法的优缺点有哪些。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"这里，我先和你说一下这些方法的基本思路：\"),\n        _c(\"strong\", [\n          _vm._v(\"你需要自己找一个地方，把操作记录表的行数存起来。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"用缓存系统保存计数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#用缓存系统保存计数\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 用缓存系统保存计数\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"对于更新很频繁的库来说，你可能会第一时间想到，用缓存系统来支持。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"你可以用一个\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"Redis服务来保存这个表的总行数。这个表每被插入一行Redis计数就加1，每被删除一行Redis计数就减1。这种方式下，读和更新操作都很快，但你再想一下这种方式存在什么问题吗？\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"没错，\"),\n        _c(\"strong\", [_vm._v(\"缓存系统可能会丢失更新。\")]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"Redis的数据不能永久地留在内存里，所以你会找一个地方把这个值定期地持久化存储起来。但即使这样，仍然可能丢失更新\"\n          ),\n        ]),\n        _vm._v(\"。试想如果刚刚在数据表中插入了一行，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"Redis中保存的值也加了1，然后Redis异常重启了，重启后你要从存储redis数据的地方把这个值读回来，而刚刚加1的这个计数操作却丢失了。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"当然了，这还是有解的。比如，R\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"edis异常重启以后，到数据库里面单独执行一次count(*)获取真实的行数，再把这个值写回到Redis里就可以了。异常重启毕竟不是经常出现的情况，这一次全表扫描的成本，还是可以接受的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"但实际上，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"将计数保存在缓存系统中的方式，还不只是丢失更新的问题。即使Redis正常工作，这个值还是逻辑上不精确的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"你可以设想一下有这么一个页面，要显示操作记录的总数，同时还要显示最近操作的100条记录。那么，这个页面的逻辑就需要先到Redis里面取出计数，再到数据表里面取数据记录。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"我们是这么定义不精确的：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"一种是，查到的100行结果里面\"),\n          _c(\"strong\", [_vm._v(\"有最新插入记录，而Redis的计数里还没加1；\")]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"另一种是，查到的100行\"),\n          _c(\"strong\", [\n            _vm._v(\"结果里没有最新插入的记录，而Redis的计数里已经加了1。\"),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"这两种情况，都是逻辑不一致的。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"我们一起来看看这个时序图。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: {\n            src: \"https://static001.geekbang.org/resource/image/39/33/39898af053695dad37227d71ae288e33.png\",\n            alt: \"img\",\n          },\n        }),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"图2 会话A、B执行时序图\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"图2中，会话A是一个插入交易记录的逻辑，往数据表里插入一行R，然后Redis计数加1；会话B就是查询页面显示时需要的数据。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在图2的这个时序里，在T3时刻会话B来查询的时候，会显示出新插入的R这个记录，但是Redis的计数还没加1。这时候，就会出现我们说的数据不一致。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"你一定会说，这是因为我们执行新增记录逻辑时候，是先写数据表，再改Redis计数。而读的时候是先读Redis，再读数据表，这个顺序是相反的。那么，如果保持顺序一样的话，是不是就没问题了？我们现在把会话A的更新顺序换一下，再看看执行结果。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: {\n            src: \"https://static001.geekbang.org/resource/image/5c/db/5c2f786beae1d8917cdc5033b7bf0bdb.png\",\n            alt: \"img\",\n          },\n        }),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"图3 调整顺序后，会话A、B的执行时序图\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"你会发现，这时候反过来了，会话B在T3时刻查询的时候，Redis计数加了1了，但还查不到新插入的R这一行，也是数据不一致的情况。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"在并发系统里面，我们是无法精确控制不同线程的执行时刻的，因为存在图中的这种操作序列，所以，我们说即使Redis正常工作，这个计数值还是逻辑上不精确的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"在数据库保存计数\" } }, [\n        _c(\n          \"a\",\n          {\n            staticClass: \"header-anchor\",\n            attrs: { href: \"#在数据库保存计数\" },\n          },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 在数据库保存计数\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"根据上面的分析，用缓存系统保存计数有丢失数据和计数不精确的问题。那么，\"\n        ),\n        _c(\"strong\", [\n          _vm._v(\n            \"如果我们把这个计数直接放到数据库里单独的一张计数表C中，又会怎么样呢？\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"首先，这\"),\n        _c(\"strong\", [\n          _vm._v(\"解决了崩溃丢失的问题，InnoDB是支持崩溃恢复不丢数据的。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"blockquote\", [\n        _c(\"p\", [\n          _vm._v(\"备注：关于InnoDB的崩溃恢复，你可以再回顾一下第2篇文章\"),\n          _c(\n            \"a\",\n            {\n              attrs: {\n                href: \"https://time.geekbang.org/column/article/68633\",\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n              },\n            },\n            [\n              _vm._v(\"《日志系统：一条SQL更新语句是如何执行的？》\"),\n              _c(\"OutboundLink\"),\n            ],\n            1\n          ),\n          _vm._v(\"中的相关内容。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"然后，我们再看看能不能解决计数不精确的问题。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"你会说，这不一样吗？无非就是把图3中对Redis的操作，改成了对计数表C的操作。只要出现图3的这种执行序列，这个问题还是无解的吧？\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"这个问题还真不是无解的。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"我们这篇文章要解决的问题，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"都是由于InnoDB要支持事务，从而导致InnoDB表不能把count(*)直接存起来，然后查询的时候直接返回形成的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"所谓以子之矛攻子之盾，现在我们就\"),\n        _c(\"strong\", [_vm._v(\"利用“事务”这个特性，把问题解决掉。\")]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"img\", {\n          attrs: {\n            src: \"https://static001.geekbang.org/resource/image/9e/e3/9e4170e2dfca3524eb5e92adb8647de3.png\",\n            alt: \"img\",\n          },\n        }),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"图4 会话A、B的执行时序图\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"我们来看下现在的执行结果。\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"虽然会话B的读操作仍然是在T3执行的，但是因为这时候更新事务还没有提交，所以计数值加1这个操作对会话B还不可见。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"因此，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"会话B看到的结果里， 查计数值和“最近100条记录”看到的结果，逻辑上就是一致的。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"不同的count用法\" } }, [\n        _c(\n          \"a\",\n          { staticClass: \"header-anchor\", attrs: { href: \"#不同的count用法\" } },\n          [_vm._v(\"#\")]\n        ),\n        _vm._v(\" 不同的count用法\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在前面文章的评论区，有同学留言问到：在select count(?) from t这样的查询语句里面，count(\"\n        ),\n        _c(\"em\", [\n          _vm._v(\n            \")、count(主键id)、count(字段)和count(1)等不同用法的性能，有哪些差别。今天谈到了count(\"\n          ),\n        ]),\n        _vm._v(\n          \")的性能问题，我就借此机会和你详细说明一下这几种用法的性能差别。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"需要注意的是，下面的讨论还是基于InnoDB引擎的。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"这里，首先你要弄清楚count()的语义。\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"count()是一个聚合函数，对于返回的结果集，一行行地判断，如果count函数的参数不是NULL，累计值就加1，否则不加。最后返回累计值。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"所以，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"count(*)、count(主键id)和count(1) 都表示返回满足条件的结果集的总行数\"\n          ),\n        ]),\n        _vm._v(\"；而\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"count(字段），则表示返回满足条件的数据行里面，参数“字段”不为NULL的总个数。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"至于分析性能差别的时候，你可以记住这么几个原则：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [_c(\"strong\", [_vm._v(\"server层要什么就给什么；\")])]),\n        _vm._v(\" \"),\n        _c(\"li\", [_vm._v(\"InnoDB只给必要的值；\")]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\n            \"现在的优化器只优化了count(*)的语义为“取行数”，其他“显而易见”的优化并没有做。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"这是什么意思呢？接下来，我们就一个个地来看看。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"对于count(主键id)来说\")]),\n        _vm._v(\"，InnoDB引擎会遍历整张表，\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"把每一行的id值都取出来，返回给server层。server层拿到id后，判断是不可能为空的，就按行累加。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"对于count(1)来说\")]),\n        _vm._v(\"，InnoDB引擎\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"遍历整张表，但不取值。server层对于返回的每一行，放一个数字“1”进去，判断是不可能为空的，按行累加。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"单看这两个用法的差别的话，你能对比出来，count(1)执行得要比count(主键id)快。因为从引擎返回id会涉及到解析数据行，以及拷贝字段值的操作。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_c(\"strong\", [_vm._v(\"对于count(字段)来说\")]), _vm._v(\"：\")]),\n      _vm._v(\" \"),\n      _c(\"ol\", [\n        _c(\"li\", [\n          _vm._v(\"如果这个\"),\n          _c(\"strong\", [\n            _vm._v(\n              \"字段是定义为not null的话，一行行地从记录里面读出这个字段，判断不能为null，按行累加；\"\n            ),\n          ]),\n        ]),\n        _vm._v(\" \"),\n        _c(\"li\", [\n          _vm._v(\"如果这个\"),\n          _c(\"strong\", [\n            _vm._v(\n              \"字段定义允许为null，那么执行的时候，判断到有可能是null，还要把值取出来再判断一下，不是null才累加。\"\n            ),\n          ]),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"也就是前面的第一条原则，server层要什么字段，InnoDB就返回什么字段。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [_vm._v(\"但是count(*)是例外\")]),\n        _vm._v(\n          \"，并不会把全部字段取出来，而是专门做了优化，不取值。count(*)肯定不是null，按行累加。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"看到这里，你一定会说，优化器就不能自己判断一下吗，主键id肯定非空啊，为什么不能按照count(*)来处理，多么简单的优化啊。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"当然，MySQL专门针对这个语句进行优化，也不是不可以。但是这种需要专门优化的情况太多了，而且MySQL已经优化过count(*)了，你直接使用这种用法就可以了。\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"所以结论是：按照效率排序的话，count(字段)<count(主键id)<count(1)≈count(\"\n          ),\n          _c(\"code\", [_vm._v(\"*\")]),\n          _vm._v(\")，所以我建议你，尽量使用count(*)。\"),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"h2\", { attrs: { id: \"小结\" } }, [\n        _c(\"a\", { staticClass: \"header-anchor\", attrs: { href: \"#小结\" } }, [\n          _vm._v(\"#\"),\n        ]),\n        _vm._v(\" 小结\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"今天，我和你聊了聊MySQL中获得表行数的两种方法。我们提到了\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"在不同引擎中count(*)的实现方式是不一样的，也分析了用缓存系统来存储计数值存在的问题。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"其实，把计数放在Redis里面，不能够保证计数和MySQL表里的数据精确一致的原因，是\"\n        ),\n        _c(\"strong\", [\n          _vm._v(\n            \"这两个不同的存储构成的系统，不支持分布式事务，无法拿到精确一致的视图\"\n          ),\n        ]),\n        _vm._v(\"。而把计数值也放在MySQL中，就解决了一致性视图的问题。\"),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"InnoDB引擎支持事务，我们\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"利用好事务的原子性和隔离性，就可以简化在业务开发时的逻辑。这也是InnoDB引擎备受青睐的原因之一。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [_vm._v(\"最后，又到了今天的思考题时间了。\")]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\n          \"在刚刚讨论的方案中，我们用了事务来确保计数准确。由于事务可以保证中间结果不被别的事务读到，因此修改计数值和插入新记录的顺序是不影响逻辑结果的。但是，从并发系统性能的角度考虑，你觉得在这个事务序列里，应该先插入操作记录，还是应该先更新计数表呢？\"\n        ),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _c(\"strong\", [\n          _vm._v(\n            \"从并发系统性能的角度考虑，应该先插入操作记录，再更新计数表。\"\n          ),\n        ]),\n      ]),\n      _vm._v(\" \"),\n      _c(\"p\", [\n        _vm._v(\"知识点在《行锁功过：怎么减少行锁对性能的影响？》\\n因为\"),\n        _c(\"strong\", [\n          _vm._v(\n            \"更新计数表涉及到行锁的竞争，先插入再更新能最大程度地减少了事务之间的锁等待，提升了并发度。\"\n          ),\n        ]),\n      ]),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"],"mappings":"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"}]}