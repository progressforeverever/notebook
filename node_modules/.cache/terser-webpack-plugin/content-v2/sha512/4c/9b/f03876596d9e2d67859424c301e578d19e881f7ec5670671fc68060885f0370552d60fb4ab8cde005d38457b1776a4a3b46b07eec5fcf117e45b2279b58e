{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[147],{475:function(s,t,a){\"use strict\";a.r(t);var n=a(4),r=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"elatisearch\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#elatisearch\"}},[s._v(\"#\")]),s._v(\" Elatisearch\")]),s._v(\" \"),t(\"p\",[s._v(\"之前听到Elatisearch，最常见的就是搜索引擎，所以来看一下。\")]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch结合kibana、Logstash、Beats，也就是elastic stack（ELK）。被广泛应用在日志数据分析、实时监控等领域。\")]),s._v(\" \"),t(\"p\",[s._v(\"es支持分布式，可水平扩展 ,提供\"),t(\"strong\",[s._v(\"Restful接口\")]),s._v(\"，可被任何语言调用\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es01.png\"}}),s._v(\" \"),t(\"h2\",{attrs:{id:\"初识倒排索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#初识倒排索引\"}},[s._v(\"#\")]),s._v(\" 初识倒排索引\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"正向索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#正向索引\"}},[s._v(\"#\")]),s._v(\" 正向索引\")]),s._v(\" \"),t(\"p\",[s._v(\"最经典的就是关系型数据库\")]),s._v(\" \"),t(\"p\",[s._v(\"那么什么是正向索引呢？例如给下表（tb_goods）中的id创建索引：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es02.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"如果是根据id查询，那么直接走索引，查询速度非常快。\")]),s._v(\" \"),t(\"p\",[s._v(\"但如果是基于title做模糊查询，只能是逐行扫描数据，流程如下：\")]),s._v(\" \"),t(\"p\",[s._v(\"1）用户搜索数据，条件是title符合\"),t(\"code\",[s._v('\"%手机%\"')])]),s._v(\" \"),t(\"p\",[s._v(\"2）\"),t(\"strong\",[s._v(\"逐行获取数据\")]),s._v(\"，比如id为1的数据\")]),s._v(\" \"),t(\"p\",[s._v(\"3）判断数据中的title是否符合用户搜索条件\")]),s._v(\" \"),t(\"p\",[s._v(\"4）如果符合则放入结果集，不符合则丢弃。回到步骤1\")]),s._v(\" \"),t(\"p\",[s._v(\"逐行扫描，也就是\"),t(\"strong\",[s._v(\"全表扫描\")]),s._v(\"，随着数据量增加，其\"),t(\"strong\",[s._v(\"查询效率也会越来越低\")]),s._v(\"。当数据量达到数百万时，就是一场灾难。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"倒排索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#倒排索引\"}},[s._v(\"#\")]),s._v(\" 倒排索引\")]),s._v(\" \"),t(\"p\",[s._v(\"倒排索引中有两个非常重要的概念：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"文档（\"),t(\"code\",[s._v(\"Document\")]),s._v(\"）：用来搜索的数据，其中的每一条数据就是一个文档。例如一个网页、一个商品信息\")]),s._v(\" \"),t(\"li\",[s._v(\"词条（\"),t(\"code\",[s._v(\"Term\")]),s._v(\"）：对文档数据或用户搜索数据，利用某种\"),t(\"strong\",[s._v(\"算法分词(所以到时候就会要有个分词器)\")]),s._v(\"，得到的具备含义的词语就是词条。例如：我是中国人，就可以分为：\"),t(\"code\",[s._v(\"我、是、中国人、中国、国人\")]),s._v(\"这样的几个词条\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"创建倒排索引\")]),s._v(\"是对正向索引的一种特殊处理，流程如下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"将每一个文档的数据利用算法分词，得到一个个词条\")]),s._v(\" \"),t(\"li\",[s._v(\"创建表，每行数据包括词条、词条所在文档id、位置等信息\")]),s._v(\" \"),t(\"li\",[s._v(\"因为词条唯一性，可以给词条创建索引，例如\"),t(\"strong\",[s._v(\"hash表结构索引\")])])]),s._v(\" \"),t(\"p\",[s._v(\"如图：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es03.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"倒排索引的\"),t(\"strong\",[s._v(\"搜索流程\")]),s._v('如下（以搜索\"华为手机\"为例）：')]),s._v(\" \"),t(\"p\",[s._v(\"1）用户输入条件\"),t(\"code\",[s._v('\"华为手机\"')]),s._v(\"进行搜索。\")]),s._v(\" \"),t(\"p\",[s._v(\"2）对用户输入内容\"),t(\"strong\",[s._v(\"分词\")]),s._v(\"，得到词条：\"),t(\"code\",[s._v(\"华为\")]),s._v(\"、\"),t(\"code\",[s._v(\"手机\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"3）拿着\"),t(\"strong\",[s._v(\"词条在倒排索引中查找\")]),s._v(\"，可以得到包含词条的文档id：1、2、3。\")]),s._v(\" \"),t(\"p\",[s._v(\"4）拿着文档id到正向索引中查找具体文档。\")]),s._v(\" \"),t(\"p\",[s._v(\"如图：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es11.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"虽然要先查询倒排索引，再查询倒排索引，但是无论是词条、还是文档id都建立了索引，查询速度非常快！无需全表扫描。\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"这里相当于\"),t(\"strong\",[s._v(\"实际上查了两次\")]),s._v(\"，一次在es中查，查到id，再用id去MySQL中查结果\")]),s._v(\" \"),t(\"p\",[s._v(\"所以这里引入了两个数据库，那之间的数据一致性就很重要了（埋下个伏笔）\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"基本概念\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本概念\"}},[s._v(\"#\")]),s._v(\" 基本概念\")]),s._v(\" \"),t(\"p\",[s._v(\"es本质上也是个数据库，所以一些概念和MySQL类似\")]),s._v(\" \"),t(\"table\",[t(\"thead\",[t(\"tr\",[t(\"th\",[t(\"strong\",[s._v(\"MySQL\")])]),s._v(\" \"),t(\"th\",[t(\"strong\",[s._v(\"Elasticsearch\")])]),s._v(\" \"),t(\"th\",[t(\"strong\",[s._v(\"说明\")])])])]),s._v(\" \"),t(\"tbody\",[t(\"tr\",[t(\"td\",[s._v(\"Table\")]),s._v(\" \"),t(\"td\",[s._v(\"Index\")]),s._v(\" \"),t(\"td\",[s._v(\"索引(index)，就是文档的集合，类似数据库的表(table)\")])]),s._v(\" \"),t(\"tr\",[t(\"td\",[s._v(\"Row\")]),s._v(\" \"),t(\"td\",[s._v(\"Document\")]),s._v(\" \"),t(\"td\",[s._v(\"文档（Document），就是一条条的数据，类似数据库中的行（Row），文档都是JSON格式\")])]),s._v(\" \"),t(\"tr\",[t(\"td\",[s._v(\"Column\")]),s._v(\" \"),t(\"td\",[s._v(\"Field\")]),s._v(\" \"),t(\"td\",[s._v(\"字段（Field），就是JSON文档中的字段，类似数据库中的列（Column）\")])]),s._v(\" \"),t(\"tr\",[t(\"td\",[s._v(\"Schema\")]),s._v(\" \"),t(\"td\",[s._v(\"Mapping\")]),s._v(\" \"),t(\"td\",[s._v(\"Mapping（映射）是索引中文档的约束，例如字段类型约束。类似数据库的表结构（Schema）\")])]),s._v(\" \"),t(\"tr\",[t(\"td\",[s._v(\"SQL\")]),s._v(\" \"),t(\"td\",[s._v(\"DSL\")]),s._v(\" \"),t(\"td\",[s._v(\"DSL是elasticsearch提供的JSON风格的请求语句，用来操作elasticsearch，实现CRUD\")])])])]),s._v(\" \"),t(\"p\",[s._v(\"Index是一类文档的集合，Index下有许多条文档，文档有字段\")]),s._v(\" \"),t(\"p\",[s._v(\"Index的结构称之为Mapping，操作es的语句称之为DSL\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"Mysql：擅长事务类型操作，可以确保数据的安全和一致性\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Elasticsearch：擅长海量数据的搜索、分析、计算\")])])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es04.png\"}}),s._v(\" \"),t(\"h2\",{attrs:{id:\"基本工具\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本工具\"}},[s._v(\"#\")]),s._v(\" 基本工具\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"es的安装，直接docker拉一个中间件是最快的（貌似这样比较方便）\")]),s._v(\" \"),t(\"li\",[s._v(\"Kibana    kibana可以给我们提供一个elasticsearch的\"),t(\"strong\",[s._v(\"可视化界面\")]),s._v(\"，便于我们学习。\")]),s._v(\" \"),t(\"li\",[s._v(\"分词器    处理中文的分词   \"),t(\"strong\",[s._v(\"IK分词器\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"ik分词器包含两种模式：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"ik_smart：最少切分，粗粒度\")]),s._v(\" \"),t(\"li\",[s._v(\"ik_max_word：最细切分，细粒度\")]),s._v(\" \"),t(\"li\",[s._v(\"ik分词器还可以对一些词做自拓展（这样玩梗的那些词也就能被分出来了）\")]),s._v(\" \"),t(\"li\",[s._v(\"同理，也可以对一些词做禁用，这样就搜不到了\")])])])])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"dsl语法操作elatisearch\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#dsl语法操作elatisearch\"}},[s._v(\"#\")]),s._v(\" DSL语法操作Elatisearch\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"mapping-索引库\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mapping-索引库\"}},[s._v(\"#\")]),s._v(\" mapping 索引库\")]),s._v(\" \"),t(\"p\",[s._v(\"类似于MySQL,首先肯定是建表，得先操作mapping，mapping是对索引库中文档的约束\")]),s._v(\" \"),t(\"p\",[s._v(\"mapping是对索引库中文档的约束，常见的mapping属性包括：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"type：字段数据类型，常见的简单类型有：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"字符串：\"),t(\"strong\",[s._v(\"text（可分词的文本\")]),s._v(\"）、\"),t(\"strong\",[s._v(\"keyword（不可分词）\")]),s._v(\"（精确值，例如：品牌、国家、ip地址）\")]),s._v(\" \"),t(\"li\",[s._v(\"数值：long、integer、short、byte、double、float、\")]),s._v(\" \"),t(\"li\",[s._v(\"布尔：boolean\")]),s._v(\" \"),t(\"li\",[s._v(\"日期：date\")]),s._v(\" \"),t(\"li\",[s._v(\"对象：object\")])])])]),s._v(\" \"),t(\"p\",[s._v(\"注意，字符串在es中分为text和keyword\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"index：是否创建索引，默认为true\")]),s._v(\" \"),t(\"li\",[s._v(\"analyzer：使用哪种分词器   （\"),t(\"strong\",[s._v(\"指定分词器\")]),s._v(\"）,\"),t(\"strong\",[s._v(\"只有字符串中的keyword才用分词\")])]),s._v(\" \"),t(\"li\",[s._v(\"properties：该字段的子字段\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"基本的crud\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#基本的crud\"}},[s._v(\"#\")]),s._v(\" 基本的CRUD\")]),s._v(\" \"),t(\"p\",[s._v(\"创建索引库\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"请求方式：PUT\")]),s._v(\" \"),t(\"li\",[s._v(\"请求路径：/索引库名，可以自定义\")]),s._v(\" \"),t(\"li\",[s._v(\"请求参数：mapping映射\")])]),s._v(\" \"),t(\"p\",[s._v(\"格式：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"PUT /索引库名称\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"mappings\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段名\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"text\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"analyzer\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"ik_smart\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段名2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"keyword\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"index\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"false\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段名3\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"子字段\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"keyword\"')]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ...略\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"示例\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"PUT /heima\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"mappings\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"info\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"text\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"analyzer\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"ik_smart\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"email\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"keyword\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"index\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"falsae\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"firstName\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"keyword\"')]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ... 略\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"mapping\\n\"),t(\"ul\",[t(\"li\",[s._v(\"properties\\n\"),t(\"ul\",[t(\"li\",[s._v(\"字段名及其类型啊要不要分词啊之类的\")])])])])])]),s._v(\" \"),t(\"p\",[s._v(\"查询索引库\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"基本语法\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"请求方式：GET\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"请求路径：/索引库名\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"请求参数：无\")])])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"格式\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"GET /索引库名\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"修改索引库\")]),s._v(\" \"),t(\"p\",[s._v(\"倒排索引结构虽然不复杂，但是一旦数据结构改变（比如改变了分词器），就需要重新创建倒排索引，这简直是灾难。因此索引库\"),t(\"strong\",[s._v(\"一旦创建，无法修改mapping\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"虽然无法修改mapping中已有的字段，但是却允许添加新的字段到mapping中，因为不会对倒排索引产生影响。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法说明\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"PUT /索引库名/_mapping\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"新字段名\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"integer\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"删除索引库\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"请求方式：DELETE\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"请求路径：/索引库名\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"请求参数：无\")])])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"格式：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v(\"DELETE /索引库名\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"创建索引库：PUT /索引库名\")]),s._v(\" \"),t(\"li\",[s._v(\"查询索引库：GET /索引库名\")]),s._v(\" \"),t(\"li\",[s._v(\"删除索引库：DELETE /索引库名\")]),s._v(\" \"),t(\"li\",[s._v(\"添加字段：PUT /索引库名/_mapping\")])]),s._v(\" \"),t(\"p\",[s._v(\"（现在发现\"),t(\"strong\",[s._v(\"restful风格的好处了吧\")]),s._v(\"，🤭）\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"copy-to属性\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#copy-to属性\"}},[s._v(\"#\")]),s._v(\" copy_to属性\")]),s._v(\" \"),t(\"p\",[s._v(\"es默认index为true，参与索引，也就参与了搜索，那这样很多个字段参与搜索，效率就会降低\")]),s._v(\" \"),t(\"p\",[s._v(\"就是原本有多个字段参与搜索\\n而且用户也需要多个字段一起进行搜索\\n但是实际上通过一个字段进行搜索就更快\\n这里就有一个矛盾\\n所以就在那些能够搜索的字段中加入copy_to属性，这样以后就去那个指定的字段，这样从那里开始搜索\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"text\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"analyzer\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"ik_max_word\"')]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"keyword\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"copy_to\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"all\"')]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"这样到时候搜索的时候就是从all来搜索\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"文档操作\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#文档操作\"}},[s._v(\"#\")]),s._v(\" 文档操作\")]),s._v(\" \"),t(\"p\",[s._v(\"新增文档\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"POST /索引库名/_doc/文档id\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段3\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"子属性1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值3\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"子属性2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值4\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ...\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"示例：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"POST /heima/_doc/\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"info\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"黑马程序员Java讲师\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"email\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"zy@itcast.cn\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"firstName\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"云\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"lastName\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"赵\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\")])]),t(\"p\",[s._v(\"查询文档\")]),s._v(\" \"),t(\"p\",[s._v(\"根据rest风格，新增是post，查询应该是get，不过查询一般都需要条件，这里我们把文档id带上。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"索引库名称\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"/_doc/\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"通过kibana查看数据：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-js line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"GET\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"heima\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"_doc\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"删除文档\")]),s._v(\" \"),t(\"p\",[s._v(\"删除使用DELETE请求，同样，需要根据id进行删除：\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-js line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-js\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"DELETE\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"索引库名\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"_doc\"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"/\")]),s._v(\"id值\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"示例：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//根据id删除数据\")]),s._v(\"\\nDELETE /heima/_doc/\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\")])]),t(\"p\",[s._v(\"修改文档\")]),s._v(\" \"),t(\"p\",[s._v(\"修改有两种方式：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"全量修改：直接覆盖原来的文档\")]),s._v(\" \"),t(\"li\",[s._v(\"增量修改：修改文档中的部分字段\")])]),s._v(\" \"),t(\"p\",[s._v(\"全量修改是覆盖原来的文档，其本质是：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"根据指定的id删除文档\")]),s._v(\" \"),t(\"li\",[s._v(\"新增一个相同id的文档\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"注意\")]),s._v(\"：如果根据id删除时，id不存在，第二步的新增也会执行，也就从修改变成了新增操作了。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"PUT /\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"索引库名\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"/_doc/文档id\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"值2\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ... 略\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"示例：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"PUT /heima/_doc/\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"info\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"黑马程序员高级Java讲师\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"email\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"zy@itcast.cn\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"firstName\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"云\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"lastName\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"赵\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\")])]),t(\"p\",[s._v(\"增量修改是只修改指定id匹配的文档中的部分字段。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"POST /\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"索引库名\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"/_update/文档id\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"doc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n         \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"字段名\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"新的值\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"示例：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"POST /heima/_update/\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"doc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"email\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"ZhaoYun@itcast.cn\"')]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"ul\",[t(\"li\",[s._v(\"创建文档：POST /{索引库名}/_doc/文档id   { json文档 }\")]),s._v(\" \"),t(\"li\",[s._v(\"查询文档：GET /{索引库名}/_doc/文档id\")]),s._v(\" \"),t(\"li\",[s._v(\"删除文档：DELETE /{索引库名}/_doc/文档id\")]),s._v(\" \"),t(\"li\",[s._v(\"修改文档：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"全量修改：PUT /{索引库名}/_doc/文档id { json文档 }\")]),s._v(\" \"),t(\"li\",[s._v('增量修改：POST /{索引库名}/_update/文档id { \"doc\": {字段}}')])])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"搜索\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#搜索\"}},[s._v(\"#\")]),s._v(\" 搜索\")]),s._v(\" \"),t(\"p\",[s._v(\"es最常用的就是搜索引擎了，所以搜索功能是核心\")]),s._v(\" \"),t(\"p\",[s._v(\"查询语法：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"查询类型\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"查询条件\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"条件值\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"我们以查询所有为例，其中：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"查询类型为match_all\")]),s._v(\" \"),t(\"li\",[s._v(\"没有查询条件\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 查询所有\")]),s._v(\"\\nGET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"其它查询无非就是\"),t(\"strong\",[s._v(\"查询类型\")]),s._v(\"、\"),t(\"strong\",[s._v(\"查询条件\")]),s._v(\"的变化。\")]),s._v(\" \"),t(\"p\",[s._v(\"然后现在看一下查询类型：\")]),s._v(\" \"),t(\"p\",[s._v(\"Elasticsearch提供了基于JSON的DSL（\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Domain Specific Language\"),t(\"OutboundLink\")],1),s._v(\"）来定义查询。常见的查询类型包括：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"查询所有\")]),s._v(\"：查询出所有数据，一般测试用。例如：match_all\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"全文检索（full text）查询\")]),s._v(\"：利用分词器对用户输入内容分词，然后去倒排索引库中匹配。例如：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"match_query\")]),s._v(\" \"),t(\"li\",[s._v(\"multi_match_query\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"精确查询\")]),s._v(\"：根据精确词条值查找数据，一般是查找keyword、数值、日期、boolean等类型字段。例如：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"ids\")]),s._v(\" \"),t(\"li\",[s._v(\"range\")]),s._v(\" \"),t(\"li\",[s._v(\"term\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"地理（geo）查询\")]),s._v(\"：根据经纬度查询。例如：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"geo_distance\")]),s._v(\" \"),t(\"li\",[s._v(\"geo_bounding_box\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"复合（compound）查询\")]),s._v(\"：复合查询可以将上述各种查询条件组合起来，合并查询条件。例如：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"bool\")]),s._v(\" \"),t(\"li\",[s._v(\"function_score\")])])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"全文检索查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#全文检索查询\"}},[s._v(\"#\")]),s._v(\" 全文检索查询\")]),s._v(\" \"),t(\"p\",[s._v(\"全文检索查询的基本流程如下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"对用户搜索的内容做\"),t(\"strong\",[s._v(\"分词\")]),s._v(\"，得到词条\")]),s._v(\" \"),t(\"li\",[s._v(\"根据词条去倒排索引库中匹配，得到文档id\")]),s._v(\" \"),t(\"li\",[s._v(\"根据文档id找到文档，返回给用户\")])]),s._v(\" \"),t(\"p\",[s._v(\"比较常用的场景包括：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"商城的输入框搜索\")]),s._v(\" \"),t(\"li\",[s._v(\"百度\"),t(\"strong\",[s._v(\"输入框搜索\")])])]),s._v(\" \"),t(\"p\",[s._v(\"例如京东：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es05.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"因为是拿着词条去匹配，因此\"),t(\"strong\",[s._v(\"参与搜索的字段也必须是可分词的text类型的字段\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"常见的全文检索查询包括：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"match查询：单字段查询\")]),s._v(\" \"),t(\"li\",[s._v(\"multi_match查询：多字段查询，任意一个字段符合条件就算符合查询条件\")])]),s._v(\" \"),t(\"p\",[s._v(\"match查询语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"TEXT\"')]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"mulit_match语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"multi_match\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"TEXT\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"fields\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"FIELD1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\" FIELD12\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\")])]),t(\"h4\",{attrs:{id:\"精准查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#精准查询\"}},[s._v(\"#\")]),s._v(\" 精准查询\")]),s._v(\" \"),t(\"p\",[s._v(\"精确查询一般是查找keyword、数值、日期、boolean等类型字段。所以\"),t(\"strong\",[s._v(\"不会\")]),s._v(\"对搜索条件分词。常见的有：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"term：根据词条精确值查询\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"range：根据值的范围查询\")])])]),s._v(\" \"),t(\"p\",[s._v(\"因为精确查询的字段搜是不分词的字段，因此查询的条件也必须是\"),t(\"strong\",[s._v(\"不分词\")]),s._v(\"的词条。查询时，用户输入的内容跟\"),t(\"strong\",[s._v(\"自动值完全匹配时\")]),s._v(\"才认为符合条件。如果用户输入的内容过多，反而搜索不到数据。\")]),s._v(\" \"),t(\"p\",[s._v(\"语法说明：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// term查询\")]),s._v(\"\\nGET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"term\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"value\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"VALUE\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"range范围查询\")]),s._v(\" \"),t(\"p\",[s._v(\"范围查询，一般应用在对数值类型做范围过滤的时候。比如做价格范围过滤。\")]),s._v(\" \"),t(\"p\",[s._v(\"基本语法：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// range查询\")]),s._v(\"\\nGET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"range\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"gte\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 这里的gte代表大于等于，gt则代表大于\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"lte\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// lte代表小于等于，lt则代表小于\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\")])]),t(\"h4\",{attrs:{id:\"地理坐标查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#地理坐标查询\"}},[s._v(\"#\")]),s._v(\" 地理坐标查询\")]),s._v(\" \"),t(\"p\",[s._v(\"略，用到再写\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"复合查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#复合查询\"}},[s._v(\"#\")]),s._v(\" 复合查询\")]),s._v(\" \"),t(\"p\",[s._v(\"复合（compound）查询：复合查询可以将其它简单查询组合起来，实现更复杂的搜索逻辑。常见的有两种：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"fuction score：算分函数查询，可以控制文档相关性算分，控制文档排名\")]),s._v(\" \"),t(\"li\",[s._v(\"bool query：布尔查询，利用逻辑关系组合多个其它的查询，实现复杂搜索\")])]),s._v(\" \"),t(\"p\",[s._v(\"当我们利用match查询时，文档结果会根据与搜索词条的\"),t(\"strong\",[s._v(\"关联度打分（_score）\")]),s._v(\"，返回结果时按照分值降序排列。\")]),s._v(\" \"),t(\"p\",[s._v('例如，我们搜索 \"虹桥如家\"，结果如下：')]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_score\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"17.850193\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_source\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"虹桥如家酒店真不错\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_score\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"12.259849\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_source\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"外滩如家酒店真不错\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_score\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"11.91091\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_source\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"迪士尼如家酒店真不错\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\")])]),t(\"p\",[s._v(\"elasticsearch会根据词条和文档的相关度做打分\")]),s._v(\" \"),t(\"h5\",{attrs:{id:\"算分函数\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#算分函数\"}},[s._v(\"#\")]),s._v(\" 算分函数\")]),s._v(\" \"),t(\"p\",[s._v(\"根据相关度打分是比较合理的需求，但\"),t(\"strong\",[s._v(\"合理的不一定是产品经理需要\")]),s._v(\"的。\")]),s._v(\" \"),t(\"p\",[s._v(\"以百度为例，你搜索的结果中，并不是相关度越高排名越靠前，而是谁掏的钱多排名就越靠前。如图：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es06.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"要想认为控制相关性算分，就需要利用elasticsearch中的function score 查询了。\")]),s._v(\" \"),t(\"p\",[s._v(\"使用 function score query，可以修改文档的相关性算分（query score），根据新得到的算分排序。\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es07.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"function score 查询中包含四部分内容：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"原始查询\")]),s._v(\"条件：\"),t(\"strong\",[s._v(\"query部分\")]),s._v(\"，基于这个条件搜索文档，并且基于BM25算法给文档打分，\"),t(\"strong\",[s._v(\"原始算分\")]),s._v(\"（query score)\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"过滤条件\")]),s._v(\"：filter部分，符合该条件的文档才会重新算分\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"算分函数\")]),s._v(\"：符合filter条件的文档要根据这个函数做运算，得到的\"),t(\"strong\",[s._v(\"函数算分\")]),s._v(\"（function score），有四种函数\\n\"),t(\"ul\",[t(\"li\",[s._v(\"weight：函数结果是常量\")]),s._v(\" \"),t(\"li\",[s._v(\"field_value_factor：以文档中的某个字段值作为函数结果\")]),s._v(\" \"),t(\"li\",[s._v(\"random_score：以随机数作为函数结果\")]),s._v(\" \"),t(\"li\",[s._v(\"script_score：自定义算分函数算法\")])])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"运算模式\")]),s._v(\"：\"),t(\"strong\",[s._v(\"算分函数的结果、原始查询的相关性算分，两者之间的运算方式\")]),s._v(\"，包括：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"multiply：相乘\")]),s._v(\" \"),t(\"li\",[s._v(\"replace：用function score替换query score\")]),s._v(\" \"),t(\"li\",[s._v(\"其它，例如：sum、avg、max、min\")])])])]),s._v(\" \"),t(\"p\",[s._v(\"因此，其中的关键点是：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"过滤条件：决定哪些文档的算分被修改\")]),s._v(\" \"),t(\"li\",[s._v(\"算分函数：决定函数算分的算法\")]),s._v(\" \"),t(\"li\",[s._v(\"运算模式：决定最终算分结果\")])]),s._v(\" \"),t(\"p\",[s._v(\"总结一下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"query的类型是function_score\")]),s._v(\" \"),t(\"li\",[s._v(\"先查出原始的，（基础），这是基础分\")]),s._v(\" \"),t(\"li\",[s._v(\"然后functions   过滤，算分函数，\")]),s._v(\" \"),t(\"li\",[s._v(\"最后两者之间的运算，可以相加或者相乘或者用自己定义的函数\")])]),s._v(\" \"),t(\"p\",[s._v(\"需求：给“如家”这个品牌的酒店排名靠前一些\")]),s._v(\" \"),t(\"p\",[s._v(\"翻译一下这个需求，转换为之前说的四个要点：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"原始条件：不确定，可以任意变化\")]),s._v(\" \"),t(\"li\",[s._v('过滤条件：brand = \"如家\"')]),s._v(\" \"),t(\"li\",[s._v(\"算分函数：可以简单粗暴，直接给固定的算分结果，weight\")]),s._v(\" \"),t(\"li\",[s._v(\"运算模式：比如求和\")])]),s._v(\" \"),t(\"p\",[s._v(\"因此最终的DSL语句如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"function_score\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"  .... \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 原始查询，可以是任意条件\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"functions\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 算分函数\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"filter\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 满足的条件，品牌必须是如家\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"term\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n              \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"如家\"')]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"weight\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"2\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 算分权重为2\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"boost_mode\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"sum\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 加权模式，求和\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\")])]),t(\"h5\",{attrs:{id:\"布尔查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#布尔查询\"}},[s._v(\"#\")]),s._v(\" 布尔查询\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"也称之为组合查询\")])]),s._v(\" \"),t(\"p\",[s._v(\"布尔查询是一个或多个查询子句的组合，每一个子句就是一个\"),t(\"strong\",[s._v(\"子查询\")]),s._v(\"。子查询的组合方式有：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"must\")]),s._v(\"：必须匹配每个子查询，类似“与”\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"should\")]),s._v(\"：选择性匹配子查询，类似“或”\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"must_not\")]),s._v(\"：必须不匹配，\"),t(\"strong\",[s._v(\"不参与算分\")]),s._v(\"，类似“非”\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"filter\")]),s._v(\"：必须匹配，\"),t(\"strong\",[s._v(\"不参与算分\")])])]),s._v(\" \"),t(\"p\",[s._v(\"比如在搜索酒店时，除了关键字搜索外，我们还可能根据品牌、价格、城市等字段做过滤：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es08.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"每一个不同的字段，其查询的条件、方式都不一样，必须是多个不同的查询，而要组合这些查询，就必须用bool查询了。\")]),s._v(\" \"),t(\"p\",[s._v(\"需要注意的是，搜索时，参与\"),t(\"strong\",[s._v(\"打分的字段越多，查询的性能也越差\")]),s._v(\"。因此这种多条件查询时，建议这样做：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"搜索框的关键字搜索，是全文检索查询，使用must查询，参与算分\")]),s._v(\" \"),t(\"li\",[s._v(\"其它过滤条件，采用filter查询。不参与算分\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"bool\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"must\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"term\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"city\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"上海\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"should\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"term\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"皇冠假日\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"term\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"华美达\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"must_not\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"range\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"lte\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"500\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"filter\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"range\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"score\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"gte\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"45\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"结果处理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#结果处理\"}},[s._v(\"#\")]),s._v(\" 结果处理\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"排序\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#排序\"}},[s._v(\"#\")]),s._v(\" 排序\")]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch默认是根据相关度算分（_score）来排序，但是也支持自定义方式对搜索\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/sort-search-results.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"结果排序\"),t(\"OutboundLink\")],1),s._v(\"。可以排序字段类型有：keyword类型、数值类型、地理坐标类型、日期类型等。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"语法\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /indexName/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"desc\"')]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 排序字段、排序方式ASC、DESC\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"排序条件是一个数组\")]),s._v(\"，也就是可以写多个排序条件。按照声明的顺序，当第一个条件相等时，再按照第二个条件排序，以此类推\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"分页\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分页\"}},[s._v(\"#\")]),s._v(\" 分页\")]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch 默认情况下只返回top10的数据。而如果要查询更多数据就需要修改分页参数了。elasticsearch中通过修改\"),t(\"strong\",[s._v(\"from、size参数\")]),s._v(\"来控制要返回的分页结果：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"from：从第几个文档开始\")]),s._v(\" \"),t(\"li\",[s._v(\"size：总共查询几个文档\")])]),s._v(\" \"),t(\"p\",[s._v(\"类似于mysql中的\"),t(\"code\",[s._v(\"limit ?, ?\")])]),s._v(\" \"),t(\"p\",[s._v(\"分页的基本语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"from\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 分页开始的位置，默认为0\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 期望获取的文档总数\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"然后这里就会有个分页的问题\")]),s._v(\" \"),t(\"p\",[s._v(\"要查询990~1000的数据，查询逻辑要这么写：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match_all\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"from\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"990\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 分页开始的位置，默认为0\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 期望获取的文档总数\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"sort\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"这里是查询990开始的数据，也就是 第990~第1000条 数据。\")]),s._v(\" \"),t(\"p\",[s._v(\"不过，elasticsearch内部分页时，\"),t(\"strong\",[s._v(\"必须先查询 0~1000条，然后截取其中的990 ~ 1000的这10条\")])]),s._v(\" \"),t(\"p\",[s._v(\"这样就会有问题了，在集群环境下，假设有5个集群，要查询top1000，并不是每个节点查询200条就可以了。\")]),s._v(\" \"),t(\"p\",[s._v(\"因为节点A的TOP200，在另一个节点可能排到10000名以外了。\")]),s._v(\" \"),t(\"p\",[s._v(\"因此要想获取整个集群的TOP1000，\"),t(\"strong\",[s._v(\"必须先查询出每个节点的TOP1000，汇总结果后，重新排名，重新截取TOP1000。\")])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es09.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"当查询分页深度较大时，汇总数据过多，对内存和CPU会产生非常大的压力，因此elasticsearch会禁止from+ size 超过10000的请求。\")]),s._v(\" \"),t(\"p\",[s._v(\"针对深度分页，ES提供了两种解决方案，\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/paginate-search-results.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"官方文档\"),t(\"OutboundLink\")],1),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"search after：分页时需要排序，原理是从上一次的排序值开始，查询下一页数据。官方推荐使用的方式。\")]),s._v(\" \"),t(\"li\",[s._v(\"scroll：原理将排序后的文档id形成快照，保存在内存。官方已经不推荐使用。\")])]),s._v(\" \"),t(\"p\",[s._v(\"分页查询的常见实现方案以及优缺点：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"from + size\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：支持随机翻页\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：深度分页问题，默认查询上限（from + size）是10000\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：百度、京东、谷歌、淘宝这样的随机翻页搜索\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"after search\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：没有查询上限（单次查询的size不超过10000）\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：只能向后逐页查询，不支持随机翻页\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：没有随机翻页需求的搜索，例如手机向下滚动翻页\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"code\",[s._v(\"scroll\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：没有查询上限（单次查询的size不超过10000）\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：会有额外内存消耗，并且搜索结果是非实时的\")]),s._v(\" \"),t(\"li\",[s._v(\"场景：海量数据的获取和迁移。从ES7.1开始不推荐，建议用 after search方案。\")])])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"高亮\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高亮\"}},[s._v(\"#\")]),s._v(\" 高亮\")]),s._v(\" \"),t(\"p\",[s._v(\"什么是高亮显示呢？\")]),s._v(\" \"),t(\"p\",[s._v(\"我们在百度，京东搜索时，关键字会变成红色，比较醒目，这叫高亮显示：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/es10.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"高亮显示的实现步骤：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"code\",[s._v('\"highlight\"')]),s._v(\" \"),t(\"code\",[s._v(\"field\")]),s._v(\"标注字段\")]),s._v(\" \"),t(\"li\",[s._v(\"给文档中的所有关键字都添加一个标签，例如\"),t(\"code\",[s._v(\"<em>\")]),s._v(\"标签\")]),s._v(\" \"),t(\"li\",[s._v(\"页面给\"),t(\"code\",[s._v(\"<em>\")]),s._v(\"标签编写CSS样式\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"高亮的语法\")]),s._v(\"：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"match\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"TEXT\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 查询条件，高亮一定要使用全文检索查询\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"highlight\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"fields\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 指定要高亮的字段\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"FIELD\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"pre_tags\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"<em>\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用来标记高亮字段的前置标签\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"post_tags\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"</em>\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 用来标记高亮字段的后置标签\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"注意：\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"高亮是对关键字高亮，因此\"),t(\"strong\",[s._v(\"搜索条件必须带有关键字\")]),s._v(\"，而不能是范围这样的查询。\")]),s._v(\" \"),t(\"li\",[s._v(\"默认情况下，\"),t(\"strong\",[s._v(\"高亮的字段，必须与搜索指定的字段一致\")]),s._v(\"，否则无法高亮\")]),s._v(\" \"),t(\"li\",[s._v(\"如果要对非搜索字段高亮，则需要添加一个属性：required_field_match=false\")])]),s._v(\" \"),t(\"p\",[s._v(\"查询的DSL是一个大的JSON对象，包含下列属性：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"query：查询条件\")]),s._v(\" \"),t(\"li\",[s._v(\"from和size：分页条件\")]),s._v(\" \"),t(\"li\",[s._v(\"sort：排序条件\")]),s._v(\" \"),t(\"li\",[s._v(\"highlight：高亮条件\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"数据聚合\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据聚合\"}},[s._v(\"#\")]),s._v(\" 数据聚合\")]),s._v(\" \"),t(\"p\",[s._v(\"类似于MySQL的聚合函数\")]),s._v(\" \"),t(\"p\",[s._v(\"**\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"聚合（\"),t(\"OutboundLink\")],1),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"aggregations\"),t(\"OutboundLink\")],1),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"）\"),t(\"OutboundLink\")],1),s._v(\"**可以让我们极其方便的实现对数据的统计、分析、运算。例如：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"什么品牌的手机最受欢迎？\")]),s._v(\" \"),t(\"li\",[s._v(\"这些手机的平均价格、最高价格、最低价格？\")]),s._v(\" \"),t(\"li\",[s._v(\"这些手机每月的销售情况如何？\")])]),s._v(\" \"),t(\"p\",[s._v(\"实现这些统计功能的比数据库的sql要方便的多，而且查询速度非常快，可以实现近实时搜索效果。\")]),s._v(\" \"),t(\"p\",[s._v(\"聚合常见的有三类：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"**桶（Bucket）**聚合：用来对文档做分组\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"TermAggregation：按照\"),t(\"strong\",[s._v(\"文档字段值分组\")]),s._v(\"，例如按照品牌值分组、按照国家分组\")]),s._v(\" \"),t(\"li\",[s._v(\"Date Histogram：按照日期阶梯分组，例如一周为一组，或者一月为一组\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"**度量（Metric）**聚合：用以计算一些值，比如：最大值、最小值、平均值等\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Avg：求平均值\")]),s._v(\" \"),t(\"li\",[s._v(\"Max：求最大值\")]),s._v(\" \"),t(\"li\",[s._v(\"Min：求最小值\")]),s._v(\" \"),t(\"li\",[s._v(\"Stats：同时求max、min、avg、sum等\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"**管道（pipeline）**聚合：其它聚合的结果为基础做聚合\")])])]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"**注意：**参加聚合的字段必须是keyword、日期、数值、布尔类型\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"桶聚合\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#桶聚合\"}},[s._v(\"#\")]),s._v(\" 桶聚合\")]),s._v(\" \"),t(\"p\",[s._v(\"现在，我们要统计所有数据中的酒店品牌有几种，其实就是按照品牌对数据分组。此时可以根据酒店品牌的名称做聚合，也就是Bucket聚合。\")]),s._v(\" \"),t(\"p\",[s._v(\"语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"query\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"range\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"price\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"lte\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"200\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 只对200元以下的文档聚合\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \\t\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \\t\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"   \\n    \\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 设置size为0，结果中不包含文档，只包含聚合结果\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"aggs\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 定义聚合\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brandAgg\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//给聚合起个名字\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"terms\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 聚合的类型，按照品牌值聚合，所以选择term\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"field\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 参与聚合的字段\")]),s._v(\"\\n         \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"order\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n         \\t\"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_count\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"asc\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 按照_count升序排列\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 希望获取的聚合结果数量\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\")])]),t(\"p\",[s._v(\"默认情况下，Bucket聚合会统计Bucket内的文档数量，记为_count，并且按照_count降序排序。\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"metric-聚合\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#metric-聚合\"}},[s._v(\"#\")]),s._v(\" Metric 聚合\")]),s._v(\" \"),t(\"p\",[s._v(\"形成了一个个桶。现在我们需要对桶内的酒店做运算，获取每个品牌的用户评分的min、max、avg等值。\")]),s._v(\" \"),t(\"p\",[s._v(\"这就要用到Metric聚合了，例如stat聚合：就可以获取min、max、avg等结果。\")]),s._v(\" \"),t(\"p\",[s._v(\"语法如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[s._v(\"GET /hotel/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"aggs\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"brandAgg\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"terms\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"field\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"brand\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"aggs\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 是brands聚合的子聚合，也就是分组后对每组分别计算\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"score_stats\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 聚合名称\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"stats\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 聚合类型，这里stats可以计算min、max、avg等\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"field\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 聚合字段，这里是score\")]),s._v(\"\\n          \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\")])]),t(\"p\",[s._v(\"aggs代表聚合，与query同级，此时query的作用是？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"限定聚合的的文档范围\")])]),s._v(\" \"),t(\"p\",[s._v(\"聚合必须的三要素：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"聚合名称\")]),s._v(\" \"),t(\"li\",[s._v(\"聚合类型\")]),s._v(\" \"),t(\"li\",[s._v(\"聚合字段\")])]),s._v(\" \"),t(\"p\",[s._v(\"聚合可配置属性有：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"size：指定聚合结果数量\")]),s._v(\" \"),t(\"li\",[s._v(\"order：指定聚合结果排序方式\")]),s._v(\" \"),t(\"li\",[s._v(\"field：指定聚合字段\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"自动补全\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#自动补全\"}},[s._v(\"#\")]),s._v(\" 自动补全\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"拼音分词器\")]),s._v(\" \"),t(\"li\",[s._v(\"自动补全\")])]),s._v(\" \"),t(\"p\",[s._v(\"elasticsearch提供了\"),t(\"a\",{attrs:{href:\"https://www.elastic.co/guide/en/elasticsearch/reference/7.6/search-suggesters.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"Completion Suggester\"),t(\"OutboundLink\")],1),s._v(\"查询来实现自动补全功能。这个查询会匹配以用户输入内容开头的词条并返回。为了提高补全查询的效率，对于文档中字段的类型有一些约束：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"参与\"),t(\"strong\",[s._v(\"补全查询的字段必须是completion类型\")]),s._v(\"。\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"字段的内容一般是用来补全的多个词条形成的数组。\")])])]),s._v(\" \"),t(\"p\",[s._v(\"比如，一个这样的索引库：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 创建索引库\")]),s._v(\"\\nPUT test\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"mappings\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"properties\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"title\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"type\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"completion\"')]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\")])]),t(\"p\",[s._v(\"然后插入下面的数据：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 示例数据\")]),s._v(\"\\nPOST test/_doc\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"title\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Sony\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"WH-1000XM3\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nPOST test/_doc\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"title\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"SK-II\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"PITERA\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\nPOST test/_doc\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"title\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Nintendo\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"switch\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\")])]),t(\"p\",[s._v(\"查询的DSL语句如下：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 自动补全查询\")]),s._v(\"\\nGET /test/_search\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"suggest\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"title_suggest\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"text\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"s\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 关键字\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"completion\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"field\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"title\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 补全查询的字段\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"skip_duplicates\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token boolean\"}},[s._v(\"true\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 跳过重复的\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"size\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 获取前10条结果\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\")])])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}