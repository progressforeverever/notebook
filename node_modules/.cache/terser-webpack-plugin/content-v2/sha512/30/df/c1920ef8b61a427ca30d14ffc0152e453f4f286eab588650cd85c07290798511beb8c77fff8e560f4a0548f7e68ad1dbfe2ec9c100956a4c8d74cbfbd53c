{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{451:function(s,t,a){\"use strict\";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"redis哨兵\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis哨兵\"}},[s._v(\"#\")]),s._v(\" Redis哨兵\")]),s._v(\" \"),t(\"p\",[s._v(\"主要是和sentinel结合\")]),s._v(\" \"),t(\"p\",[s._v(\"哨兵的结构如图：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20210725154632354.png\",alt:\"image-20210725154528072\"}})]),s._v(\" \"),t(\"p\",[s._v(\"哨兵的作用如下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"监控\")]),s._v(\"：Sentinel 会不断检查您的master和slave是否按预期工作\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"自动故障恢复\")]),s._v(\"：如果master故障，Sentinel会将一个slave提升为master。当故障实例恢复后也以新的master为主\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"通知\")]),s._v(\"：Sentinel充当Redis客户端的服务发现来源，当集群发生故障转移时，\"),t(\"strong\",[s._v(\"会将最新信息推送给Redis的客户端\")])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"集群监控原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群监控原理\"}},[s._v(\"#\")]),s._v(\" 集群监控原理\")]),s._v(\" \"),t(\"p\",[s._v(\"Sentinel基于心跳机制监测服务状态，每隔1秒向集群的每个实例发送ping命令：\")]),s._v(\" \"),t(\"p\",[s._v(\"•\"),t(\"strong\",[s._v(\"主观下线 （sdown  subject down）\")]),s._v(\"：如果某sentinel节点发现\"),t(\"strong\",[s._v(\"某实例未在规定时间响应\")]),s._v(\"，则认为该实例\"),t(\"strong\",[s._v(\"主观下线\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"•\"),t(\"strong\",[s._v(\"客观下线 (odown  object down )\")]),s._v(\"：若\"),t(\"strong\",[s._v(\"超过指定数量（quorum）的sentinel都认为该实例主观下线\")]),s._v(\"，则该实例\"),t(\"strong\",[s._v(\"客观下线\")]),s._v(\"。quorum值最好超过\"),t(\"strong\",[s._v(\"Sentinel实例数量的一半。\")])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20210725154816841.png\",alt:\"image-20210725154632354\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"集群故障恢复原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#集群故障恢复原理\"}},[s._v(\"#\")]),s._v(\" 集群故障恢复原理\")]),s._v(\" \"),t(\"p\",[s._v(\"一旦发现master故障，sentinel需要在salve中选择一个作为新的master，选择依据是这样的：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"首先会判断slave节点与master\"),t(\"strong\",[s._v(\"节点断开时间长短\")]),s._v(\"，如果超过指定值（down-after-milliseconds * 10）则会\"),t(\"strong\",[s._v(\"排除该slave节点  (从网络稳定性上剔除一些节点)\")])]),s._v(\" \"),t(\"li\",[s._v(\"然后判断slave节点的slave-priority值，越小优先级越高，如果是0则永不参与选举\")]),s._v(\" \"),t(\"li\",[s._v(\"如果slave-prority一样，则判断\"),t(\"strong\",[s._v(\"slave节点的offset值，越大说明数据越新，优先级越高  （从数据一致性上做出选择）\")])]),s._v(\" \"),t(\"li\",[s._v(\"最后是判断slave节点的运行id大小，越小优先级越高。\")])]),s._v(\" \"),t(\"p\",[s._v(\"当选出一个新的master后，该如何实现切换呢？\")]),s._v(\" \"),t(\"p\",[s._v(\"流程如下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"sentinel给备选的slave1节点发送\"),t(\"code\",[s._v(\"slaveof no one\")]),s._v(\"命令，\"),t(\"strong\",[s._v(\"让该节点成为mast\")]),s._v(\"er\")]),s._v(\" \"),t(\"li\",[s._v(\"sentinel给所有其它slave发送slaveof 192.168.150.101 7002 命令，让这些slave成为新master的从节点，开始从新的master上同步数据。\")]),s._v(\" \"),t(\"li\",[s._v(\"最后，\"),t(\"strong\",[s._v(\"sentinel将故障节点标记为slave，当故障节点恢复后会自动成为新的master的slave节点\")])])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20210725154528072.png\",alt:\"image-20210725154816841\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"qa\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#qa\"}},[s._v(\"#\")]),s._v(\" QA\")]),s._v(\" \"),t(\"p\",[s._v(\"Sentinel的三个作用是什么？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"监控\")]),s._v(\" \"),t(\"li\",[s._v(\"故障转移\")]),s._v(\" \"),t(\"li\",[s._v(\"通知\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"Sentinel如何判断一个redis实例是否健康？\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"每隔1秒发送一次ping命令\")]),s._v(\"，如果超过一定时间没有相向则认为是主观下线\")]),s._v(\" \"),t(\"li\",[s._v(\"如果大多数sentinel都认为实例主观下线，则判定服务下线\")])]),s._v(\" \"),t(\"p\",[s._v(\"故障转移步骤有哪些？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"首先选定一个slave作为新的master，执行slaveof no one\")]),s._v(\" \"),t(\"li\",[s._v(\"然后让所有节点都执行slaveof 新master\")]),s._v(\" \"),t(\"li\",[s._v(\"修改故障节点配置，添加slaveof 新master\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"代码层面\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#代码层面\"}},[s._v(\"#\")]),s._v(\" 代码层面\")]),s._v(\" \"),t(\"p\",[s._v(\"在Sentinel集群监管下的Redis主从集群，其节点会因为自动故障转移而发生变化，Redis的客户端必须感知这种变化，及时更新连接信息。Spring的RedisTemplate底层利用lettuce实现了节点的感知和自动切换。\")]),s._v(\" \"),t(\"p\",[s._v(\"下面，我们通过一个测试来实现RedisTemplate集成哨兵机制。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"引入依赖\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#引入依赖\"}},[s._v(\"#\")]),s._v(\" 引入依赖\")]),s._v(\" \"),t(\"p\",[s._v(\"在项目的pom文件中引入依赖：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-xml line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"org.springframework.boot\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"spring-boot-starter-data-redis\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"配置redis地址\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置redis地址\"}},[s._v(\"#\")]),s._v(\" 配置Redis地址\")]),s._v(\" \"),t(\"p\",[s._v(\"然后在配置文件application.yml中指定redis的sentinel相关信息：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-yaml line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-yaml\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"spring\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"redis\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"sentinel\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"master\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\" mymaster\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token key atrule\"}},[s._v(\"nodes\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),s._v(\"     \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"# 这里面配的是redis-sentinel的地址\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\" 192.168.150.101\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"27001\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\" 192.168.150.101\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"27002\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"-\")]),s._v(\" 192.168.150.101\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\":\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"27003\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"配置读写分离\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#配置读写分离\"}},[s._v(\"#\")]),s._v(\" 配置读写分离\")]),s._v(\" \"),t(\"p\",[s._v(\"在项目的启动类中，添加一个新的bean：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Bean\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"LettuceClientConfigurationBuilderCustomizer\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"clientConfigurationBuilderCustomizer\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" clientConfigurationBuilder \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),s._v(\" clientConfigurationBuilder\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"readFrom\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ReadFrom\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"REPLICA_PREFERRED\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\")])]),t(\"p\",[s._v(\"这个bean中配置的就是读写策略，包括四种：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"MASTER：从主节点读取\")]),s._v(\" \"),t(\"li\",[s._v(\"MASTER_PREFERRED：优先从master节点读取，master不可用才读取replica\")]),s._v(\" \"),t(\"li\",[s._v(\"REPLICA：从slave（replica）节点读取\")]),s._v(\" \"),t(\"li\",[s._v(\"REPLICA _PREFERRED：优先从slave（replica）节点读取，所有的slave都不可用才读取master\")])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}