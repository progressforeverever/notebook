{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{406:function(t,r,e){\"use strict\";e.r(r);var v=e(4),o=Object(v.a)({},(function(){var t=this,r=t._self._c;return r(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[r(\"h1\",{attrs:{id:\"springmvc概览\"}},[r(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#springmvc概览\"}},[t._v(\"#\")]),t._v(\" SpringMVC概览\")]),t._v(\" \"),r(\"p\",[t._v(\"经典的MVC来了，了解一下？\")]),t._v(\" \"),r(\"blockquote\",[r(\"p\",[t._v(\"emmm....    怎么说呢，就感觉好像有点没有前后端分离的样子？\")])]),t._v(\" \"),r(\"p\",[t._v(\"MVC 模式（Model–view–controller）是软件工程中的一种软件架构模式，把软件系统分为三个基本部分：\"),r(\"strong\",[t._v(\"模型（Model）、视图（View）和控制器（Controller）\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"在MVC设计思想中要求一个符合MVC设计思想的软件应该保证上面这三部分相互独立，互不干扰，每一个部分只负责自己擅长的部分。如果某一个模块发生变化，应该尽量做到不影响其他两个模块。提高代码的可读性，实现程序间的松耦合、提高代码复用性。\")]),t._v(\" \"),r(\"p\",[t._v(\"MVC 以一种插件式的、松耦合的方式连接在一起。\")]),t._v(\" \"),r(\"ul\",[r(\"li\",[t._v(\"模型（M）- 编写程序应有的功能，负责业务对象与数据库的映射(ORM)。\")]),t._v(\" \"),r(\"li\",[t._v(\"视图（V）- 图形界面，负责与用户的交互(页面)。\")]),t._v(\" \"),r(\"li\",[t._v(\"控制器（C）- 负责转发请求，对请求进行处理。\")])]),t._v(\" \"),r(\"img\",{attrs:{src:\"https://www.runoob.com/wp-content/uploads/2020/05/ModelViewControllerDiagramZh.png\"}}),t._v(\" \"),r(\"img\",{attrs:{src:\"https://www.runoob.com/wp-content/uploads/2020/05/1589776521-2356-JxrlTyMyPgYnQpOV.png\"}}),t._v(\" \"),r(\"p\",[t._v(\"用户操作流程图：\")]),t._v(\" \"),r(\"img\",{attrs:{src:\"https://www.runoob.com/wp-content/uploads/2020/05/1589777036-2760-fs1oSv4dOWAwC5yW.png\"}}),t._v(\" \"),r(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/SpringMVC01.png\"}}),t._v(\" \"),r(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/SpringMVC02.png\"}}),t._v(\" \"),r(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/SpringMVC03.png\"}}),t._v(\" \"),r(\"p\",[t._v(\"1、用户发送请求至\"),r(\"strong\",[t._v(\"前端控制器DispatcherServlet    （记住这个前端控制器DispatcherServlet）\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"2、DispatcherServlet收到请求调用\"),r(\"strong\",[t._v(\"HandlerMapping处理器映射器\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"3、处理器映射器找到具体的处理器(可以根据xml配置、注解进行查找)，\"),r(\"strong\",[t._v(\"生成处理器对象及处理器拦截器(如果有则生成)\"),r(\"strong\",[t._v(\"一并返回给\")]),t._v(\"DispatcherServlet\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"4、DispatcherServlet调用\"),r(\"strong\",[t._v(\"HandlerAdapter处理器适配器\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"5、HandlerAdapter经过适配调用具体的处理器(Controller，也叫后端控制器)。\")]),t._v(\" \"),r(\"p\",[t._v(\"6、Controller执行完成\"),r(\"strong\",[t._v(\"返回ModelAndView\")]),t._v(\"。\")]),t._v(\" \"),r(\"p\",[t._v(\"7、andlerAdapter将controller执行结果ModelAndView返回给DispatcherServlet。\")]),t._v(\" \"),r(\"p\",[t._v(\"8、DispatcherServlet将ModelAndView传给ViewReslover视图解析器。\")]),t._v(\" \"),r(\"p\",[t._v(\"9、ViewReslover解析后返回具体View。\")]),t._v(\" \"),r(\"p\",[t._v(\"10、DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。\")]),t._v(\" \"),r(\"p\",[t._v(\"11、DispatcherServlet响应用户。\")]),t._v(\" \"),r(\"p\",[t._v(\"MVC与SSM的关系\")]),t._v(\" \"),r(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/SpringMVC04.png\"}}),t._v(\" \"),r(\"p\",[t._v(\"这里就讲个大概的框架，貌似现在暂时用不到，感觉Springboot都整合了\")]),t._v(\" \"),r(\"p\",[t._v(\"至于面试的时候嘛，那些原理啊 源码啊，还是得去看一下\")]),t._v(\" \"),r(\"p\",[t._v(\"唉......\")])])}),[],!1,null,null,null);r.default=o.exports}}]);","extractedComments":[]}