{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[127],{457:function(s,t,n){\"use strict\";n.r(t);var a=n(4),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h2\",{attrs:{id:\"mongodb-索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mongodb-索引\"}},[s._v(\"#\")]),s._v(\" MongoDB 索引\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"mongodb-索引有什么用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mongodb-索引有什么用\"}},[s._v(\"#\")]),s._v(\" MongoDB 索引有什么用?\")]),s._v(\" \"),t(\"p\",[s._v(\"和关系型数据库类似，MongoDB 中也有索引。索引的目的主要是用来提高查询效率，如果没有索引的话，MongoDB 必须执行 \"),t(\"strong\",[s._v(\"集合扫描\")]),s._v(\" ，即扫描集合中的每个文档，以选择与查询语句匹配的文档。如果查询存在合适的索引，MongoDB 可以使用该索引来限制它必须检查的文档数量。并且，MongoDB 可以使用索引中的排序返回排序后的结果。\")]),s._v(\" \"),t(\"p\",[s._v(\"虽然索引可以显著缩短查询时间，但是使用索引、维护索引是有代价的。在执行写入操作时，除了要更新文档之外，还必须更新索引，这必然会影响写入的性能。因此，当有大量写操作而读操作少时，或者不考虑读操作的性能时，都不推荐建立索引。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"mongodb-支持哪些类型的索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mongodb-支持哪些类型的索引\"}},[s._v(\"#\")]),s._v(\" MongoDB 支持哪些类型的索引？\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"MongoDB 支持多种类型的索引，包括单字段索引、复合索引、多键索引、哈希索引、文本索引、 地理位置索引等，每种类型的索引有不同的使用场合。\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"单字段索引：\")]),s._v(\" 建立在单个字段上的索引，索引创建的排序顺序无所谓，MongoDB 可以头/尾开始遍历。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"复合索引：\")]),s._v(\" 建立在\"),t(\"strong\",[s._v(\"多个字段上的索引，也可以称之为组合索引、联合索引。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"多键索引\")]),s._v(\"：\"),t(\"strong\",[s._v(\"MongoDB 的一个字段可能是数组，在对这种字段创建索引时，就是多键索引\")]),s._v(\"。MongoDB 会为数组的每个值创建索引。就是说你可以按照数组里面的值做条件来查询，这个时候依然会走索引。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"哈希索引\")]),s._v(\"：按数据的哈希值索引，用在哈希分片集群上。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"文本索引：\")]),s._v(\" 支持对字符串内容的文本搜索查询。文本索引可以包含任何值为字符串或字符串元素数组的字段。\"),t(\"strong\",[s._v(\"一个集合只能有一个文本搜索索引，但该索引可以覆盖多个字段。MongoDB 虽然支持全文索引，但是性能低下，暂时不建议使用。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"地理位置索引：\")]),s._v(\" 基于经纬度的索引，适合 2D 和 3D 的位置查询。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"唯一索引\")]),s._v(\"：确保索引字段不会存储重复值。如果集合已经存在了违反索引的唯一约束的文档，则后台创建唯一索引会失败。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"TTL 索引\")]),s._v(\"：TTL 索引提供了\"),t(\"strong\",[s._v(\"一个过期机制，允许为每一个文档设置一个过期时间，当一个文档达到预设的过期时间之后就会被删除。\")])]),s._v(\" \"),t(\"li\",[s._v(\"……\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"复合索引中字段的顺序有影响吗\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#复合索引中字段的顺序有影响吗\"}},[s._v(\"#\")]),s._v(\" 复合索引中字段的顺序有影响吗？\")]),s._v(\" \"),t(\"p\",[s._v(\"复合索引中字段的顺序非常重要，例如下图中的复合索引由\"),t(\"code\",[s._v(\"{userid:1, score:-1}\")]),s._v(\"组成，\"),t(\"strong\",[s._v(\"则该复合索引首先按照\"),t(\"code\",[s._v(\"userid\")]),s._v(\"升序排序；然后再每个\"),t(\"code\",[s._v(\"userid\")]),s._v(\"的值内，再按照\"),t(\"code\",[s._v(\"score\")]),s._v(\"降序排序。\")])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/mongodb-composite-index.png\",alt:\"复合索引\"}})]),s._v(\" \"),t(\"p\",[s._v(\"在复合索引中，按照何种方式排序，决定了该索引在查询中是否能被应用到。\")]),s._v(\" \"),t(\"p\",[s._v(\"走复合索引的排序：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[s._v(\"db\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\")])]),t(\"p\",[s._v(\"不走复合索引的排序：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[s._v(\"db\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\ndb\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\")])]),t(\"p\",[s._v(\"我们可以通过 explain 进行分析：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[s._v(\"db\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"s2\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"sort\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"score\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"-\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"userid\"')]),s._v(\": \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"explain\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"复合索引遵循左前缀原则吗\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#复合索引遵循左前缀原则吗\"}},[s._v(\"#\")]),s._v(\" 复合索引遵循左前缀原则吗？\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"MongoDB 的复合索引遵循左前缀原则\")]),s._v(\"：拥有多个键的索引，可以同时得到所有这些键的前缀组成的索引，但不包括除左前缀之外的其他子集。比如说，有一个类似 \"),t(\"code\",[s._v(\"{a: 1, b: 1, c: 1, ..., z: 1}\")]),s._v(\" 这样的索引，那么实际上也等于有了 \"),t(\"code\",[s._v(\"{a: 1}\")]),s._v(\"、\"),t(\"code\",[s._v(\"{a: 1, b: 1}\")]),s._v(\"、\"),t(\"code\",[s._v(\"{a: 1, b: 1, c: 1}\")]),s._v(\" 等一系列索引，但是不会有 \"),t(\"code\",[s._v(\"{b: 1}\")]),s._v(\" 这样的非左前缀的索引。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"什么是-ttl-索引\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是-ttl-索引\"}},[s._v(\"#\")]),s._v(\" 什么是 TTL 索引？\")]),s._v(\" \"),t(\"p\",[s._v(\"TTL 索引提供了一个过期机制，\"),t(\"strong\",[s._v(\"允许为每一个文档设置一个过期时间 \"),t(\"code\",[s._v(\"expireAfterSeconds\")]),s._v(\" ，当一个文档达到预设的过期时间之后就会被删除。TTL 索引除了有 \"),t(\"code\",[s._v(\"expireAfterSeconds\")]),s._v(\" 属性外，和普通索引一样。\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"数据过期对于某些类型的信息很有用，比如机器生成的事件数据、日志和会话信息，这些信息只需要在数据库中保存有限的时间。\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"TTL 索引运行原理\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"MongoDB 会\"),t(\"strong\",[s._v(\"开启一个后台线程读取该 TTL 索引的值来判断文档是否过期\")]),s._v(\"，但\"),t(\"strong\",[s._v(\"不会保证已过期的数据会立马被删除，因后台线程每 60 秒触发一次删除任务\")]),s._v(\"，且如果删除的数据量较大，\"),t(\"strong\",[s._v(\"会存在上一次的删除未完成，而下一次的任务已经开启的情况，导致过期的数据也会出现超过了数据保留时间 60 秒以上的现象。\")])]),s._v(\" \"),t(\"li\",[s._v(\"对于副本集而言，TTL 索引的后台进程只会在 Primary 节点开启，在从节点会始终处于空闲状态，从节点的数据删除是由主库删除后产生的 oplog 来做同步。\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"TTL 索引限制\")]),s._v(\"：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"TTL 索引是单字段索引。复合索引不支持 TTL\")])]),s._v(\" \"),t(\"li\",[t(\"code\",[s._v(\"_id\")]),s._v(\"字段不支持 TTL 索引。\")]),s._v(\" \"),t(\"li\",[s._v(\"无法在上限集合(Capped Collection)上创建 TTL 索引，因为 MongoDB 无法从上限集合中删除文档。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"如果某个字段已经存在非 TTL 索引，那么在该字段上无法再创建 TTL 索引。\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"什么是覆盖索引查询\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是覆盖索引查询\"}},[s._v(\"#\")]),s._v(\" 什么是覆盖索引查询？\")]),s._v(\" \"),t(\"p\",[s._v(\"根据官方文档介绍，覆盖查询是以下的查询：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"所有的查询字段是索引的一部分。\")])]),s._v(\" \"),t(\"li\",[s._v(\"结果中返回的所有字段都在同一索引中。\")]),s._v(\" \"),t(\"li\",[s._v(\"查询中没有字段等于\"),t(\"code\",[s._v(\"null\")]),s._v(\"。\")])]),s._v(\" \"),t(\"p\",[s._v(\"由于所有出现在查询中的字段是索引的一部分， MongoDB 无需在整个数据文档中检索匹配查询条件和返回使用相同索引的查询结果。因为索引存在于内存中，从索引中获取数据比通过扫描文档读取数据要快得多。\")]),s._v(\" \"),t(\"p\",[s._v(\"举个例子：我们有如下 \"),t(\"code\",[s._v(\"users\")]),s._v(\" 集合:\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-json line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-json\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"_id\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" ObjectId(\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"53402597d852426020000002\"')]),s._v(\")\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"contact\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"987654321\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"dob\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"01-01-1991\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"gender\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"M\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"name\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Tom Benzamin\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token property\"}},[s._v('\"user_name\"')]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\":\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"tombenzamin\"')]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[s._v(\"我们在 \"),t(\"code\",[s._v(\"users\")]),s._v(\" 集合中创建联合索引，字段为 \"),t(\"code\",[s._v(\"gender\")]),s._v(\" 和 \"),t(\"code\",[s._v(\"user_name\")]),s._v(\" :\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[s._v(\"db\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"users\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"ensureIndex\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{gender:\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"user_name:\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[s._v(\"现在，该索引会覆盖以下查询：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-sql line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-sql\"}},[t(\"code\",[s._v(\"db\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"users\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"find\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"{gender:\"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"M\"')]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"{user_name:\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"_id:\"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"0\")]),s._v(\"}\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"为了让指定的索引覆盖查询，必须显式地指定 \"),t(\"code\",[s._v(\"_id: 0\")]),s._v(\" 来从结果中排除 \"),t(\"code\",[s._v(\"_id\")]),s._v(\" 字段，因为索引不包括 \"),t(\"code\",[s._v(\"_id\")]),s._v(\" 字段。\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"mongodb-高可用\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#mongodb-高可用\"}},[s._v(\"#\")]),s._v(\" MongoDB 高可用\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"复制集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#复制集群\"}},[s._v(\"#\")]),s._v(\" 复制集群\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"什么是复制集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是复制集群\"}},[s._v(\"#\")]),s._v(\" 什么是复制集群？\")]),s._v(\" \"),t(\"p\",[s._v(\"MongoDB 的复制集群又称为副本集群，是一组维护相同数据集合的 mongod 进程。\")]),s._v(\" \"),t(\"p\",[s._v(\"客户端连接到整个 Mongodb 复制集群，\"),t(\"strong\",[s._v(\"主节点机负责整个复制集群的写，从节点可以进行读操作，但默认还是主节点负责整个复制集群的读。主节点发生故障时，自动从从节点中选举出一个新的主节点，确保集群的正常使用，这对于客户端来说是无感知的。\")])]),s._v(\" \"),t(\"p\",[s._v(\"通常来说，一个复制集群包含 1 个主节点（Primary），多个从节点（Secondary）以及零个或 1 个仲裁节点（Arbiter）。\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"主节点\")]),s._v(\"：整个集群的写操作入口，\"),t(\"strong\",[s._v(\"接收所有的写操作，并将集合所有的变化记录到操作日志中，即 oplog。主节点挂掉之后会自动选出新的主节点。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"从节点\")]),s._v(\"：从主节点同步数据，\"),t(\"strong\",[s._v(\"在主节点挂掉之后选举新节点。不过，从节点可以配置成 0 优先级，阻止它在选举中成为主节点。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"仲裁节点\")]),s._v(\"：这个是为了节约资源或者多机房容灾用，只负责主节点选举时投票不存数据，保证能有节点获得多数赞成票。\")])]),s._v(\" \"),t(\"p\",[s._v(\"下图是一个典型的三成员副本集群：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/replica-set-read-write-operations-primary.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"主节点与备节点之间是通过 \"),t(\"strong\",[s._v(\"oplog（操作日志）\")]),s._v(\" 来同步数据的。oplog 是 local 库下的一个特殊的 \"),t(\"strong\",[s._v(\"上限集合(Capped Collection)\")]),s._v(\" ，用来保存写操作所产生的增量日志，\"),t(\"strong\",[s._v(\"类似于 MySQL 中 的 Binlog。\")])]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[t(\"strong\",[s._v(\"上限集合类似于定长的循环队列，数据顺序追加到集合的尾部，当集合空间达到上限时，它会覆盖集合中最旧的文档。上限集合的数据将会被顺序写入到磁盘的固定空间内，所以，I/O 速度非常快，如果不建立索引，性能更好。\")])])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/replica-set-primary-with-two-secondaries.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"当主节点上的一个写操作完成后，会向 oplog 集合写入一条对应的日志，而从节点则通过这个 oplog 不断拉取到新的日志，在本地进行回放以达到数据同步的目的。\")])]),s._v(\" \"),t(\"p\",[s._v(\"副本集最多有一个主节点。 如果当前主节点不可用，一个选举会抉择出新的主节点。MongoDB 的节点选举规则能够保证在 Primary 挂掉之后选取的新节点一定是集群中数据最全的一个。\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"为什么要用复制集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么要用复制集群\"}},[s._v(\"#\")]),s._v(\" 为什么要用复制集群？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"实现 failover\")]),s._v(\"：提供自动故障恢复的功能，主节点发生故障时**，自动从从节点中选举出一个新的主节点，确保集群的正常使用，这对于客户端来说是无感知的。**\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"实现读写分离\")]),s._v(\"：我们可以设置从节点上可以读取数据，主节点负责写入数据，这样的话就实现了读写分离，减轻了主节点读写压力过大的问题。MongoDB 4.0 之前版本如果主库压力不大,不建议读写分离，因为写会阻塞读，除非业务对响应时间不是非常关注以及读取历史数据接受一定时间延迟。\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"分片集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分片集群\"}},[s._v(\"#\")]),s._v(\" 分片集群\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"什么是分片集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是分片集群\"}},[s._v(\"#\")]),s._v(\" 什么是分片集群？\")]),s._v(\" \"),t(\"p\",[s._v(\"分片集群是 MongoDB 的分布式版本，相较副本集，分片集群数据被均衡的分布在不同分片中， 不仅大幅提升了整个集群的数据容量上限，也将读写的压力分散到不同分片，以解决副本集性能瓶颈的难题。\")]),s._v(\" \"),t(\"p\",[s._v(\"MongoDB 的分片集群由如下三个部分组成（下图来源于\"),t(\"a\",{attrs:{href:\"https://www.mongodb.com/docs/manual/sharding/\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"官方文档对分片集群的介绍\"),t(\"OutboundLink\")],1),s._v(\"）：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/sharded-cluster-production-architecture.png\",alt:\"\"}})]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"Config Servers\")]),s._v(\"：\"),t(\"strong\",[s._v(\"配置服务器\")]),s._v(\"，本质上是一个 MongoDB 的副本集，负责存储集群的各种元数据和配置，如分片地址、Chunks 等\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Mongos\")]),s._v(\"：路由服务，不存具体数据，\"),t(\"strong\",[s._v(\"从 Config 获取集群配置讲请求转发到特定的分片，并且整合分片结果返回给客户端。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Shard\")]),s._v(\"：每个分片是整体数据的一部分子集，从 MongoDB3.6 版本开始，每个 Shard 必须部署为副本集（replica set）架构\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"为什么要用分片集群\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#为什么要用分片集群\"}},[s._v(\"#\")]),s._v(\" 为什么要用分片集群？\")]),s._v(\" \"),t(\"p\",[s._v(\"随着系统数据量以及吞吐量的增长，常见的解决办法有两种：\"),t(\"strong\",[s._v(\"垂直扩展和水平扩展。\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"垂直扩展通过增加单个服务器的能力来实现，比如磁盘空间、内存容量、CPU 数量等；水平扩展则通过将数据存储到多个服务器上来实现，根据需要添加额外的服务器以增加容量。\")])]),s._v(\" \"),t(\"p\",[s._v(\"类似于 Redis Cluster，MongoDB 也可以通过分片实现 \"),t(\"strong\",[s._v(\"水平扩展\")]),s._v(\" 。\"),t(\"strong\",[s._v(\"水平扩展这种方式更灵活，可以满足更大数据量的存储需求，支持更高吞吐量。并且，水平扩展所需的整体成本更低，仅仅需要相对较低配置的单机服务器即可\")]),s._v(\"，代价是增加了部署的基础设施和维护的复杂性。\")]),s._v(\" \"),t(\"p\",[s._v(\"也就是说当你遇到如下问题时，可以使用分片集群解决：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"存储容量受单机限制，即磁盘资源遭遇瓶颈。\")]),s._v(\" \"),t(\"li\",[s._v(\"读写能力受单机限制，可能是 CPU、内存或者网卡等资源遭遇瓶颈，导致读写能力无法扩展。\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"什么是分片键\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是分片键\"}},[s._v(\"#\")]),s._v(\" 什么是分片键？\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"分片键（Shard Key）\")]),s._v(\" 是数据分区的前提， **从而实现数据分发到不同服务器上，减轻服务器的负担。**也就是说，分片键决定了集合内的文档如何在集群的多个分片间的分布状况。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"分片键就是文档里面的一个字段，但是这个字段不是普通的字段，有一定的要求：\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"它必须在所有文档中都出现。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"它必须是集合的一个索引，可以是单索引或复合索引的前缀索引，不能是多索引、文本索引或地理空间位置索引。\")])]),s._v(\" \"),t(\"li\",[s._v(\"MongoDB 4.2 之前的版本，文档的分片键字段值不可变。MongoDB 4.2 版本开始，\"),t(\"strong\",[s._v(\"除非分片键字段是不可变的 \"),t(\"code\",[s._v(\"_id\")]),s._v(\" 字段，否则您可以更新文档的分片键值\")]),s._v(\"。MongoDB 5.0 版本开始，实现了实时重新分片（live resharding），可以实现分片键的完全重新选择。\")]),s._v(\" \"),t(\"li\",[s._v(\"它的大小不能超过 512 字节。\")])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"如何选择分片键\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#如何选择分片键\"}},[s._v(\"#\")]),s._v(\" 如何选择分片键？\")]),s._v(\" \"),t(\"p\",[s._v(\"选择合适的片键对 sharding 效率影响很大，主要基于如下四个因素（摘自\"),t(\"a\",{attrs:{href:\"https://cloud.tencent.com/document/product/240/44611\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"分片集群使用注意事项 - - 腾讯云文档\"),t(\"OutboundLink\")],1),s._v(\"）：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"取值基数\")]),s._v(\" 取值基数建议尽可能大，如果用小基数的片键，因为备选值有限，那么块的总数量就有限，随着数据增多，块的大小会越来越大，导致水平扩展时移动块会非常困难。 例如：选择年龄做一个基数，范围最多只有 100 个，随着数据量增多，同一个值分布过多时，导致 chunck 的增长超出 chuncksize 的范围，引起 jumbo chunk，从而无法迁移，导致数据分布不均匀，性能瓶颈。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"取值分布\")]),s._v(\" \"),t(\"strong\",[s._v(\"取值分布建议尽量均匀\")]),s._v(\"，分布不均匀的片键会造成某些块的数据量非常大，同样有上面数据分布不均匀，性能瓶颈的问题。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"查询带分片\")]),s._v(\" 查询时建议带上分片，\"),t(\"strong\",[s._v(\"使用分片键进行条件查询时，mongos 可以直接定位到具体分片，否则 mongos 需要将查询分发到所有分片，再等待响应返回。\")])]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"避免单调递增或递减\")]),s._v(\" 单调递增的 sharding key，数据文件挪动小，但写入会集中，导致最后一篇的数据量持续增大，不断发生迁移，递减同理。\")])]),s._v(\" \"),t(\"p\",[s._v(\"综上，在选择片键时要考虑以上 4 个条件，尽可能满足更多的条件，才能降低 MoveChunks 对性能的影响，从而获得最优的性能体验。\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"分片策略有哪些\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分片策略有哪些\"}},[s._v(\"#\")]),s._v(\" 分片策略有哪些？\")]),s._v(\" \"),t(\"p\",[s._v(\"MongoDB 支持两种分片算法来满足不同的查询需求（摘自\"),t(\"a\",{attrs:{href:\"https://help.aliyun.com/document_detail/64561.html?spm=a2c4g.11186623.0.0.3121565eQhUGGB#h2--shard-key-3\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"MongoDB 分片集群介绍 - 阿里云文档\"),t(\"OutboundLink\")],1),s._v(\"）：\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"1、基于范围的分片\")]),s._v(\"：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/example-of-scope-based-sharding.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"MongoDB 按照分片键（Shard Key）的值的范围将数据拆分为不同的块（Chunk）\"),t(\"strong\",[s._v(\"，每个块包含了一段范围内的数据。当分片键的基数大、频率低且值非单调变更时，范围分片更高效。\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：\"),t(\"strong\",[s._v(\"Mongos 可以快速定位请求需要的数据\")]),s._v(\"，并将请求转发到相应的 Shard 节点中。\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：可能导致数据在 \"),t(\"strong\",[s._v(\"Shard 节点上分布不均衡，容易造成读写热点，且不具备写分散性。\")])]),s._v(\" \"),t(\"li\",[s._v(\"适用场景：分片键的值不是单调递增或单调递减、分片键的值基数大且重复的频率低、需要范围查询等业务场景。\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"2、基于 Hash 值的分片\")])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/example-of-hash-based-sharding.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"MongoDB 计算单个字段的哈希值作为索引值，并以哈希值的范围将数据拆分为不同的块（Chunk）。\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"优点：可以将数据\"),t(\"strong\",[s._v(\"更加均衡地分布\")]),s._v(\"在各 Shard 节点中，具备写分散性。\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：\"),t(\"strong\",[s._v(\"不适合进行范围查询，进行范围查询时，需要将读请求分发到所有的 Shard 节点。\")])]),s._v(\" \"),t(\"li\",[s._v(\"适用场景：分片键的值存在单调递增或递减、片键的值基数大且重复的频率低、需要写入的数据随机分发、数据读取随机性较大等业务场景。\")])]),s._v(\" \"),t(\"p\",[s._v(\"除了上述两种分片策略，您还可以配置 \"),t(\"strong\",[s._v(\"复合片键\")]),s._v(\" ，例如由一个低基数的键和一个单调递增的键组成。\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"分片数据如何存储\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#分片数据如何存储\"}},[s._v(\"#\")]),s._v(\" 分片数据如何存储？\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"Chunk（块）\")]),s._v(\" 是 MongoDB 分片集群的一个核心概念，\"),t(\"strong\",[s._v(\"其本质上就是由一组 Document 组成的逻辑数据单元。每个 Chunk 包含一定范围片键的数据，互不相交且并集为全部数据\")]),s._v(\"，即离散数学中\"),t(\"strong\",[s._v(\"划分\")]),s._v(\"的概念。\")]),s._v(\" \"),t(\"p\",[s._v(\"分片集群不会记录每条数据在哪个分片上，而是记录 Chunk 在哪个分片上一级这个 Chunk 包含哪些数据。\")]),s._v(\" \"),t(\"p\",[s._v(\"默认情况下，一个 Chunk 的最大值默认为 64MB（可调整，取值范围为 1~1024 MB。如无特殊需求，建议保持默认值），进行数据插入、更新、删除时，\"),t(\"strong\",[s._v(\"如果此时 Mongos 感知到了目标 Chunk 的大小或者其中的数据量超过上限\")]),s._v(\"，则会触发 \"),t(\"strong\",[s._v(\"Chunk 分裂\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/chunk-splitting-shard-a.png\",alt:\"Chunk 分裂\"}})]),s._v(\" \"),t(\"p\",[s._v(\"数据的增长会让 Chunk 分裂得越来越多。这个时候，各个分片上的 Chunk 数量可能会不平衡。Mongos 中的 \"),t(\"strong\",[s._v(\"均衡器(Balancer)\")]),s._v(\" 组件就会执行自动平衡，尝试使各个 Shard 上 Chunk 的数量保持均衡，这个过程就是 \"),t(\"strong\",[s._v(\"再平衡（Rebalance）\")]),s._v(\"。默认情况下，数据库和集合的 Rebalance 是开启的。\")]),s._v(\" \"),t(\"p\",[s._v(\"如下图所示，随着数据插入，导致 Chunk 分裂，让 AB 两个分片有 3 个 Chunk，C 分片只有一个，这个时候就会把 B 分配的迁移一个到 C 分片实现集群数据均衡。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/mongo-reblance-three-shards.png\",alt:\"Chunk 迁移\"}})]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"Balancer 是 MongoDB 的一个运行在 Config Server 的 Primary 节点上(自 MongoDB 3.4 版本起)的后台进程，它监控每个分片上 Chunk 数量，并在某个分片上 Chunk 数量达到阈值进行迁移。\")])]),s._v(\" \"),t(\"p\",[s._v(\"Chunk 只会分裂，不会合并，即使 chunkSize 的值变大。\")]),s._v(\" \"),t(\"p\",[s._v(\"Rebalance 操作是比较耗费系统资源的，我们可以通过在业务低峰期执行、预分片或者设置 Rebalance 时间窗等方式来减少其对 MongoDB 正常使用所带来的影响。\")]),s._v(\" \"),t(\"h4\",{attrs:{id:\"chunk-迁移原理是什么\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#chunk-迁移原理是什么\"}},[s._v(\"#\")]),s._v(\" Chunk 迁移原理是什么？\")]),s._v(\" \"),t(\"p\",[s._v(\"关于 Chunk 迁移原理的详细介绍，推荐阅读 MongoDB 中文社区的\"),t(\"a\",{attrs:{href:\"https://mongoing.com/archives/77479\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"一文读懂 MongoDB chunk 迁移\"),t(\"OutboundLink\")],1),s._v(\"这篇文章。\")])])}),[],!1,null,null,null);t.default=r.exports}}]);","extractedComments":[]}