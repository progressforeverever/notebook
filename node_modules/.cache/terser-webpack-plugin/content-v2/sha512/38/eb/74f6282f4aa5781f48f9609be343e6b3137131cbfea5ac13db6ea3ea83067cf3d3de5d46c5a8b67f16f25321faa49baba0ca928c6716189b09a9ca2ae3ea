{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[191],{521:function(v,_,t){\"use strict\";t.r(_);var s=t(4),r=Object(s.a)({},(function(){var v=this,_=v._self._c;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"_3-8-既然有-http-协议-为什么还要有-rpc\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#_3-8-既然有-http-协议-为什么还要有-rpc\"}},[v._v(\"#\")]),v._v(\" 3.8 既然有 HTTP 协议，为什么还要有 RPC？\")]),v._v(\" \"),_(\"blockquote\",[_(\"p\",[v._v(\"来源：公众号@小白 debug\")]),v._v(\" \"),_(\"p\",[v._v(\"原文地址：\"),_(\"a\",{attrs:{href:\"https://mp.weixin.qq.com/s/qmnfmUCdekEt1xG0hp_4MQ\",target:\"_blank\",rel:\"noopener noreferrer\"}},[v._v(\"既然有 HTTP 协议，为什么还要有 RPC？\"),_(\"OutboundLink\")],1)])]),v._v(\" \"),_(\"h2\",{attrs:{id:\"从-tcp-聊起\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#从-tcp-聊起\"}},[v._v(\"#\")]),v._v(\" 从 TCP 聊起\")]),v._v(\" \"),_(\"p\",[v._v(\"作为一个程序员，假设我们需要在 \"),_(\"strong\",[v._v(\"A 电脑的进程发一段数据到 B 电脑的进程，我们一般会在代码里使用 Socket 进行编程。\")])]),v._v(\" \"),_(\"p\",[v._v(\"**这时候，我们可选项一般也就 TCP 和 UDP 二选一。TCP 可靠，UDP 不可靠。**除非是马总这种神级程序员（早期 QQ 大量使用 UDP），否则，只要稍微对可靠性有些要求，普通人一般无脑选 TCP 就对了。\")]),v._v(\" \"),_(\"p\",[v._v(\"类似下面这样。\")]),v._v(\" \"),_(\"div\",{staticClass:\"language-c line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-c\"}},[_(\"code\",[v._v(\"fd \"),_(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[v._v(\"=\")]),v._v(\" \"),_(\"span\",{pre:!0,attrs:{class:\"token function\"}},[v._v(\"socket\")]),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[v._v(\"(\")]),v._v(\"AF_INET\"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[v._v(\",\")]),v._v(\"SOCK_STREAM\"),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[v._v(\",\")]),_(\"span\",{pre:!0,attrs:{class:\"token number\"}},[v._v(\"0\")]),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[v._v(\")\")]),_(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[v._v(\";\")]),v._v(\"\\n\")])]),v._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[v._v(\"1\")]),_(\"br\")])]),_(\"p\",[v._v(\"其中 \"),_(\"code\",[v._v(\"SOCK_STREAM\")]),v._v(\"，是指使用\"),_(\"strong\",[v._v(\"字节流\")]),v._v(\"传输数据，说白了就是 \"),_(\"strong\",[v._v(\"TCP 协议\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"在定义了 Socket 之后，我们就可以愉快的对这个 Socket 进行操作，\"),_(\"strong\",[v._v(\"比如用 \"),_(\"code\",[v._v(\"bind()\")]),v._v(\" 绑定 IP 端口，用 \"),_(\"code\",[v._v(\"connect()\")]),v._v(\" 发起建连。\")])]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/23cc66a7f4cb06afe13842b4b339e28b.gif\",alt:\"握手建立连接流程\"}})]),v._v(\" \"),_(\"p\",[v._v(\"在连接建立之后，我们就可以使用 \"),_(\"code\",[v._v(\"send()\")]),v._v(\" 发送数据，\"),_(\"code\",[v._v(\"recv()\")]),v._v(\" 接收数据。\")]),v._v(\" \"),_(\"p\",[v._v(\"光这样一个纯裸的 TCP 连接，就可以做到收发数据了，那是不是就够了？\")]),v._v(\" \"),_(\"p\",[v._v(\"不行，这么用会有问题。\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"使用纯裸-tcp-会有什么问题\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#使用纯裸-tcp-会有什么问题\"}},[v._v(\"#\")]),v._v(\" 使用纯裸 TCP 会有什么问题\")]),v._v(\" \"),_(\"p\",[v._v(\"八股文常背，TCP 是有三个特点，\"),_(\"strong\",[v._v(\"面向连接\")]),v._v(\"、\"),_(\"strong\",[v._v(\"可靠\")]),v._v(\"、基于\"),_(\"strong\",[v._v(\"字节流\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/3fcad07ba7ae92299b32224da8583363.png\",alt:\"TCP 是什么\"}})]),v._v(\" \"),_(\"p\",[v._v(\"这三个特点真的概括的\"),_(\"strong\",[v._v(\"非常精辟\")]),v._v(\"，这个八股文我们没白背。\")]),v._v(\" \"),_(\"p\",[v._v(\"每个特点展开都能聊一篇文章，而今天我们需要关注的是\"),_(\"strong\",[v._v(\"基于字节流\")]),v._v(\"这一点。\")]),v._v(\" \"),_(\"p\",[v._v(\"字节流可以理解为一个双向的通道里流淌的数据，这个\"),_(\"strong\",[v._v(\"数据\")]),v._v(\"其实就是我们常说的二进制数据，简单来说就是一大堆 \"),_(\"strong\",[v._v(\"01 串\")]),v._v(\"。纯裸 TCP 收发的这些 01 串之间是\"),_(\"strong\",[v._v(\"没有任何边界\")]),v._v(\"的，你根本不知道到哪个地方才算一条完整消息。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/254d845f9de05c19536d8343d268595a.png\",alt:\"01 二进制字节流\"}})]),v._v(\" \"),_(\"p\",[v._v(\"正因为这个没有\"),_(\"strong\",[v._v(\"任何边界\")]),v._v('的特点，所以当我们选择使用 TCP 发送\"夏洛\"和\"特烦恼\"的时候，接收端收到的就是\"夏洛特烦恼\"，这时候接收端没发区分你是想要表达\"夏洛\"+\"特烦恼\"还是\"夏洛特\"+\"烦恼\"。')]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/cd7c006cb4180bf751c4afd268ed44f0.png\",alt:\"消息对比\"}})]),v._v(\" \"),_(\"p\",[v._v(\"这就是所谓的\"),_(\"strong\",[v._v(\"粘包问题\")]),v._v(\"，之前也写过一篇专门的\"),_(\"a\",{attrs:{href:\"https://xiaolincoding.com/network/3_tcp/tcp_stream.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[v._v(\"文章\"),_(\"OutboundLink\")],1),v._v(\"聊过这个问题。\")]),v._v(\" \"),_(\"p\",[v._v(\"说这个的目的是为了告诉大家，纯裸 TCP 是不能直接拿来用的，你需要在这个基础上加入一些\"),_(\"strong\",[v._v(\"自定义的规则\")]),v._v(\"，用于区分\"),_(\"strong\",[v._v(\"消息边界\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"于是我们会把每条要发送的数据都包装一下，比如加入\"),_(\"strong\",[v._v(\"消息头\")]),v._v(\"，\"),_(\"strong\",[v._v(\"消息头里写清楚一个完整的包长度是多少\")]),v._v(\"，根据这个长度可以继续接收数据，截取出来后它们就是我们真正要传输的\"),_(\"strong\",[v._v(\"消息体\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/9428feed1ff22156fc136d17a129527b.png\",alt:\"消息边界长度标志\"}})]),v._v(\" \"),_(\"p\",[v._v(\"而这里头提到的\"),_(\"strong\",[v._v(\"消息头\")]),v._v(\"，还可以放各种东西，比如消息体是否被压缩过和消息体格式之类的，只要上下游都约定好了，互相都认就可以了，这就是所谓的\"),_(\"strong\",[v._v(\"协议。\")])]),v._v(\" \"),_(\"p\",[v._v(\"每个使用 TCP 的项目都可能会定义一套类似这样的协议解析标准，他们可能\"),_(\"strong\",[v._v(\"有区别，但原理都类似\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"于是基于 TCP，就衍生了非常多的协议，比如 HTTP 和 RPC。\")])]),v._v(\" \"),_(\"h2\",{attrs:{id:\"http-和-rpc\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http-和-rpc\"}},[v._v(\"#\")]),v._v(\" HTTP 和 RPC\")]),v._v(\" \"),_(\"p\",[v._v(\"我们回过头来看网络的分层图。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/da970d16a205fb48d6a8bea14498814d.png\",alt:\"四层网络协议\"}})]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"TCP 是传输层的协议\")]),v._v(\"，而基于 TCP 造出来的 HTTP 和\"),_(\"strong\",[v._v(\"各类\")]),v._v(\" RPC 协议，它们都只是定义了不同消息格式的\"),_(\"strong\",[v._v(\"应用层协议\")]),v._v(\"而已。\")]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"HTTP\")]),v._v(\" 协议（\"),_(\"strong\",[v._v(\"H\")]),v._v(\"yper \"),_(\"strong\",[v._v(\"T\")]),v._v(\"ext \"),_(\"strong\",[v._v(\"T\")]),v._v(\"ransfer \"),_(\"strong\",[v._v(\"P\")]),v._v(\"rotocol），又叫做\"),_(\"strong\",[v._v(\"超文本传输协议\")]),v._v(\"。我们用的比较多，平时上网在浏览器上敲个网址就能访问网页，这里用到的就是 HTTP 协议。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/809c33f7090c08b78d494445e39ae1b4.png\",alt:\"HTTP 调用\"}})]),v._v(\" \"),_(\"p\",[v._v(\"而 \"),_(\"strong\",[v._v(\"RPC\")]),v._v(\"（\"),_(\"strong\",[v._v(\"R\")]),v._v(\"emote \"),_(\"strong\",[v._v(\"P\")]),v._v(\"rocedure \"),_(\"strong\",[v._v(\"C\")]),v._v(\"all），又叫做\"),_(\"strong\",[v._v(\"远程过程调用\")]),v._v(\"。它本身并不是一个具体的协议，而是一种\"),_(\"strong\",[v._v(\"调用方式\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"举个例子，我们平时调用一个\"),_(\"strong\",[v._v(\"本地方法\")]),v._v(\"就像下面这样。\")]),v._v(\" \"),_(\"div\",{staticClass:\"language-plain line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-plain\"}},[_(\"code\",[v._v(\" res = localFunc(req)\\n\")])]),v._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[v._v(\"1\")]),_(\"br\")])]),_(\"p\",[v._v(\"如果现在这不是个本地方法，而是个\"),_(\"strong\",[v._v(\"远端服务器\")]),v._v(\"暴露出来的一个方法 \"),_(\"code\",[v._v(\"remoteFunc\")]),v._v(\"，如果我们还能像调用本地方法那样去调用它，这样就可以\"),_(\"strong\",[v._v(\"屏蔽掉一些网络细节\")]),v._v(\"，用起来更方便，岂不美哉？\")]),v._v(\" \"),_(\"div\",{staticClass:\"language-plain line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-plain\"}},[_(\"code\",[v._v(\" res = remoteFunc(req)\\n\")])]),v._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[v._v(\"1\")]),_(\"br\")])]),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/2b2ea6d26af9ded517043e528b032307.png\",alt:\"RPC 可以像调用本地方法那样调用远端方法\"}})]),v._v(\" \"),_(\"p\",[v._v(\"基于这个思路，大佬们造出了非常多款式的 RPC 协议，比如比较有名的\"),_(\"code\",[v._v(\"gRPC\")]),v._v(\"，\"),_(\"code\",[v._v(\"thrift\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"值得注意的是，虽然大部分 RPC 协议底层使用 TCP，但实际上\"),_(\"strong\",[v._v(\"它们不一定非得使用 TCP，改用 UDP 或者 HTTP，其实也可以做到类似的功能。\")])]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/054e9738bc492a6fb6e9a71737d95fc0.png\",alt:\"基于 TCP 协议的 HTTP 和 RPC 协议\"}})]),v._v(\" \"),_(\"p\",[v._v(\"到这里，我们回到文章标题的问题。\")]),v._v(\" \"),_(\"blockquote\",[_(\"p\",[v._v(\"既然有 HTTP 协议，为什么还要有 RPC？\")])]),v._v(\" \"),_(\"p\",[v._v(\"其实，\"),_(\"code\",[v._v(\"TCP\")]),v._v(\" 是\"),_(\"strong\",[v._v(\"70 年\")]),v._v(\"代出来的协议，而 \"),_(\"code\",[v._v(\"HTTP\")]),v._v(\" 是 \"),_(\"strong\",[v._v(\"90 年代\")]),v._v(\"才开始流行的。而直接使用裸 TCP 会有问题，可想而知，这中间这么多年有多少自定义的协议，而这里面就有\"),_(\"strong\",[v._v(\"80 年代\")]),v._v(\"出来的 \"),_(\"code\",[v._v(\"RPC\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"所以我们该问的不是\"),_(\"strong\",[v._v(\"既然有 HTTP 协议为什么要有 RPC\")]),v._v(\"，而是\"),_(\"strong\",[v._v(\"为什么有 RPC 还要有 HTTP 协议\")]),v._v(\"。\")]),v._v(\" \"),_(\"blockquote\",[_(\"p\",[v._v(\"那既然有 RPC 了，为什么还要有 HTTP 呢？\")])]),v._v(\" \"),_(\"p\",[v._v(\"现在电脑上装的各种\"),_(\"strong\",[v._v(\"联网\")]),v._v(\"软件，比如 xx 管家，xx 卫士，它们都作为\"),_(\"strong\",[v._v(\"客户端（Client）需要跟服务端（Server）建立连接收发消息\")]),v._v(\"，此时都会用到应用层协议，\"),_(\"strong\",[v._v(\"在这种 Client/Server (C/S) 架构下，它们可以使用自家造的 RPC 协议，因为它只管连自己公司的服务器就 ok 了。\")])]),v._v(\" \"),_(\"p\",[v._v(\"但有个软件不同，\"),_(\"strong\",[v._v(\"浏览器（Browser）\")]),v._v(\"，不管是 Chrome 还是 IE，它们不仅要能访问自家公司的\"),_(\"strong\",[v._v(\"服务器（Server）\")]),v._v(\"，还需要访问其他公司的网站服务器，因此它们需要有个统一的标准，不然大家没法交流。于是，HTTP 就是那个时代用于统一 \"),_(\"strong\",[v._v(\"Browser/Server (B/S)\")]),v._v(\" 的协议。\")]),v._v(\" \"),_(\"p\",[v._v(\"也就是说在多年以前，\"),_(\"strong\",[v._v(\"HTTP 主要用于 B/S 架构，而 RPC 更多用于 C/S 架构。但现在其实已经没分那么清了，B/S 和 C/S 在慢慢融合。\"),_(\"strong\",[v._v(\"很多软件同时支持多端，比如某度云盘，既要支持\")]),v._v(\"网页版\")]),v._v(\"，还要支持\"),_(\"strong\",[v._v(\"手机端和 PC 端\")]),v._v(\"，如果通信协议都用 HTTP 的话，那服务器只用同一套就够了。而 RPC 就开始退居幕后，一般用于公司内部集群里，各个微服务之间的通讯。\")]),v._v(\" \"),_(\"p\",[v._v(\"那这么说的话，\"),_(\"strong\",[v._v(\"都用 HTTP 得了，还用什么 RPC？\")])]),v._v(\" \"),_(\"p\",[v._v(\"仿佛又回到了文章开头的样子，那这就要从它们之间的区别开始说起。\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"http-和-rpc-有什么区别\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#http-和-rpc-有什么区别\"}},[v._v(\"#\")]),v._v(\" HTTP 和 RPC 有什么区别\")]),v._v(\" \"),_(\"p\",[v._v(\"我们来看看 RPC 和 HTTP 区别比较明显的几个点。\")]),v._v(\" \"),_(\"h3\",{attrs:{id:\"服务发现\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#服务发现\"}},[v._v(\"#\")]),v._v(\" 服务发现\")]),v._v(\" \"),_(\"p\",[v._v(\"首先要向某个服务器发起请求，你得先建立连接，而建立连接的前提是，你得知道 \"),_(\"strong\",[v._v(\"IP 地址和端口\")]),v._v(\"。这个找到服务对应的 IP 端口的过程，其实就是\"),_(\"strong\",[v._v(\"服务发现\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"在 \"),_(\"strong\",[v._v(\"HTTP\")]),v._v(\" 中，你知道服务的域名，就可以通过 \"),_(\"strong\",[v._v(\"DNS 服务\")]),v._v(\"去解析得到它背后的 IP 地址，默认 80 端口。\")]),v._v(\" \"),_(\"p\",[v._v(\"而 \"),_(\"strong\",[v._v(\"RPC\")]),v._v(\" 的话，就有些区别，一般会有专门的\"),_(\"strong\",[v._v(\"中间服务\")]),v._v(\"去保存服务名和 IP 信息，比如 \"),_(\"strong\",[v._v(\"Consul 或者 Etcd，甚至是 Redis\")]),v._v(\"。想要访问某个服务，就去这些中间服务去获得 IP 和端口信息。由于 DNS 也是服务发现的一种，所以也有基于 DNS 去做服务发现的组件，比如\"),_(\"strong\",[v._v(\"CoreDNS\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"可以看出服务发现这一块，两者是有些区别，但不太能分高低。\")]),v._v(\" \"),_(\"h3\",{attrs:{id:\"底层连接形式\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#底层连接形式\"}},[v._v(\"#\")]),v._v(\" 底层连接形式\")]),v._v(\" \"),_(\"p\",[v._v(\"以主流的 \"),_(\"strong\",[v._v(\"HTTP/1.1\")]),v._v(\" 协议为例，其默认在建立底层 TCP 连接之后会一直保持这个连接（\"),_(\"strong\",[v._v(\"Keep Alive\")]),v._v(\"），之后的请求和响应都会复用这条连接。\")]),v._v(\" \"),_(\"p\",[v._v(\"而 \"),_(\"strong\",[v._v(\"RPC\")]),v._v(\" 协议，也跟 HTTP 类似，也是通过建立 TCP 长链接进行数据交互，但不同的地方在于，RPC 协议一般还会再建个\"),_(\"strong\",[v._v(\"连接池\")]),v._v(\"，在请求量大的时候，建立多条连接放在池内，要发数据的时候就从池里取一条连接出来，\"),_(\"strong\",[v._v(\"用完放回去，下次再复用\")]),v._v(\"，可以说非常环保。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/ec5c8e28d3ea308c6db2ac991a12ea80.png\",alt:\"connection_pool\"}})]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"由于连接池有利于提升网络请求性能，所以不少编程语言的网络库里都会给 HTTP 加个连接池\")]),v._v(\"，比如 \"),_(\"strong\",[v._v(\"Go\")]),v._v(\" 就是这么干的。\")]),v._v(\" \"),_(\"p\",[v._v(\"可以看出这一块两者也没太大区别，所以也不是关键。\")]),v._v(\" \"),_(\"h3\",{attrs:{id:\"传输的内容\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#传输的内容\"}},[v._v(\"#\")]),v._v(\" 传输的内容\")]),v._v(\" \"),_(\"p\",[v._v(\"基于 TCP 传输的消息，说到底，无非都是\"),_(\"strong\",[v._v(\"消息头 Header 和消息体 Body。\")])]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"Header\")]),v._v(\" 是用于标记一些特殊信息，其中最重要的是\"),_(\"strong\",[v._v(\"消息体长度\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"Body\")]),v._v(\" 则是放我们真正需要传输的内容，而这些内容只能是二进制 01 串，毕竟计算机只认识这玩意。所以 TCP 传字符串和数字都问题不大，因为字符串可以转成编码再变成 01 串，而数字本身也能直接转为二进制。但结构体呢，我们得想个办法将它也转为二进制 01 串，这样的方案现在也有很多现成的，比如 \"),_(\"strong\",[v._v(\"Json，Protobuf。\")])]),v._v(\" \"),_(\"p\",[v._v(\"这个将结构体转为二进制数组的过程就叫\"),_(\"strong\",[v._v(\"序列化\")]),v._v(\"，反过来将二进制数组复原成结构体的过程叫\"),_(\"strong\",[v._v(\"反序列化\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/dba2bc3af0938d2c087f85acc191fd3f.png\",alt:\"序列化和反序列化\"}})]),v._v(\" \"),_(\"p\",[v._v(\"对于主流的 HTTP/1.1，虽然它现在叫\"),_(\"strong\",[v._v(\"超文本\")]),v._v(\"协议，支持音频视频，但 HTTP 设计初是用于做网页\"),_(\"strong\",[v._v(\"文本\")]),v._v(\"展示的，所以它传的内容以字符串为主。Header 和 Body 都是如此。在 Body 这块，它使用 \"),_(\"strong\",[v._v(\"Json\")]),v._v(\" 来\"),_(\"strong\",[v._v(\"序列化\")]),v._v(\"结构体数据。\")]),v._v(\" \"),_(\"p\",[v._v(\"我们可以随便截个图直观看下。\")]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/324cbe84c303a3b975e50329f5cdbf8b.png\",alt:\"HTTP 报文\"}})]),v._v(\" \"),_(\"p\",[v._v(\"可以看到这里面的内容非常多的\"),_(\"strong\",[v._v(\"冗余\")]),v._v(\"，显得\"),_(\"strong\",[v._v(\"非常啰嗦\")]),v._v(\"。最明显的，像 \"),_(\"code\",[v._v(\"Header\")]),v._v(\" 里的那些信息，其实如果我们约定好头部的第几位是 Content-Type，就\"),_(\"strong\",[v._v('不需要每次都真的把\"Content-Type\"这个字段都传过来')]),v._v(\"，类似的情况其实在 \"),_(\"code\",[v._v(\"body\")]),v._v(\" 的 Json 结构里也特别明显。\")]),v._v(\" \"),_(\"p\",[v._v(\"而 RPC，因为它定制化程度更高，可以采用体积更小的 Protobuf 或其他序列化协议去保存结构体数据，同时也不需要像 HTTP 那样考虑各种浏览器行为，比如 302 重定向跳转啥的。\"),_(\"strong\",[v._v(\"因此性能也会更好一些，这也是在公司内部微服务中抛弃 HTTP，选择使用 RPC 的最主要原因。\")])]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/f4cef7331cabcfe56d9d6434f7ef907f.png\",alt:\"HTTP 原理\"}})]),v._v(\" \"),_(\"p\",[_(\"img\",{attrs:{src:\"https://img-blog.csdnimg.cn/img_convert/12244fb0b19b2e61755fcab799198f68.png\",alt:\"RPC 原理\"}})]),v._v(\" \"),_(\"p\",[v._v(\"当然上面说的 HTTP，其实\"),_(\"strong\",[v._v(\"特指的是现在主流使用的 HTTP/1.1\")]),v._v(\"，\"),_(\"code\",[v._v(\"HTTP/2\")]),v._v(\" 在前者的基础上做了很多改进，所以\"),_(\"strong\",[v._v(\"性能可能比很多 RPC 协议还要好\")]),v._v(\"，甚至连 \"),_(\"code\",[v._v(\"gRPC\")]),v._v(\" 底层都直接用的 \"),_(\"code\",[v._v(\"HTTP/2\")]),v._v(\"。\")]),v._v(\" \"),_(\"blockquote\",[_(\"p\",[v._v(\"那么问题又来了，为什么既然有了 HTTP/2，还要有 RPC 协议？\")])]),v._v(\" \"),_(\"p\",[v._v(\"这个是由于 HTTP/2 是 2015 年出来的。那时候很多公司内部的 RPC 协议都已经跑了好些年了，基于历史原因，一般也没必要去换了。\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"总结\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#总结\"}},[v._v(\"#\")]),v._v(\" 总结\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"纯裸 TCP 是能收发数据，但它是个\"),_(\"strong\",[v._v(\"无边界\")]),v._v(\"的数据流，上层需要定义\"),_(\"strong\",[v._v(\"消息格式\")]),v._v(\"用于定义\"),_(\"strong\",[v._v(\"消息边界\")]),v._v(\"。于是就有了各种协议，HTTP 和各类 RPC 协议就是在 TCP 之上定义的应用层协议。\")]),v._v(\" \"),_(\"li\",[_(\"strong\",[v._v(\"RPC 本质上不算是协议，而是一种调用方式\")]),v._v(\"，而像 gRPC 和 Thrift 这样的具体实现，才是协议，它们是实现了 RPC 调用的协议。目的是希望程序员能像调用本地方法那样去调用远端的服务方法。同时 RPC 有很多种实现方式，\"),_(\"strong\",[v._v(\"不一定非得基于 TCP 协议\")]),v._v(\"。\")]),v._v(\" \"),_(\"li\",[v._v(\"从发展历史来说，\"),_(\"strong\",[v._v(\"HTTP 主要用于 B/S 架构，而 RPC 更多用于 C/S 架构。但现在其实已经没分那么清了，B/S 和 C/S 在慢慢融合\")]),v._v(\"。很多软件同时支持多端，所以对外一般用 HTTP 协议，而内部集群的微服务之间则采用 RPC 协议进行通讯。\")]),v._v(\" \"),_(\"li\",[_(\"strong\",[v._v(\"RPC 其实比 HTTP 出现的要早\")]),v._v(\"，且比目前主流的 HTTP/1.1 \"),_(\"strong\",[v._v(\"性能\")]),v._v(\"要更好，所以大部分公司内部都还在使用 RPC。\")]),v._v(\" \"),_(\"li\",[_(\"strong\",[v._v(\"HTTP/2.0\")]),v._v(\" 在 \"),_(\"strong\",[v._v(\"HTTP/1.1\")]),v._v(\" 的基础上做了优化，性能可能比很多 RPC 协议都要好，但由于是这几年才出来的，所以也不太可能取代掉 RPC。\")])])])}),[],!1,null,null,null);_.default=r.exports}}]);","extractedComments":[]}