{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{389:function(t,s,a){\"use strict\";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[s(\"h1\",{attrs:{id:\"git基础使用\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git基础使用\"}},[t._v(\"#\")]),t._v(\" git基础使用\")]),t._v(\" \"),s(\"h2\",{attrs:{id:\"git基本概念\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git基本概念\"}},[t._v(\"#\")]),t._v(\" git基本概念\")]),t._v(\" \"),s(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/git.png\"}}),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"Remote 远程仓库 类似于github 或者实验室的gitlab\")]),t._v(\" \"),s(\"li\",[t._v(\"Repository 我们从远程仓库 clone下来就是本地的仓库了\")]),t._v(\" \"),s(\"li\",[t._v(\"workspace 对于clone下来的项目，然后只要进行了修改，我们所clone的那个文件形成的文件夹也就有了workspace的身份（工作台）\")]),t._v(\" \"),s(\"li\",[t._v(\"index/stage 然后我们要提交，就先add，先将文件加到缓存区（index/stage）\")]),t._v(\" \"),s(\"li\",[t._v(\"然后再commit上(往往会加一些评论注释)，这样就相当于存到了你的本地仓库上，再push到远程仓库即可。\")])]),t._v(\" \"),s(\"p\",[t._v(\"然后现在具体了解一下各个命令\")]),t._v(\" \"),s(\"h3\",{attrs:{id:\"git-clone\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-clone\"}},[t._v(\"#\")]),t._v(\" git clone\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"git clone https://github.com/tugenhua0707/testgit 从远程库中克隆\\t\\t是https克隆\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"关于SSH克隆：有时候需要生成SSH密钥，打开命令行，输入如下命令：\")]),t._v(\" \"),s(\"p\",[t._v(\"ssh-keygen -t rsa –C “1484311465@qq.com”\\t\\t\\t引号内容是自己的email\")]),t._v(\" \"),s(\"p\",[t._v(\"​\\t\\tid_rsa是私钥，不能泄露出去，id_rsa.pub是公钥(public)，可以放心地告诉任何人。\")])])]),t._v(\" \"),s(\"blockquote\",[s(\"p\",[t._v(\"Q：https 和 ssh拉取有什么区别？\\nA：它们是两种不同的访问协议。\\n它们的区别主要在于身份验证和数据传输的方式：\")]),t._v(\" \"),s(\"p\",[t._v(\"HTTPS：使用 HTTPS 协议时，你需要使用用户名和密码（或者是访问令牌）进行身份验证。这是一种相对简单和直接的方式，适合个人开发者或小团队使用。\")]),t._v(\" \"),s(\"p\",[t._v(\"SSH：使用 SSH 协议时，你需要生成一对 SSH 密钥，将公钥添加到你的 GitHub 账户，并在本地使用私钥进行身份验证。这种方式更加安全，并且不需要在每次推送代码时输入密码。它适用于更大型的团队或对安全性有更高要求的情况。\")])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"git-branch分支管理\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-branch分支管理\"}},[t._v(\"#\")]),t._v(\" git branch分支管理\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[t._v(\"查看分支：git branch\")]),t._v(\" \"),s(\"li\",[t._v(\"创建分支：git branch name\")]),t._v(\" \"),s(\"li\",[t._v(\"切换分支：git checkout name\")]),t._v(\" \"),s(\"li\",[t._v(\"创建+切换分支：git checkout –b name\")]),t._v(\" \"),s(\"li\",[t._v(\"合并某分支到当前分支：git merge name\")]),t._v(\" \"),s(\"li\",[t._v(\"删除分支：git branch –d name\\n\"),s(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/git-brance.svg\",alt:\"img\"}})])]),t._v(\" \"),s(\"h3\",{attrs:{id:\"创建仓库\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#创建仓库\"}},[t._v(\"#\")]),t._v(\" 创建仓库\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"remote方向入手\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#remote方向入手\"}},[t._v(\"#\")]),t._v(\" Remote方向入手\")]),t._v(\" \"),s(\"p\",[t._v(\"一是直接在github上创建一个新的空仓库，然后再按照他的提示一个一个往上push\")]),t._v(\" \"),s(\"h4\",{attrs:{id:\"本地仓库入手\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#本地仓库入手\"}},[t._v(\"#\")]),t._v(\" 本地仓库入手\")]),t._v(\" \"),s(\"p\",[t._v(\"第二种，就是先建立本地仓库，一次性push上去\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$git\")]),t._v(\" init     \\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])]),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"把当前的目录变成可以管理的git仓库，生成隐藏.git文件（先创建本地的仓库）\"),s(\"code\",[t._v(\"git init\")]),t._v(\"不一定要从空项目开始\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"之后在一系列提交之类的\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"登录github创建远程仓库\")])]),t._v(\" \"),s(\"li\",[s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$git\")]),t._v(\" remote \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),t._v(\" XXX\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"远程仓库名\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])])]),t._v(\" \"),s(\"li\",[s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$git\")]),t._v(\" push \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-u\")]),t._v(\" origin master\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])]),s(\"p\",[t._v(\"提交上去  \"),s(\"code\",[t._v(\"-u\")]),t._v(\"是第一次提交所需要的，第一次建立远程连接，之后就不需要了\")])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"多人合作\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多人合作\"}},[t._v(\"#\")]),t._v(\" 多人合作\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"git fork\")]),t._v(\"  fork之后就能将自己的代码提交给原仓库了\")]),t._v(\" \"),s(\"p\",[t._v(\"原仓库   自己fork之后，自己gitLab 或者github上就有了fork后的仓库  然后再clone下来\")]),t._v(\" \"),s(\"p\",[t._v(\"然后还要设置好上游代码(upstream)  也就是相当于和原仓库保持同步\")]),t._v(\" \"),s(\"p\",[t._v(\"背景\\n我们在 GitHub 上参与到某个开源项目的时候，通常有以下开发步骤。\")]),t._v(\" \"),s(\"p\",[t._v(\"1.fork 一份原仓库到我们自己的仓库中\")]),t._v(\" \"),s(\"p\",[t._v(\"2.在自己的仓库中切新的分支进行开发，开发完成之后，再推送到自己的仓库\")]),t._v(\" \"),s(\"p\",[t._v(\"3.在原仓库进行Pull Request，等待审核人审核代码通过后，我们的分支就被合并到原仓库中\\n这是一个典型的 Github 开发流程\")]),t._v(\" \"),s(\"p\",[t._v(\"而在这个过程中，原仓库的代码经常会变动，而 GitHub 不会帮我们自动同步原仓库的代码，我们不确保自己修改的代码是否是最新的。因此我们就面临这样的一个问题：“Github 进行 fork 后的仓库，如何与原仓库同步？”\")]),t._v(\" \"),s(\"ul\",[s(\"li\",[s(\"p\",[t._v(\"第一步，查看当前的上游代码库\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-sh line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-v\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 查看当前的上游代码库\")]),t._v(\"\\norigin  https://github.com/AFine970/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\norigin  https://github.com/AFine970/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\")])]),s(\"p\",[t._v(\"这个时候还没有\")])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第二步，再设置一个上游代码库，\"),s(\"strong\",[t._v(\"为 fork 的仓库地址\")])]),t._v(\" \"),s(\"div\",{staticClass:\"language-sh line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-sh\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"add\")]),t._v(\" upstream https://github.com/IDuxFE/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 再设置一个上游代码库\")]),t._v(\"\\n$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-v\")]),t._v(\"\\norigin  https://github.com/AFine970/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\norigin  https://github.com/AFine970/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nupstream        https://github.com/IDuxFE/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\nupstream        https://github.com/IDuxFE/weekly.git \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\" \\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第三步，拉取新设置的上游代码库\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" fetch upstream \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 拉取新设置的上游代码库 \")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第四步，切换本地分支到 main 分支\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" checkout main \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 切换本地分支到main分支 \")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第五步，拉取或合并远程分支到本地分支\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 使用Pull拉取分支\")]),t._v(\"\\n$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" pull \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"--rebase\")]),t._v(\" upstream main \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 将上游仓库的main分支通过rebase的形式拉取到本地main分支\")]),t._v(\"\\n\"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 或者使用Merge\")]),t._v(\"\\n$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" merge upstream main \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 使用Merge会多一条merge commit，而pull --rebase不会有 (貌似用这种)\")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\")])])]),t._v(\" \"),s(\"li\",[s(\"p\",[t._v(\"第六步，将本地的分支推送到自己的远程仓库\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" push origin main \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 再将本地的分支推送到自己的远程仓库 \")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])]),s(\"p\",[t._v(\"实际上这就也学习了\"),s(\"code\",[t._v(\"git fetch\")]),t._v(\"的指令\")])])]),t._v(\" \"),s(\"h4\",{attrs:{id:\"git-pull\"}},[s(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#git-pull\"}},[t._v(\"#\")]),t._v(\" git pull\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"git pull\")]),t._v(\" 命令用于从远程获取代码并合并本地的版本。\")]),t._v(\" \"),s(\"p\",[s(\"code\",[t._v(\"git pull\")]),t._v(\" 其实就是 \"),s(\"code\",[t._v(\"git fetch\")]),t._v(\" 和 \"),s(\"code\",[t._v(\"git merge FETCH_HEAD\")]),t._v(\" 的简写。\")]),t._v(\" \"),s(\"p\",[t._v(\"命令格式如下\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$git\")]),t._v(\" pull \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"远程主机名\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" \"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"远程分支名\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\":\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\"<\")]),t._v(\"本地分支名\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])]),s(\"p\",[t._v(\"将远程主机 origin 的 master 分支拉取过来，与本地的 brantest 分支合并。\")]),t._v(\" \"),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[s(\"span\",{pre:!0,attrs:{class:\"token variable\"}},[t._v(\"$git\")]),t._v(\" pull origin master:brantest\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\")])]),s(\"div\",{staticClass:\"language-shell line-numbers-mode\"},[s(\"pre\",{pre:!0,attrs:{class:\"language-shell\"}},[s(\"code\",[t._v(\"$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" remote \"),s(\"span\",{pre:!0,attrs:{class:\"token parameter variable\"}},[t._v(\"-v\")]),t._v(\"  \"),s(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[t._v(\"# 查看信息\")]),t._v(\"\\norigin    https://github.com/tianqixin/runoob-git-test \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"fetch\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\norigin    https://github.com/tianqixin/runoob-git-test \"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\"(\")]),t._v(\"push\"),s(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[t._v(\")\")]),t._v(\"\\n\\n$ \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"git\")]),t._v(\" pull origin master\\nFrom https://github.com/tianqixin/runoob-git-test\\n * branch            master     -\"),s(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[t._v(\">\")]),t._v(\" FETCH_HEAD\\nAlready up to \"),s(\"span\",{pre:!0,attrs:{class:\"token function\"}},[t._v(\"date\")]),t._v(\"\\n\")])]),t._v(\" \"),s(\"div\",{staticClass:\"line-numbers-wrapper\"},[s(\"span\",{staticClass:\"line-number\"},[t._v(\"1\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"2\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"3\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"4\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"5\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"6\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"7\")]),s(\"br\"),s(\"span\",{staticClass:\"line-number\"},[t._v(\"8\")]),s(\"br\")])])])}),[],!1,null,null,null);s.default=n.exports}}]);","extractedComments":[]}