{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{465:function(t,v,_){\"use strict\";_.r(v);var s=_(4),o=Object(s.a)({},(function(){var t=this,v=t._self._c;return v(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[v(\"h1\",{attrs:{id:\"操作系统小记录\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#操作系统小记录\"}},[t._v(\"#\")]),t._v(\" 操作系统小记录\")]),t._v(\" \"),v(\"p\",[t._v(\"这种小记录主要记录一些概念上的东西以及一些常考的过程类的东西，用于精简之前写的笔记，做个总结概括。\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"什么是操作系统\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是操作系统\"}},[t._v(\"#\")]),t._v(\" 什么是操作系统\")]),t._v(\" \"),v(\"p\",[t._v(\"操作系统（OperatingSystem，OS）是指控制和\"),v(\"strong\",[t._v(\"管理整个计算机系统的硬件和软件资源\")]),t._v(\"，并合理地\"),v(\"strong\",[t._v(\"组织调度\")]),t._v(\"计算机的工作和\"),v(\"strong\",[t._v(\"资源的分配\")]),t._v(\"；以提供给用户和其他软件\"),v(\"strong\",[t._v(\"方便的接口和环境\")]),t._v(\"；它是计算机系统中\"),v(\"strong\",[t._v(\"最基本的系统软件。\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"系统资源的管理者\")]),t._v(\" \"),v(\"li\",[t._v(\"向上提供服务 （封装思想）\")]),t._v(\" \"),v(\"li\",[t._v(\"最接近硬件的软件\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"执行一个程序前需要将该程序放到内存中，才能被CPU处理。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"GUI：图形化用户接口（Graphical User Interface）\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"操作系统的四个特征\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#操作系统的四个特征\"}},[t._v(\"#\")]),t._v(\" 操作系统的四个特征\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"并发\")]),t._v(\" \"),v(\"li\",[t._v(\"共享\")]),t._v(\" \"),v(\"li\",[t._v(\"虚拟\")]),t._v(\" \"),v(\"li\",[t._v(\"异步\")])]),t._v(\" \"),v(\"p\",[t._v(\"（并发与共享是两个最基本的特征，二者互为存在条件）\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"并发-并行\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#并发-并行\"}},[t._v(\"#\")]),t._v(\" 并发 && 并行\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"并发\")]),t._v(\"：指两个或多个事件在同一时间间隔内发生。这些事件\"),v(\"strong\",[t._v(\"宏观上是同时发生的，但微观上是交替发生的。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"并行\")]),t._v(\"：\"),v(\"strong\",[t._v(\"指两个或多个事件在同一时刻同时发生。\")])]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231024200708721.png\",alt:\"image-20231024200151370\"}})]),t._v(\" \"),v(\"p\",[t._v(\"注意（重要考点）：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[v(\"strong\",[t._v(\"单核CPU\")]),t._v(\"同一时刻只能执行一个程序，各个程序只能\"),v(\"strong\",[t._v(\"并发\")]),t._v(\"地执行\")]),t._v(\" \"),v(\"li\",[v(\"strong\",[t._v(\"多核CPU\")]),t._v(\"同一时刻可以同时执行多个程序，多个程序可以\"),v(\"strong\",[t._v(\"并行\")]),t._v(\"地执行\")])]),t._v(\" \"),v(\"p\",[t._v(\"比如Intel的第八代i3处理器就是4核CPU，意味着可以并行地执行4个程序\")]),t._v(\" \"),v(\"h2\",{attrs:{id:\"异步\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#异步\"}},[t._v(\"#\")]),t._v(\" 异步\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"异步是指，在多道程序环境下，允许多个程序并发执行\")]),t._v(\"，但由于\"),v(\"strong\",[t._v(\"资源有限，进程的执行不是一贯到底的\")]),t._v(\"， 而是走走停停，以不可预知的速度向前推进，这就是进程的异步性。\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231024201227650.png\",alt:\"image-20231024201227650\"}})]),t._v(\" \"),v(\"h2\",{attrs:{id:\"特权指令-非特权指令\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#特权指令-非特权指令\"}},[t._v(\"#\")]),t._v(\" 特权指令 && 非特权指令\")]),t._v(\" \"),v(\"p\",[t._v(\"应用程序只能使用\"),v(\"strong\",[t._v(\"非特权指令\")]),t._v(\"，如： 加法指令、减法指令等\")]),t._v(\" \"),v(\"p\",[t._v(\"操作系统内核作为“管理者”，有时会让CPU执行一些 \"),v(\"strong\",[t._v(\"“特权指令”\")]),t._v(\"，如：\"),v(\"strong\",[t._v(\"内存清零指令。这些指令影响重大， 只允许“管理者”——即操作系统内核来使用\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"在CPU设计和生产的时 候就划分了特权指令和 非特权指令，因此CPU 执行一条指令前就能判 断出其类型\")])]),t._v(\" \"),v(\"h3\",{attrs:{id:\"内核态-用户态\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#内核态-用户态\"}},[t._v(\"#\")]),t._v(\" 内核态&&用户态\")]),t._v(\" \"),v(\"p\",[t._v(\"CPU有两种状态，“内核态”和“用户态”\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"处于内核态时，说明此时正在运行的是内核程序，此时可以执行特权指令\")]),t._v(\" \"),v(\"li\",[t._v(\"处于用户态时，说明此时正在运行的是应用程序，此时只能执行非特权指令\")])]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"CPU能判断出指令类型，但是它怎么区分此时正在运行 的是内核程序or应用程序？\")])]),t._v(\" \"),v(\"p\",[t._v(\"拓展：CPU中有一个寄存器叫\"),v(\"strong\",[t._v(\"程序状态字寄存器（PSW）\")]),t._v(\"，其中有个二进制位，\"),v(\"strong\",[t._v(\"1表示 “内核态”，0表示“用户态”\")])]),t._v(\" \"),v(\"blockquote\",[v(\"p\",[t._v(\"如何实 现CPU状态的 切换？\")])]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"内核态 —> 用户态：执行一条特权指令——\"),v(\"strong\",[t._v(\"修改PSW的标志位为“用户态”，这个动作意味着操作系统将主动让出CPU使用权\")])]),t._v(\" \"),v(\"li\",[t._v(\"用户态—> 内核态：由\"),v(\"strong\",[t._v(\"中断引发\")]),t._v(\"，硬件自动完成变态过程，\"),v(\"strong\",[t._v(\"触发中断信号意味着操作系统将强行夺回CPU的使用权\")])])]),t._v(\" \"),v(\"br\"),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"原语\")]),t._v(\"是一种特殊的\"),v(\"strong\",[t._v(\"程序\")]),t._v(\"。 是最接近硬件的部分，这种程\"),v(\"strong\",[t._v(\"序的运行具有原子性。\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"中断\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#中断\"}},[t._v(\"#\")]),t._v(\" 中断\")]),t._v(\" \"),v(\"p\",[t._v(\"“中断”是让操作系统内核夺回CPU使用权的唯一途径\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231024202825835.png\",alt:\"image-20231024201444674\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231024203334821.png\",alt:\"image-20231024203947228\"}})]),t._v(\" \"),v(\"p\",[t._v(\"内中断  外中断\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"内外 针对的是CPU而言\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"内中断  也称为异常\")])]),t._v(\" \"),v(\"p\",[t._v(\"常见的引发有：\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"陷入指令\")]),t._v(\" \"),v(\"li\",[t._v(\"故障\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"应用程序想请求操作系统内核的服务\")]),t._v(\"，此时会执行一条特殊的指令——\"),v(\"strong\",[t._v(\"陷入指令\")]),t._v(\"，该指令会\"),v(\"strong\",[t._v(\"引发一个内部中断信号\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"陷入指令并不是特权指令，因为运行在用户态\")])]),t._v(\" \"),v(\"br\"),t._v(\" \"),v(\"p\",[t._v(\"外中断\")]),t._v(\" \"),v(\"ul\",[v(\"li\",[t._v(\"时钟中断\")]),t._v(\" \"),v(\"li\",[t._v(\"IO中断\")])]),t._v(\" \"),v(\"p\",[t._v(\"不同的中断信号，需要用不同的中断处理程序来处理。当CPU检测到中断信号后，会根据中断信号的类型去查询“中断向量表”，以此来找到相应的\"),v(\"strong\",[t._v(\"中断处理程序\")]),t._v(\"在内存中的存放位置。\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"显然，中断处理 程序一定是内核程序，需要运行在“内核态\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"进程\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程\"}},[t._v(\"#\")]),t._v(\" 进程\")]),t._v(\" \"),v(\"p\",[t._v(\"程序：是静态的，就是个存放在磁盘里的 可执行文件，如：QQ.exe。\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"进程：是动态的，是程序的一次执行过程\")]),t._v(\"， 如：可同时启动多次QQ程序\")]),t._v(\" \"),v(\"p\",[t._v(\"同一个程序\"),v(\"strong\",[t._v(\"多次执行会对应多个进程\")])]),t._v(\" \"),v(\"p\",[t._v(\"当进程被创建时，操作系统会为该进程 分配一个唯一的、\"),v(\"strong\",[t._v(\"不重复的“身份证号”——PID（ProcessID，进程ID）\")])]),t._v(\" \"),v(\"p\",[t._v(\"操作系统要记录PID、进程所属用户ID（UID）\")]),t._v(\" \"),v(\"p\",[t._v(\"还要记录给进程分配了哪些资源（如：分配了多少内存、正在使用哪些I/O设备、正在使用哪些文件）\")]),t._v(\" \"),v(\"p\",[t._v(\"这些信息都被保存在一个\"),v(\"strong\",[t._v(\"数据结构PCB（ProcessControlBlock）实际上是个结构体\")]),t._v(\"中，即进程控制块 操作系统需要对各个并发运行的进程进行管理，\"),v(\"strong\",[t._v(\"但凡管理时所需要的信息，都会被放在PCB中\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"PCB是进程存在的唯 一标志，当进程被创 建时，操作系统为其 创建PCB，当进程结束时，会回收其PCB。\")])]),t._v(\" \"),v(\"br\"),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"程序段、数据段、PCB三部分组成了进程实体（进程映像）\")])]),t._v(\" \"),v(\"p\",[t._v(\"引入进程实体的概念后，可把\"),v(\"strong\",[t._v(\"进程定义为： 进程是进程实体的运行过程，是系统进行资源分配和调度的一个独立单位。\")])]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025101122161.png\",alt:\"image-20231025101122161\"}})]),t._v(\" \"),v(\"br\"),t._v(\" \"),v(\"p\",[t._v(\"进程PCB中，\"),v(\"strong\",[t._v(\"会有一个变量state来表示进程的当前状态\")]),t._v(\"。如：1表示创建态、2表示就绪态、3表示运行态… 为了对同一个状态下的各个进程进行统一的管理，\"),v(\"strong\",[t._v(\"操作系统会将各个进程的PCB组织起来。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"每一种状态对应一个队列，一个队列有自己的指针\")])]),t._v(\" \"),v(\"p\",[t._v(\"通常会把优先级高的进程放在队头\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025101747249.png\",alt:\"image-20231025101553879\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025101806663.png\",alt:\"image-20231025101806663\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025101838727.png\",alt:\"image-20231025101838727\"}})]),t._v(\" \"),v(\"h3\",{attrs:{id:\"原子性的实现\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原子性的实现\"}},[t._v(\"#\")]),t._v(\" 原子性的实现\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"进程控制通过原语来实现\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"原语是一种特殊的程序， 它的执行具有原子性。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"如何实现原子性？\")])]),t._v(\" \"),v(\"p\",[t._v(\"可以用\"),v(\"strong\",[t._v(\"关中断指令和开中断指令这两个特权指令实现原子性\")])]),t._v(\" \"),v(\"p\",[t._v(\"正常情况：\"),v(\"strong\",[t._v(\"CPU每执行完一条指令都会例行检查是否有中断信号需要处理\")]),t._v(\"，如果有， 则暂停运行当前这段程序，转而执行相应的中断处理程序\")]),t._v(\" \"),v(\"br\"),t._v(\" \"),v(\"p\",[t._v(\"CPU\"),v(\"strong\",[t._v(\"执行了关中断指令之后，就不再例行检查中断信号，直到执行开中断指令之后 才会恢复检查。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"这样，关中断、开中断之间的这些指令序 列就是不可被中断的，这就实现了“原子性”\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"线程\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#线程\"}},[t._v(\"#\")]),t._v(\" 线程\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025110648773.png\",alt:\"image-20231025105909114\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025110745039.png\",alt:\"image-20231025111102575\"}})]),t._v(\" \"),v(\"p\",[t._v(\"有的进程可能需要“同时”做很多事，而传统 的进程只能串行地执行一系列程序。为此，引 入了“线程”，来增加并发度。\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"引入线程后，线程成为了程序执行流的最小单位\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"线程是一个基本的CPU执行单元， 也是程序执行流的最小单位\")]),t._v(\"。\")]),t._v(\" \"),v(\"p\",[t._v(\"引入线程之后，不仅是进程之间可以并发，进程内的各线程之间也可以并发，从而进一步提升了 系统的并发度，使得一个进程内也可以并发处理各种任务（如QQ 视频、文字聊天、传文件）\")]),t._v(\" \"),v(\"p\",[t._v(\"引入线程后，\"),v(\"strong\",[t._v(\"进程只作为除CPU之 外的系统资源的分配单元\")]),t._v(\"（如打 印机、内存地址空间等都是分配 给进程的）。\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"线程则作为处理机的分配单元。\")])]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025110905392.png\",alt:\"image-20231025110745039\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025110759247.png\",alt:\"image-20231025110759247\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231025113054747.png\",alt:\"image-20231025113024103\"}})]),t._v(\" \"),v(\"h2\",{attrs:{id:\"同步-互斥\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#同步-互斥\"}},[t._v(\"#\")]),t._v(\" 同步 && 互斥\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091704182.png\",alt:\"image-20231031091704182\"}})]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091724835.png\",alt:\"image-20231031092039669\"}})]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"同步：访问临界资源的顺序问题\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"互斥：一段时间只允许一个进程使用\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"信号量-p、v操作\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#信号量-p、v操作\"}},[t._v(\"#\")]),t._v(\" 信号量 P、V操作\")]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"信号量其实就是一个变量 ，可以用一个信号量 来表示系统中某种资源的数量\")]),t._v(\"，\"),v(\"strong\",[t._v(\"比如：系统中只有一台打印机，就可以设置一个初值为 1 的信号量。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"P( S ) —— 申请一个资源S，如果资源不够就阻塞等待\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"V( S ) —— 释放一个资源S，如果有进程在等待该资源，则唤醒一个进程\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"实现互斥的P操作一定要在实现同步的P操作之后。\")])]),t._v(\" \"),v(\"p\",[v(\"strong\",[t._v(\"V操作不会导致进程阻塞，因此两个V操作顺序可以交换\")])]),t._v(\" \"),v(\"h2\",{attrs:{id:\"管程\"}},[v(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#管程\"}},[t._v(\"#\")]),t._v(\" 管程\")]),t._v(\" \"),v(\"p\",[t._v(\"相当于对P/V操作的进一步封装，直接使用即可\")]),t._v(\" \"),v(\"p\",[v(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113935912.png\",alt:\"image-20231031113935912\"}})])])}),[],!1,null,null,null);v.default=o.exports}}]);","extractedComments":[]}