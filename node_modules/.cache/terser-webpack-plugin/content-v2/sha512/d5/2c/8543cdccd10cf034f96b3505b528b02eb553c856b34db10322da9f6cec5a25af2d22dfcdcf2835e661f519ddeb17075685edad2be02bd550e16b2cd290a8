{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{393:function(s,t,a){\"use strict\";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"redis实战总结01\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#redis实战总结01\"}},[s._v(\"#\")]),s._v(\" redis实战总结01\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"短信验证码登录\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#短信验证码登录\"}},[s._v(\"#\")]),s._v(\" 短信验证码登录\")]),s._v(\" \"),t(\"p\",[s._v(\"验证码  有效期  存在redis中\")]),s._v(\" \"),t(\"p\",[s._v(\"我们需要时刻牢记，redis是个\"),t(\"code\",[s._v(\"key-value\")]),s._v(\"型结构的数据库，key是什么，value是什么。\")]),s._v(\" \"),t(\"p\",[s._v(\"在设计这个key的时候，我们之前讲过需要满足两点\")]),s._v(\" \"),t(\"p\",[s._v(\"1、key要具有唯一性\")]),s._v(\" \"),t(\"p\",[s._v(\"2、key要方便携带\")]),s._v(\" \"),t(\"p\",[s._v(\"同时，在编码的时候，要注意\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"不要硬编码，写个枚举类或者常量\")]),s._v(\" \"),t(\"li\",[s._v(\"反向校验，减少嵌套\")]),s._v(\" \"),t(\"li\",[s._v(\"注意粒度，粒度不要太大\")]),s._v(\" \"),t(\"li\",[s._v(\"隐藏用户敏感信息\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"查询缓存\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#查询缓存\"}},[s._v(\"#\")]),s._v(\" 查询缓存\")]),s._v(\" \"),t(\"p\",[s._v(\"实际开发中,会构筑多级缓存来使系统运行速度进一步提升,例如:本地缓存与redis中的缓存并发使用\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"浏览器缓存\")]),s._v(\"：主要是存在于浏览器端的缓存\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"应用层缓存\")]),s._v(\":可以分为tomcat本地缓存，比如之前提到的map，或者是使用redis作为缓存\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"数据库缓存\")]),s._v(\":在数据库中有一片空间是 buffer pool，增改查数据都会先加载到mysql的缓存中\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"CPU缓存\")]),s._v(\":当代计算机最大的问题是 cpu性能提升了，但内存读写速度没有跟上，所以为了适应当下的情况，增加了cpu的L1，L2，L3级的缓存\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis04.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"在查多写少的地方，用缓存那是再好不过了\")]),s._v(\" \"),t(\"p\",[s._v(\"但是缓存也会增加代码复杂度和运营的成本:\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis05.png\"}}),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"后面基本上都是在围绕着数据一致性的问题来进行展开的\")])]),s._v(\" \"),t(\"p\",[t(\"code\",[s._v(\"of course\")]),s._v(\"只要涉及到两个的，都会存在同步的问题。\")]),s._v(\" \"),t(\"p\",[s._v(\"基本模型\")]),s._v(\" \"),t(\"p\",[s._v(\"标准的操作方式就是查询数据库之前先查询缓存，如果缓存数据存在，则直接从缓存中返回，如果缓存数据不存在，再查询数据库，然后将数据存入redis。\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis06.png\"}}),s._v(\" \"),t(\"h3\",{attrs:{id:\"缓存更新策略\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存更新策略\"}},[s._v(\"#\")]),s._v(\" 缓存更新策略\")]),s._v(\" \"),t(\"p\",[s._v(\"缓存更新是redis为了节约内存而设计出来的一个东西，主要是因为内存数据宝贵，当我们向redis插入太多数据，此时就可能会导致缓存中的数据过多，所以redis会对部分数据进行更新，或者把他叫为淘汰更合适。\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"内存淘汰\")]),s._v(\":redis自动进行，当redis内存达到咱们设定的max-memery的时候，会自动触发淘汰机制，淘汰掉一些不重要的数据(可以自己设置策略方式)\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"超时剔除\")]),s._v(\":当我们给redis设置了过期时间ttl之后，redis会将超时的数据进行删除，方便咱们继续使用缓存\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"主动更新\")]),s._v(\":我们可以手动调用方法把缓存删掉，\"),t(\"strong\",[s._v(\"通常用于解决缓存和数据库不一致问题\")])])])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis07.png\"}}),s._v(\" \"),t(\"h3\",{attrs:{id:\"数据库缓存同步\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#数据库缓存同步\"}},[s._v(\"#\")]),s._v(\" 数据库缓存同步\")]),s._v(\" \"),t(\"p\",[s._v(\"由于我们的\"),t(\"strong\",[s._v(\"缓存的数据源来自于数据库\")]),s._v(\",而数据库的\"),t(\"strong\",[s._v(\"数据是会发生变化的\")]),s._v(\",因此,如果当数据库中\"),t(\"strong\",[s._v(\"数据发生变化,而缓存却没有同步\")]),s._v(\",此时就会有\"),t(\"strong\",[s._v(\"一致性问题存在\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"解决方式：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"Cache Aside Pattern \"),t(\"strong\",[s._v(\"人工编码方式\")]),s._v(\"：缓存调用者在更新完数据库后再去更新缓存，也称之为\"),t(\"strong\",[s._v(\"双写方案    （大部分还是会采用人工编码方式   毕竟下面两种方式看上去比较复杂）\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Read/Write Through Pattern : 由系统本身完成，数据库与缓存的问题交由系统本身去处理\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Write Behind Caching Pattern ：调用者只操作缓存，其他线程去异步处理数据库，实现最终一致\")])])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis08.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"好的，那么既然采取人工编码的方式，两大问题来了\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"删除缓存还是更新缓存？\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"先操作数据库还是先操作缓存？\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"更新缓存：每次更新数据库都更新缓存，\"),t(\"strong\",[s._v(\"无效写操作较多\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"删除缓存：更新数据库时让缓存失效，查询时再更新缓存\")])])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"所以删除缓存\")])]),s._v(\" \"),t(\"p\",[s._v(\"如何保证缓存与数据库的操作的同时成功或失败？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"单体系统，将缓存与数据库操作放在\"),t(\"strong\",[s._v(\"一个事务\")])]),s._v(\" \"),t(\"li\",[s._v(\"分布式系统，利用\"),t(\"strong\",[s._v(\"TCC等分布式事务方案\")])])]),s._v(\" \"),t(\"p\",[s._v(\"先操作缓存还是先操作数据库？\")]),s._v(\" \"),t(\"p\",[s._v(\"先来看看删除缓存，在操作数据库的情况\")]),s._v(\" \"),t(\"p\",[s._v(\"这是正常情况\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis09.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"异常情况\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis10.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"删完缓存，去更新数据库，然而，\"),t(\"strong\",[s._v(\"更新数据库是比较耗时的\")]),s._v(\"，这个时候另一个线程来查缓存，未命中，查数据库，写缓存（这个时候是数据库的旧值）为什么这两个操作画在中间呢？查缓存，查数据库，写缓存，\"),t(\"strong\",[s._v(\"这些都是比较快速的操作\")]),s._v(\"，在数据库更新完成之前完全能做完，\"),t(\"strong\",[s._v(\"所以这种数据不一致的可能性就比较大   （本质上是删完缓存  更新数据库这之间时间隔得太久了，久是相对的）\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"我们再来看看先操作数据库，在更新缓存的情况。\")]),s._v(\" \"),t(\"p\",[s._v(\"这是正常情况：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis11.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"异常情况：\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis12.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"查询缓存直接命中的情况就不说了，这个确实是会导致一定的数据不一致\")]),s._v(\" \"),t(\"p\",[s._v(\"假如之前没有缓存，查缓存未命中，然后查数据库（此时查到的是旧值），然后线程一就去写缓存，\"),t(\"strong\",[s._v(\"这之间其实是隔得很短的\")]),s._v(\"，在线程一查到旧数据的时候，线程二开始更新数据库，删除缓存，\"),t(\"strong\",[s._v(\"更新数据库是个耗时操作\")]),s._v(\"，这个耗时很长的时间\"),t(\"strong\",[s._v(\"要在线程一耗时很短的两个动作之间完成，这种概率就比较低\")])]),s._v(\" \"),t(\"p\",[s._v(\"所以综上所述，先操作数据库，在删除缓存的数据不一致的概率更低。\")]),s._v(\" \"),t(\"p\",[s._v(\"因此，\"),t(\"strong\",[s._v(\"先操作数据库，在删除缓存\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"缓存穿透\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存穿透\"}},[s._v(\"#\")]),s._v(\" 缓存穿透\")]),s._v(\" \"),t(\"p\",[s._v(\"缓存穿透 ：缓存穿透是指客户端\"),t(\"strong\",[s._v(\"请求的数据在缓存中和数据库中都不存在\")]),s._v(\"，\"),t(\"strong\",[s._v(\"这样缓存永远不会生效，这些请求都会打到数据库。\")])]),s._v(\" \"),t(\"p\",[s._v(\"常见的解决方案有两种：缓存空对象，布隆过滤\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"缓存空对象思路分析：\"),t(\"strong\",[s._v(\"当我们客户端访问不存在的数据时，先请求redis，但是此时redis中没有数据，此时会访问到数据库，但是数据库中也没有数据，这个数据\")]),s._v(\"穿透了缓存，直击数据库\")]),s._v(\"，我们都知道数据库能够承载的并发不如redis这么高，如果大量的请求同时过来访问这种不存在的数据，这些请求就都会访问到数据库，简单的解决方案就是哪怕这个数据在数据库中也不存在，我们也把这个数据存入到redis中去，这样，\"),t(\"strong\",[s._v(\"下次\")]),s._v(\"用户过来访问这个不存在的数据\"),t(\"strong\",[s._v(\"下次一定是吧!!!万一人家只打一次，那不就寄了\")]),s._v(\"，那么在redis中也能找到这个数据就不会进入到缓存了\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"布隆过滤\")]),s._v(\"：布隆过滤器其实采用的是哈希思想来解决这个问题，通过一个庞大的二进制数组，走哈希思想去判断当前这个要查询的这个数据是否存在，如果布隆过滤器判断存在，则放行，这个请求会去访问redis，哪怕此时redis中的数据过期了，但是数据库中一定存在这个数据，在数据库中查询出来这个数据后，再将其放入到redis中，\")]),s._v(\" \"),t(\"p\",[s._v(\"假设布隆过滤器判断这个数据不存在，则直接返回\")]),s._v(\" \"),t(\"p\",[s._v(\"这种方式优点在于节约内存空间，存在误判，误判原因在于：布隆过滤器走的是哈希思想，只要哈希思想，就可能存在哈希冲突\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis13.png\"}}),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"缓存空对象\\n\"),t(\"ul\",[t(\"li\",[s._v(\"优点：实现简单，维护方便\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"额外的内存消耗，而且这样假如对面恶意请求，到时候缓存中存了一堆空对象    \"),t(\"strong\",[s._v(\"(其实还好？空对象不占内存，然后到时候设置个短的过期时间?)\")])]),s._v(\" \"),t(\"li\",[s._v(\"可能造成短期的不一致\")])])])])]),s._v(\" \"),t(\"li\",[s._v(\"布隆过滤\\n\"),t(\"ul\",[t(\"li\",[s._v(\"优点：内存占用较少，没有多余key\")]),s._v(\" \"),t(\"li\",[s._v(\"缺点：\\n\"),t(\"ul\",[t(\"li\",[s._v(\"实现复杂\")]),s._v(\" \"),t(\"li\",[s._v(\"存在误判可能\")])])])])])]),s._v(\" \"),t(\"p\",[s._v(\"缓存穿透产生的原因是什么？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"用户请求的数据在缓存中和数据库中都不存在，不断发起这样的请求，给数据库带来巨大压力\")])]),s._v(\" \"),t(\"p\",[s._v(\"缓存穿透的解决方案有哪些？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"缓存null值\")]),s._v(\" \"),t(\"li\",[s._v(\"布隆过滤\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"增强id的复杂度\")]),s._v(\"，避免被猜测id规律\")]),s._v(\" \"),t(\"li\",[s._v(\"做好数据的基础格式校验\")]),s._v(\" \"),t(\"li\",[s._v(\"加强用户权限校验\")]),s._v(\" \"),t(\"li\",[s._v(\"做好\"),t(\"strong\",[s._v(\"热点参数的限流\")])])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"缓存雪崩\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存雪崩\"}},[s._v(\"#\")]),s._v(\" 缓存雪崩\")]),s._v(\" \"),t(\"p\",[s._v(\"缓存雪崩是指在\"),t(\"strong\",[s._v(\"同一时段大量的缓存key同时失效\")]),s._v(\"或者\"),t(\"strong\",[s._v(\"Redis服务宕机\")]),s._v(\"，导致大量请求到达数据库，带来巨大压力。\")]),s._v(\" \"),t(\"p\",[s._v(\"解决方案：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"给不同的Key的TTL添加随机值    （一般会进行数据预热，先把一定的数据写入缓存中，这个时候就不要全都设置一个ttl，分开来）\")])]),s._v(\" \"),t(\"li\",[s._v(\"利用Redis集群提高服务的可用性\")]),s._v(\" \"),t(\"li\",[s._v(\"给缓存业务添加降级限流策略\")]),s._v(\" \"),t(\"li\",[s._v(\"给业务添加多级缓存\")])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis14.png\"}}),s._v(\" \"),t(\"h3\",{attrs:{id:\"缓存击穿\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#缓存击穿\"}},[s._v(\"#\")]),s._v(\" 缓存击穿\")]),s._v(\" \"),t(\"p\",[s._v(\"缓存击穿问题也叫\"),t(\"strong\",[s._v(\"热点Key\")]),s._v(\"问题，就是一个\"),t(\"strong\",[s._v(\"被高并发访问并且缓存\")]),s._v(\"重建业务较复杂的key突然失效了，\"),t(\"strong\",[s._v(\"无数的请求访问会在瞬间给数据库带来巨大的冲击\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"相当于一个高并发访问的key失效了，这样全都压到数据库了\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis15.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"常见的解决方案有两种：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"互斥锁\")]),s._v(\" \"),t(\"li\",[s._v(\"逻辑过期\")])]),s._v(\" \"),t(\"p\",[s._v(\"解决方案一、使用锁来解决：\")]),s._v(\" \"),t(\"p\",[s._v(\"因为锁能实现互斥性。假设线程过来，只能一个人一个人的来访问数据库，从而避免对于数据库访问压力过大，\"),t(\"strong\",[s._v(\"但这也会影响查询的性能，因为此时会让查询的性能从并行变成了串行\")]),s._v(\"，我们可以采用tryLock方法 + double check来解决这样的问题。\")]),s._v(\" \"),t(\"p\",[s._v(\"假设现在线程1过来访问，他查询缓存没有命中，但是此时他获得到了锁的资源，那么线程1就会一个人去执行逻辑，假设现在线程2过来，线程2在执行过程中，并没有获得到锁，那么线程2就可以进行到休眠，直到线程1把锁释放后，线程2获得到锁，然后再来执行逻辑，此时就能够从缓存中拿到数据了。\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis16.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"解决方案二、逻辑过期方案\")]),s._v(\" \"),t(\"p\",[s._v(\"方案分析：我们之所以会出现\"),t(\"strong\",[s._v(\"这个缓存击穿问题，主要原因是在于我们对key设置了过期时间，假设我们不设置过期时间，其实就不会有缓存击穿的问题，\"),t(\"strong\",[s._v(\"但是不设置过期时间，这样数据不就一直占用我们内存了吗，我们可以\")]),s._v(\"采用逻辑过期方案。\")])]),s._v(\" \"),t(\"p\",[s._v(\"我们把过期时间设置在 redis的value中，注意：这个过期时间并不会直接作用于redis，而是我们后续通过逻辑去处理。假设线程1去查询缓存，然后从value中判断出来当前的数据已经过期了，\"),t(\"strong\",[s._v(\"此时线程1去获得互斥锁，那么其他线程会进行阻塞\")]),s._v(\"，获得了锁的线程他会开启一个 线程去进行 以前的重构数据的逻辑，\"),t(\"strong\",[s._v(\"直到新开的线程完成这个逻辑后，才释放锁，\")]),s._v(\" 而线程1直接进行返回，假设现在线程3过来访问，由于线程线程2持有着锁，所以线程3无法获得锁，线程3也直接返回数据，只有等到新开的线程2把重建数据构建完后，其他线程才能走返回正确的数据。\")]),s._v(\" \"),t(\"p\",[s._v(\"这种方案巧妙在于，\"),t(\"strong\",[s._v(\"异步的构建缓存，缺点在于在构建完缓存之前，返回的都是脏数据。\")])]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis17.png\"}}),s._v(\" \"),t(\"p\",[s._v(\"进行对比\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"互斥锁方案\")]),s._v(\":由于保证了互斥性，所以数据一致，\"),t(\"strong\",[s._v(\"且实现简单\")]),s._v(\"，因为仅仅只需要加一把锁而已，也没其他的事情需要操心，\"),t(\"strong\",[s._v(\"所以没有额外的内存消耗\")]),s._v(\"，缺点在于有锁就有死锁问题的发生，且只能串行执行性能肯定受到影响\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"逻辑过期方案：\")]),s._v(\" 线程读取过程中不需要等待，性能好，有一个额外的线程持有锁去进行重构数据，但是在重构数据完成前，其他的线程只能返回之前的数据，且实现起来麻烦\")])])]),s._v(\" \"),t(\"h4\",{attrs:{id:\"互斥锁解决缓存击穿\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#互斥锁解决缓存击穿\"}},[s._v(\"#\")]),s._v(\" 互斥锁解决缓存击穿\")]),s._v(\" \"),t(\"p\",[s._v(\"核心思路：相较于原来从缓存中查询不到数据后直接查询数据库而言，现在的方案是 进行查询之后，如果从缓存没有查询到数据，则进行互斥锁的获取，获取互斥锁后，判断是否获得到了锁，如果没有获得到，\"),t(\"strong\",[s._v(\"则休眠，过一会再进行尝试，直到获取到锁为止，才能进行查询\")])]),s._v(\" \"),t(\"p\",[s._v(\"如果获取到了锁的线程，再去进行查询，查询后将数据写入redis，再释放锁，返回数据，利用互斥锁就能保证只有一个线程去执行操作数据库的逻辑，防止缓存击穿\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"操作锁的代码：\")])]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"Q:这里为什么不用synchronize?\")]),s._v(\" \"),t(\"p\",[s._v(\"真的假的，一个setnx就可以？\")])]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"核心思路就是利用redis的setnx方法来表示获取锁\")]),s._v(\"，该方法含义是redis中如果没有这个key，则插入成功，返回1，在stringRedisTemplate中返回true，  如果有这个key则插入失败，则返回0，在stringRedisTemplate返回false，我们可以通过true，或者是false，来表示是否有线程成功插入key，成功插入的key的线程我们认为他就是获得到锁的线程。\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis18.png\"}}),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"boolean\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"tryLock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Boolean\")]),s._v(\" flag \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setIfAbsent\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"TimeUnit\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"SECONDS\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"BooleanUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isTrue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"flag\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"unlock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"delete\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\")])]),t(\"p\",[t(\"strong\",[s._v(\"操作代码：\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"queryWithMutex\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Long\")]),s._v(\" id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" key \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_SHOP_KEY\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 1、从redis中查询商铺缓存\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" shopJson \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"get\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"key\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 2、判断是否存在\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"StrUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isNotBlank\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"shopJson\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 存在,直接返回\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JSONUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toBean\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"shopJson\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//判断命中的值是否是空值\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"shopJson \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//返回一个错误信息\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 4.实现缓存重构\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//4.1 获取互斥锁\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" lockKey \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"lock:shop:\"')]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),s._v(\" shop \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n     \\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"try\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"boolean\")]),s._v(\" isLock \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"tryLock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"lockKey\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 4.2 判断否获取成功\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"!\")]),s._v(\"isLock\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//4.3 失败，则休眠重试\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Thread\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"sleep\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"50\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"queryWithMutex\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//4.4 成功，根据id查询数据库\")]),s._v(\"\\n             shop \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getById\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 5.不存在，返回错误\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"shop \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"==\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                 \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//将空值写入redis\")]),s._v(\"\\n                stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"set\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_NULL_TTL\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"TimeUnit\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"MINUTES\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//返回错误信息\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//6.写入redis\")]),s._v(\"\\n            stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"set\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JSONUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toJsonStr\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"shop\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_NULL_TTL\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"TimeUnit\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"MINUTES\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"catch\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Exception\")]),s._v(\" e\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throw\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RuntimeException\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"e\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"finally\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//7.释放互斥锁\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"unlock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"lockKey\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n     \\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" shop\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"42\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"43\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"44\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"45\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"46\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"47\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"48\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"49\")]),t(\"br\")])]),t(\"h4\",{attrs:{id:\"逻辑过期解决缓存击穿\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#逻辑过期解决缓存击穿\"}},[s._v(\"#\")]),s._v(\" 逻辑过期解决缓存击穿\")]),s._v(\" \"),t(\"p\",[s._v(\"思路分析：当用户开始查询redis时，判断是否命中，如果没有命中则直接返回空数据，不查询数据库，而一旦命中后，将value取出，判断value中的过期时间是否满足，如果没有过期，则直接返回redis中的数据，如果过期，则在开启独立线程后直接返回之前的数据，独立线程去重构数据，重构完成后释放互斥锁。\")]),s._v(\" \"),t(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/redis19.png\"}}),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"ShopServiceImpl\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"static\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"final\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ExecutorService\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_REBUILD_EXECUTOR\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Executors\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"newFixedThreadPool\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"10\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"queryWithLogicalExpire\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Long\")]),s._v(\" id \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" key \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_SHOP_KEY\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 1.从redis查询商铺缓存\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" json \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" stringRedisTemplate\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"opsForValue\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"get\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"key\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 2.判断是否存在\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"StrUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isBlank\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"json\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 3.存在，直接返回\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"null\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 4.命中，需要先把json反序列化为对象\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RedisData\")]),s._v(\" redisData \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JSONUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toBean\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"json\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RedisData\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),s._v(\" shop \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JSONUtil\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"toBean\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"JSONObject\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" redisData\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getData\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Shop\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"LocalDateTime\")]),s._v(\" expireTime \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" redisData\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getExpireTime\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 5.判断是否过期\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"expireTime\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"isAfter\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"LocalDateTime\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"now\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 5.1.未过期，直接返回店铺信息\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" shop\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 5.2.已过期，需要缓存重建\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 6.缓存重建\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 6.1.获取互斥锁\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" lockKey \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"LOCK_SHOP_KEY\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"+\")]),s._v(\" id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"boolean\")]),s._v(\" isLock \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"tryLock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"lockKey\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 6.2.判断是否获取锁成功\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"if\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"isLock\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"CACHE_REBUILD_EXECUTOR\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"submit\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"->\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"try\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//重建缓存\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"saveShop2Redis\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"id\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token number\"}},[s._v(\"20L\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"catch\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Exception\")]),s._v(\" e\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throw\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RuntimeException\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"e\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"finally\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n                \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"unlock\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"lockKey\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n            \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 6.4.返回过期的商铺信息\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" shop\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"38\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"39\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"40\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"41\")]),t(\"br\")])])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}