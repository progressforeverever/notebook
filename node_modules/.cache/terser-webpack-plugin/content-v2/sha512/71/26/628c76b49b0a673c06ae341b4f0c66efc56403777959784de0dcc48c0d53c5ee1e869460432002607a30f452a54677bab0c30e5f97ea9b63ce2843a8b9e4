{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{453:function(t,o,s){\"use strict\";s.r(o);var a=s(4),n=Object(a.a)({},(function(){var t=this,o=t._self._c;return o(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":t.$parent.slotKey}},[o(\"h1\",{attrs:{id:\"调度算法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调度算法\"}},[t._v(\"#\")]),t._v(\" 调度算法\")]),t._v(\" \"),o(\"h2\",{attrs:{id:\"调度的概念\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调度的概念\"}},[t._v(\"#\")]),t._v(\" 调度的概念\")]),t._v(\" \"),o(\"p\",[t._v(\"当有一堆任务要处理，但由于资源有限，这些事情没法同时处理。这就需要确定\"),o(\"strong\",[t._v(\"某种规则\")]),t._v(\"来决定\"),o(\"strong\",[t._v(\"处理 这些任务的顺序\")]),t._v(\"，这就是“调度”研究的问题。\")]),t._v(\" \"),o(\"p\",[t._v(\"若进程未能在时间片内运行完，将被强行剥夺处理机使用 权，因此时间片轮转调度算法\"),o(\"strong\",[t._v(\"属于抢占式的算法\")]),t._v(\"。由时钟 装置发出时钟中断来通知CPU时间片已到\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030203732935.png\",alt:\"image-20231030202843793\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"高级调度\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高级调度\"}},[t._v(\"#\")]),t._v(\" 高级调度\")]),t._v(\" \"),o(\"p\",[t._v(\"因为内存空间有限，有时无 法将用户提交的作业全 部放入内存\")]),t._v(\" \"),o(\"p\",[t._v(\"高级调度（作业调度）。按一定的原则从\"),o(\"strong\",[t._v(\"外存\")]),t._v(\"的\"),o(\"strong\",[t._v(\"作业后备队列\")]),t._v(\"中挑选一个作业\"),o(\"strong\",[t._v(\"调入内存\")]),t._v(\"，并创建进程。\"),o(\"strong\",[t._v(\"每个作业只调入一次，调出一次\")]),t._v(\".作业调入时会建立PCB，调出时才撤销PCB。\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"低级调度\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#低级调度\"}},[t._v(\"#\")]),t._v(\" 低级调度\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"低级调度（进程调度/处理机调度）\")]),t._v(\"——按照某种策略从就绪队列中选取一个进程，将处理机分配 给它。\")]),t._v(\" \"),o(\"p\",[t._v(\"进程调度是操作系统中最基本的一种调度，在一般的操作系统中都必须配置进程调度。 \"),o(\"strong\",[t._v(\"进程调度的频率很高，一般几十毫秒一次。\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"中极调度\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#中极调度\"}},[t._v(\"#\")]),t._v(\" 中极调度\")]),t._v(\" \"),o(\"p\",[t._v(\"内存不够时，可将某些进程的数据\"),o(\"strong\",[t._v(\"调出外存。等内存空闲或者进程需要运行时再重新调入内存\")]),t._v(\"。 暂时\"),o(\"strong\",[t._v(\"调到外存等待的进程状态为挂起状态\")]),t._v(\"。被挂起的进程PCB会被组织成挂起队列\")]),t._v(\" \"),o(\"p\",[t._v(\"中级调度（内存调度）——按照某种策略决定将\"),o(\"strong\",[t._v(\"哪个处于挂起状态的进程重新调入内存\")]),t._v(\"。 一个进程可能会\"),o(\"strong\",[t._v(\"被多次调出、调入内存，因此中级调度发生的频率要比高级调度更高。\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"七状态模型\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#七状态模型\"}},[t._v(\"#\")]),t._v(\" 七状态模型\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030202843793.png\",alt:\"image-20231030203633873\"}})]),t._v(\" \"),o(\"p\",[t._v(\"注意“挂起”和“阻塞”的区别，两种 状态都是暂时不能获得CPU的服务，但 \"),o(\"strong\",[t._v(\"挂起态是将进程映像调到外存去了，而 阻塞态下进程映像还在内存中。\")]),t._v(\" 有的操作系统会把就绪挂起、阻塞挂起 分为两个挂起队列，甚至会根据阻塞原 因不同再把阻塞挂起进程进一步细分为 多个队列\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030203633873.png\",alt:\"image-20231030203732935\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"进程调度的时机与方式\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程调度的时机与方式\"}},[t._v(\"#\")]),t._v(\" 进程调度的时机与方式\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030203823883.png\",alt:\"image-20231030203823883\"}})]),t._v(\" \"),o(\"p\",[t._v(\"不能进行进程调度：\")]),t._v(\" \"),o(\"p\",[t._v(\"1.\"),o(\"strong\",[t._v(\"在处理中断的过程中\")]),t._v(\":中断处理过程复杂，与硬件密切相关，很难 做到在中断处理过程中进行进程切换。\")]),t._v(\" \"),o(\"p\",[t._v(\"2.\"),o(\"strong\",[t._v(\"进程在操作系统内核程序临界区中\")]),t._v(\"。\")]),t._v(\" \"),o(\"p\",[t._v(\"3.在原子操作过程中（原语）。原子操作不可中断，要一气呵成（如 之前讲过的修改PCB中进程状态标志，并把PCB放到相应队列）\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"临界资源：一个时间段内只允许一个进程使用的资源。各进程需要互斥地访问临界资源。\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"临界区：访问临界资源的那段代码。\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"内核程序临界区\")]),t._v(\"一般是用来访问某种内核数据结构的，比如进程的就绪队列（由各就绪进程的PCB组成）\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"注意内核\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"内核程序临界区\")]),t._v(\"访问的临界资源 如果不尽快释放的话，极有可能 影响到操作系统内核的其他管理 工作。\"),o(\"strong\",[t._v(\"因此在访问内核程序临界 区期间不能进行调度与切换\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"普通临界区\")]),t._v(\"访问的临界资源不 会直接影响操作系统内核的管 理工作。\"),o(\"strong\",[t._v(\"因此在访问普通临界 区时可以进行调度与切换。\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"进程调度的方式\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程调度的方式\"}},[t._v(\"#\")]),t._v(\" 进程调度的方式\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"非剥夺调度方式，又称非抢占方式。即，只允许进程主动放弃处理机\")]),t._v(\".在运行过程中即便有更紧迫 的任务到达，当前进程依然会继续使用处理机，直到该进程终止或主动要求进入阻塞态。\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"实现简单，系统开销小\")]),t._v(\"但是无法及时处 理紧急任务，适合于早期的批处理系统\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"剥夺调度方式，又称抢占方式。当一个进程正在处理机上执行时，如果有一个更重要或更紧迫的进 程需要使用处理机\")]),t._v(\",则立即暂停正在执行的进程，将处理机分配给更重要紧迫的那个进程。\")]),t._v(\" \"),o(\"p\",[t._v(\"可以优先处理更紧急的进程，也可实现让各进程按时间片轮流执行的功能（通过\"),o(\"strong\",[t._v(\"时钟中断\")]),t._v(\"）。适合于分时操作系统、实时操作系统\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030204253986.png\",alt:\"image-20231030204253986\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030204322300.png\",alt:\"image-20231030210452181\"}})]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"闲逛进程 是调度程序永远的备胎，没有其他就绪进程时，运行闲逛进程（idle）\")])]),t._v(\" \"),o(\"p\",[t._v(\"闲逛进程的特性：\")]),t._v(\" \"),o(\"ul\",[o(\"li\",[t._v(\"优先级最低\")]),t._v(\" \"),o(\"li\",[t._v(\"可以是0地址指令，占一个完整的指令周期（指令周期末尾例行检查中断）\")]),t._v(\" \"),o(\"li\",[t._v(\"能耗低\")])]),t._v(\" \"),o(\"h2\",{attrs:{id:\"调度算法的评价指标\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调度算法的评价指标\"}},[t._v(\"#\")]),t._v(\" 调度算法的评价指标\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030210452181.png\",alt:\"image-20231030204322300\"}})]),t._v(\" \"),o(\"p\",[t._v(\"主要是用来计算\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030211044724.png\",alt:\"image-20231030210517784\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030211101596.png\",alt:\"image-20231031084813569\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030210535209.png\",alt:\"image-20231030210535209\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030210603174.png\",alt:\"image-20231030210603174\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030210517784.png\",alt:\"image-20231030211101596\"}})]),t._v(\" \"),o(\"p\",[t._v(\"响应时间，指从用户提交请求到首次产生响应所用的时间\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231030211124860.png\",alt:\"image-20231031084915386\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"调度算法-2\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#调度算法-2\"}},[t._v(\"#\")]),t._v(\" 调度算法\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"先来先服务\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#先来先服务\"}},[t._v(\"#\")]),t._v(\" 先来先服务\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031084605193.png\",alt:\"image-20231030211044724\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031084635270.png\",alt:\"image-20231030211124860\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031084705593.png\",alt:\"image-20231031084605193\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"短作业优先\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#短作业优先\"}},[t._v(\"#\")]),t._v(\" 短作业优先\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031084915386.png\",alt:\"image-20231031084635270\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031085103695.png\",alt:\"image-20231031084705593\"}})]),t._v(\" \"),o(\"p\",[t._v(\"主要是要把这个顺序图给画出来\")]),t._v(\" \"),o(\"p\",[t._v(\"抢占式的：\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031084813569.png\",alt:\"image-20231031085103695\"}})]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"每当有进程加入就绪队列改变时就需 要调度\")]),t._v(\"，如果新到达的进程剩余时间比当前运行的进程剩余时间更短，则由新进程抢占处理机，当前运行进程重新回到就绪 队列。另外，当\"),o(\"strong\",[t._v(\"一个进程完成时也需要调度\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031085218770.png\",alt:\"image-20231031085218770\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"高响应比算法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#高响应比算法\"}},[t._v(\"#\")]),t._v(\" 高响应比算法\")]),t._v(\" \"),o(\"p\",[t._v(\"FCFS 算法是在每次调度的时候选择一个等待时间最长 的作业（进程）为其服务。但是没有考虑到作业的运行时间，因此导致了对\"),o(\"strong\",[t._v(\"短作业不友好的问题\")])]),t._v(\" \"),o(\"p\",[t._v(\"SJF 算法是选择一个执行时间最短的作业为其服 务。但是又完全不考虑各个作业的等待时间，因 此导致了\"),o(\"strong\",[t._v(\"对长作业不友好的问题\")]),t._v(\"，甚至还会造成 饥饿问题 能不能设计一个算法，即\"),o(\"strong\",[t._v(\"考虑到各个作业 的等待时间，也能兼顾运行时间呢？ 高响应比优先算法\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031085401055.png\",alt:\"image-20231031085401055\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031085627316.png\",alt:\"image-20231031085627316\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"时间片轮转\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#时间片轮转\"}},[t._v(\"#\")]),t._v(\" 时间片轮转\")]),t._v(\" \"),o(\"p\",[t._v(\"按照各进程到达就绪队列的顺序，轮流让各个进程执行一 个时间片（如 100ms）。若进程未在一个时间片内执行完， \"),o(\"strong\",[t._v(\"则剥夺处理机\")]),t._v(\"，将进程重新放到就绪队列队尾重新排队。\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090200289.png\",alt:\"image-20231031085645495\"}})]),t._v(\" \"),o(\"p\",[t._v(\"这几种算法主要关心对用户的\"),o(\"strong\",[t._v(\"公平性、平均周转时间、平均等待时间等评价系统整体性能的指标，但 是不关心“响应时间”，也并不区分任务的紧急程度\")]),t._v(\"，因此对于用户来说，交互性很糟糕。因此这三种算法一般\"),o(\"strong\",[t._v(\"适合用于早期的批处理系统，\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031085645495.png\",alt:\"image-20231031090200289\"}})]),t._v(\" \"),o(\"p\",[t._v(\"例子：\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090644716.png\",alt:\"image-20231031090644716\"}})]),t._v(\" \"),o(\"p\",[t._v(\"有个队列，新到的和刚从处理机下队列的，假如要同时入队列，新到的进程先入队列。\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"优先级调度\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#优先级调度\"}},[t._v(\"#\")]),t._v(\" 优先级调度\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090817969.png\",alt:\"image-20231031090817969\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090956896.png\",alt:\"image-20231031091413153\"}})]),t._v(\" \"),o(\"p\",[t._v(\"非抢占式的\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090849795.png\",alt:\"image-20231031090849795\"}})]),t._v(\" \"),o(\"p\",[t._v(\"抢占式的：每一个进程入队列的时候就检查一下，进行调度\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031090925350.png\",alt:\"image-20231031090925350\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"多级反馈队列\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多级反馈队列\"}},[t._v(\"#\")]),t._v(\" 多级反馈队列\")]),t._v(\" \"),o(\"p\",[t._v(\"FCFS算法的优点是公平\")]),t._v(\" \"),o(\"p\",[t._v(\"SJF 算法的优点是能尽快处理完短作业， 平均等待/周转时间等参数很优秀\")]),t._v(\" \"),o(\"p\",[t._v(\"时间片轮转调度算法可以让各个进程得 到及时的响应\")]),t._v(\" \"),o(\"p\",[t._v(\"优先级调度算法可以灵活地调整各种进 程被服务的机会\")]),t._v(\" \"),o(\"p\",[t._v(\"能否对其他算法做个折中权衡？得到一个 综合表现优秀平衡的算法呢？ \"),o(\"strong\",[t._v(\"多级反馈队列调度算法\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091413153.png\",alt:\"image-20231031091453939\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091439878.png\",alt:\"image-20231031090956896\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091453939.png\",alt:\"image-20231031091439878\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"多级队列\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多级队列\"}},[t._v(\"#\")]),t._v(\" 多级队列\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091551870.png\",alt:\"image-20231031091551870\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"进程同步与进程互斥\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程同步与进程互斥\"}},[t._v(\"#\")]),t._v(\" 进程同步与进程互斥\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"进程同步\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程同步\"}},[t._v(\"#\")]),t._v(\" 进程同步\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091704182.png\",alt:\"image-20231031091704182\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"进程互斥\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程互斥\"}},[t._v(\"#\")]),t._v(\" 进程互斥\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031092039669.png\",alt:\"image-20231031091724835\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031091724835.png\",alt:\"image-20231031092039669\"}})]),t._v(\" \"),o(\"p\",[t._v(\"为了实现对临界资源的互斥访问，同时保证系统整体性能，需要遵循以下原则：\")]),t._v(\" \"),o(\"ol\",[o(\"li\",[t._v(\"空闲让进。临界区空闲时，可以允许一个请求进入临界区的进程立即进入临界区；\")]),t._v(\" \"),o(\"li\",[t._v(\"忙则等待。当已有进程进入临界区时，其他试图进入临界区的进程必须等待；\")]),t._v(\" \"),o(\"li\",[o(\"strong\",[t._v(\"有限等待\")]),t._v(\"。对请求访问的进程，应保证能在有限时间内进入临界区（保证不会饥饿）；\")]),t._v(\" \"),o(\"li\",[o(\"strong\",[t._v(\"让权等待。当进程不能进入临界区时，应立即释放处理机，防止进程忙等待\")])])]),t._v(\" \"),o(\"h2\",{attrs:{id:\"进程互斥的软件实现\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程互斥的软件实现\"}},[t._v(\"#\")]),t._v(\" 进程互斥的软件实现\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031093302998.png\",alt:\"image-20231031093501193\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"单标志法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#单标志法\"}},[t._v(\"#\")]),t._v(\" 单标志法\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031093501193.png\",alt:\"image-20231031093342728\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031093342728.png\",alt:\"image-20231031093837672\"}})]),t._v(\" \"),o(\"p\",[t._v(\"只能按 P0  P1 P0  P1……这样轮流访问。这种必须“轮流访问”带来的问题是，如果此时允许进 入临界区的进程是 P0，\"),o(\"strong\",[t._v(\"而 P0 一直不访问临界区，那么虽然此时临界区空闲，但是并不允许 P1 访问。 因此，单标志法存在的主要问题是：违背“空闲让进”原则\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"双标志先检查法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双标志先检查法\"}},[t._v(\"#\")]),t._v(\" 双标志先检查法\")]),t._v(\" \"),o(\"p\",[t._v(\"算法思想：\"),o(\"strong\",[t._v(\"设置一个布尔型数组 flag[]，数组中各个元素用来标记各进程想进入临界区的意愿\")]),t._v(\"，比如 “flag[0] = true”意味着 0 号进程 P0 现在想要进入临界区。每个进程在进入临界区之前先检查当前有 没有别的进程想进入临界区，如果没有，则把自身对应的标志 flag[i] 设为 true，之后开始访问临界区。\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031093633467.png\",alt:\"image-20231031093302998\"}})]),t._v(\" \"),o(\"p\",[t._v(\"若按照 ①⑤②⑥③⑦….的顺序执行，P0 和 P1 将会同时访问临界区。 因此，双标志先检查法的主要问题是：\"),o(\"strong\",[t._v(\"违反“忙则等待”原则\")]),t._v(\"。 原因在于，\"),o(\"strong\",[t._v(\"进入区的“检查”和“上锁” 两个处理不是一气呵成的\")]),t._v(\"。“检查”后，“上锁”前可能发 生进程切换\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"双标志后检查法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#双标志后检查法\"}},[t._v(\"#\")]),t._v(\" 双标志后检查法\")]),t._v(\" \"),o(\"p\",[t._v(\"算法思想：双标志先检查法的改版。前一个算法的问题是先“检查”后“上锁”，但是这两个操作又 无法一气呵成，因此导致了两个进程同时进入临界区的问题。因此，人们又想到先“上锁”后“检查” 的方法，来避免上述问题\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031093837672.png\",alt:\"image-20231031103950895\"}})]),t._v(\" \"),o(\"p\",[t._v(\"若按照 ①⑤②⑥….的顺序执行，P0 和 P1 将都无法进入临界区 因此，双标志后检查法虽然解\"),o(\"strong\",[t._v(\"决了“忙则等待”的问题，但是又违背了“空闲让进”和“有限等待” 原则，会因各进程都长期无法访问临界资源而产生“饥饿”现象。\")]),t._v(\" 两个进程都争着想进入临界区，但是谁也不让谁，最后谁都无法进入临界区。\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"peterson算法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#peterson算法\"}},[t._v(\"#\")]),t._v(\" Peterson算法\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031094055936.png\",alt:\"image-20231031094002474\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031094002474.png\",alt:\"image-20231031094055936\"}})]),t._v(\" \"),o(\"p\",[t._v(\"Peterson 算法用软件方法解决了进 程互斥问题，遵循了空闲让进、忙 则等待、有限等待 三个原则，但是 \"),o(\"strong\",[t._v(\"依然未遵循让权等待的原则（因为一个进程自己不执行，仍然卡在while循环那里，没有下处理机）\")]),t._v(\"。 Peterson 算法相较于之前三种软件 解决方案来说，是最好的，但依然 不够好\")]),t._v(\" \"),o(\"h2\",{attrs:{id:\"进程互斥的硬件实现\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#进程互斥的硬件实现\"}},[t._v(\"#\")]),t._v(\" 进程互斥的硬件实现\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"中断屏蔽方法\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#中断屏蔽方法\"}},[t._v(\"#\")]),t._v(\" 中断屏蔽方法\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031094355218.png\",alt:\"image-20231031093633467\"}})]),t._v(\" \"),o(\"p\",[t._v(\"利用“开/关中断指令”实现（与原语的实现思想相同，即在某进程开始访问临界区到结束访问为 止都不允许被中断，也就不能发生进程切换，因此也不可能发生两个同时访问临界区的情况） 关中断后即不允许当前进程被中 断，也必然不会发生进程切换 直到当前进程访问完临界区，再执行开中断指令，才有可能有别 的进程上处理机并访问临界区\")]),t._v(\" \"),o(\"p\",[t._v(\"优点：简单、高效\")]),t._v(\" \"),o(\"p\",[t._v(\"缺点：不适用于多处理机；只适用于操作系统内核进程，不适用于用户进程（因为开/关中断指令 只能运行在内核态，这组指令如果能让用户随意使用会很危险\")]),t._v(\" \"),o(\"h3\",{attrs:{id:\"testandset\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#testandset\"}},[t._v(\"#\")]),t._v(\" TestAndSet\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031094448457.png\",alt:\"image-20231031094355218\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"swap指令\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#swap指令\"}},[t._v(\"#\")]),t._v(\" Swap指令\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031102914172.png\",alt:\"image-20231031094448457\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"互斥锁\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#互斥锁\"}},[t._v(\"#\")]),t._v(\" 互斥锁\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031104023853.png\",alt:\"image-20231031102914172\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"信号量机制\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#信号量机制\"}},[t._v(\"#\")]),t._v(\" 信号量机制\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031110813143.png\",alt:\"image-20231031104023853\"}})]),t._v(\" \"),o(\"p\",[t._v(\"用户进程可以通过使用操作系统提供的一对原语来对信号量进行操作，从而很方便的实现了进程互斥、进程同步。\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"信号量其实就是一个变量 ，可以用一个信号量 来表示系统中某种资源的数量\")]),t._v(\"，\"),o(\"strong\",[t._v(\"比如：系统中只有一台打印机，就可以设置一个初值为 1 的信号量。\")]),t._v(\" 原语是一种特殊的程序段，其执行只能一气呵成，不可被中断。原语是由关中断/开中断指令实现 的。\")]),t._v(\" \"),o(\"p\",[t._v(\"软件解决方案的主要问题是由“进入区的各种操作无法一气呵成”，因此如果能把进入区、退 出区的操作都用“原语”实现，使这些操作能“一气呵成”就能避免问题。\")]),t._v(\" \"),o(\"p\",[t._v(\"一对原语：wait(S) 原语和 signal(S) 原语，可以把原语理解为我们自己写的函数，函数名分别为 wait 和 signal，括号里的信号量 S 其实就是函数调用时传入的一个参数。\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"wait、signal 原语常简称为 P、V操作（来自荷兰语 proberen 和 verhogen）。\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"因此，做题的时候常把 wait(S)、signal(S) 两个操作分别写为 P(S)、V(S)\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031110750609.png\",alt:\"image-20231031110750609\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031111209031.png\",alt:\"image-20231031110813143\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031110830342.png\",alt:\"image-20231031110830342\"}})]),t._v(\" \"),o(\"p\",[t._v(\"信号量的值 = 这种资源的剩余数量（信号量的值如果小于0，说明此时有进程在等待这种资源）\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"P( S ) —— 申请一个资源S，如果资源不够就阻塞等待\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"V( S ) —— 释放一个资源S，如果有进程在等待该资源，则唤醒一个进程\")])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031111237445.png\",alt:\"image-20231031111209031\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031111221027.png\",alt:\"image-20231031111221027\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031111341847.png\",alt:\"image-20231031111237445\"}})]),t._v(\" \"),o(\"p\",[t._v(\"前v后p\")]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"在前面先执行的操作要释放资源，后执行的要先能够申请到资源才执行\")])]),t._v(\" \"),o(\"p\",[t._v(\"同步问题，先...再...\")]),t._v(\" \"),o(\"p\",[t._v(\"所以要找好这个关系\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112113192.png\",alt:\"image-20231031111341847\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"生产者消费者问题\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#生产者消费者问题\"}},[t._v(\"#\")]),t._v(\" 生产者消费者问题\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112123415.png\",alt:\"image-20231031112045581\"}})]),t._v(\" \"),o(\"p\",[t._v(\"分析这种先后顺序的关系\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112045581.png\",alt:\"image-20231031112113192\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031103950895.png\",alt:\"image-20231031112123415\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112134750.png\",alt:\"image-20231031112134750\"}})]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"因此，实现互斥的P操作一定要在实现同步的P操作之后。\")])]),t._v(\" \"),o(\"p\",[o(\"strong\",[t._v(\"V操作不会导致进程阻塞，因此两个V操作顺序可以交换\")])]),t._v(\" \"),o(\"h3\",{attrs:{id:\"多生产者-多消费者\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#多生产者-多消费者\"}},[t._v(\"#\")]),t._v(\" 多生产者 多消费者\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112247790.png\",alt:\"image-20231031112247790\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112539769.png\",alt:\"image-20231031112300824\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112300824.png\",alt:\"image-20231031112539769\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112553855.png\",alt:\"image-20231031112553855\"}})]),t._v(\" \"),o(\"p\",[t._v(\"PV 操作题目的解题思路：\")]),t._v(\" \"),o(\"ol\",[o(\"li\",[t._v(\"关系分析。找出题目中描述的各个进程，分析它们之间的同步、互斥关系。\")]),t._v(\" \"),o(\"li\",[t._v(\"整理思路。根据各进程的操作流程确定P、V操作的大致顺序。\")]),t._v(\" \"),o(\"li\",[t._v(\"设置信号量。设置需要的信号量，并根据题目条件确定信号量初值。（\"),o(\"strong\",[t._v(\"互斥信号量初值一般为 1，同步信号量的初始值要看对应资源的初始值是多少）\")])])]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031112647823.png\",alt:\"image-20231031112647823\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"吸烟者问题\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#吸烟者问题\"}},[t._v(\"#\")]),t._v(\" 吸烟者问题\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113511064.png\",alt:\"image-20231031113447027\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113457470.png\",alt:\"image-20231031113457470\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113447027.png\",alt:\"image-20231031113511064\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"读者写者问题\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#读者写者问题\"}},[t._v(\"#\")]),t._v(\" 读者写者问题\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113623306.png\",alt:\"image-20231031113607424\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113636613.png\",alt:\"image-20231031113623306\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113607424.png\",alt:\"image-20231031113636613\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113644970.png\",alt:\"image-20231031113644970\"}})]),t._v(\" \"),o(\"h3\",{attrs:{id:\"哲学家进餐问题\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#哲学家进餐问题\"}},[t._v(\"#\")]),t._v(\" 哲学家进餐问题\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113720017.png\",alt:\"image-20231031113720017\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113732392.png\",alt:\"image-20231031113732392\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113803578.png\",alt:\"image-20231031113748906\"}})]),t._v(\" \"),o(\"h2\",{attrs:{id:\"管程\"}},[o(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#管程\"}},[t._v(\"#\")]),t._v(\" 管程\")]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113832109.png\",alt:\"image-20231031113912301\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113923875.png\",alt:\"image-20231031113803578\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113912301.png\",alt:\"image-20231031113832109\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113935912.png\",alt:\"image-20231031113935912\"}})]),t._v(\" \"),o(\"p\",[o(\"img\",{attrs:{src:\"https://czynotebook.oss-cn-beijing.aliyuncs.com/notebook/image-20231031113943371.png\",alt:\"image-20231031113943371\"}})])])}),[],!1,null,null,null);o.default=n.exports}}]);","extractedComments":[]}