{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[83],{414:function(s,t,a){\"use strict\";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"p\",[s._v(\"这篇文章会从下面从以下几个问题展开对 IoC & AOP 的解释\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"什么是 IoC？\")]),s._v(\" \"),t(\"li\",[s._v(\"IoC 解决了什么问题？\")]),s._v(\" \"),t(\"li\",[s._v(\"IoC 和 DI 的区别？\")]),s._v(\" \"),t(\"li\",[s._v(\"什么是 AOP？\")]),s._v(\" \"),t(\"li\",[s._v(\"AOP 解决了什么问题？\")]),s._v(\" \"),t(\"li\",[s._v(\"AOP 的应用场景有哪些？\")]),s._v(\" \"),t(\"li\",[s._v(\"AOP 为什么叫做切面编程？\")]),s._v(\" \"),t(\"li\",[s._v(\"AOP 实现方式有哪些？\")])]),s._v(\" \"),t(\"p\",[s._v(\"首先声明：IoC & AOP 不是 Spring 提出来的，它们在 Spring 之前其实已经存在了，只不过当时更加偏向于理论。Spring 在技术层次将这两个思想进行了很好的实现。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"ioc-inversion-of-control\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc-inversion-of-control\"}},[s._v(\"#\")]),s._v(\" IoC （Inversion of control ）\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"什么是-ioc\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是-ioc\"}},[s._v(\"#\")]),s._v(\" 什么是 IoC?\")]),s._v(\" \"),t(\"p\",[s._v(\"IoC （Inversion of Control ）即控制反转/反转控制。它是一种思想不是一个技术实现。描述的是：Java 开发领域对象的创建以及管理的问题。\")]),s._v(\" \"),t(\"p\",[s._v(\"例如：现有类 A 依赖于类 B\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"传统的开发方式\")]),s._v(\" ：往往是在类 A 中手动通过 new 关键字来 new 一个 B 的对象出来\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"使用 IoC 思想的开发方式\")]),s._v(\" ：不通过 new 关键字来创建对象，而是通过 IoC 容器(Spring 框架) 来帮助我们实例化对象。我们需要哪个对象，直接从 IoC 容器里面过去即可。\")])]),s._v(\" \"),t(\"p\",[s._v(\"从以上两种开发方式的对比来看：我们 “丧失了一个权力” (创建、管理对象的权力)，从而也得到了一个好处（不用再考虑对象的创建、管理等一系列的事情）\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"为什么叫控制反转?\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"控制\")]),s._v(\" ：指的是对象创建（实例化、管理）的权力\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"反转\")]),s._v(\" ：控制权交给外部环境（IoC 容器）\")])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/java-guide-blog/frc-365faceb5697f04f31399937c059c162.png\",alt:\"IoC 图解\"}})]),s._v(\" \"),t(\"h3\",{attrs:{id:\"ioc-解决了什么问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc-解决了什么问题\"}},[s._v(\"#\")]),s._v(\" IoC 解决了什么问题?\")]),s._v(\" \"),t(\"p\",[s._v(\"IoC 的思想就是两方之间不互相依赖，由第三方容器来管理相关资源。这样有什么好处呢？\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[s._v(\"对象之间的耦合度或者说依赖程度降低；\")]),s._v(\" \"),t(\"li\",[s._v(\"资源变的容易管理；比如你用 Spring 容器提供的话很容易就可以实现一个单例。\")])]),s._v(\" \"),t(\"p\",[s._v(\"例如：现有一个针对 User 的操作，利用 Service 和 Dao 两层结构进行开发\")]),s._v(\" \"),t(\"p\",[s._v(\"在没有使用 IoC 思想的情况下，Service 层想要使用 Dao 层的具体实现的话，需要通过 new 关键字在\"),t(\"code\",[s._v(\"UserServiceImpl\")]),s._v(\" 中手动 new 出 \"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\" 的具体实现类 \"),t(\"code\",[s._v(\"UserDaoImpl\")]),s._v(\"（不能直接 new 接口类）。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/ioc-kfji3.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"很完美，这种方式也是可以实现的，但是我们想象一下如下场景：\")]),s._v(\" \"),t(\"p\",[s._v(\"开发过程中突然接到一个新的需求，针对对\"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\" 接口开发出另一个具体实现类。因为 Server 层依赖了\"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\"的具体实现，所以我们需要修改\"),t(\"code\",[s._v(\"UserServiceImpl\")]),s._v(\"中 new 的对象。如果只有一个类引用了\"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\"的具体实现，可能觉得还好，修改起来也不是很费力气，但是如果有许许多多的地方都引用了\"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\"的具体实现的话，一旦需要更换\"),t(\"code\",[s._v(\"IUserDao\")]),s._v(\" 的实现方式，那修改起来将会非常的头疼。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/why-ioc.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"使用 IoC 的思想，我们将对象的控制权（创建、管理）交有 IoC 容器去管理，我们在使用的时候直接向 IoC 容器 “要” 就可以了\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/why-ioc-2.png\",alt:\"\"}})]),s._v(\" \"),t(\"h3\",{attrs:{id:\"ioc-和-di-有区别吗\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc-和-di-有区别吗\"}},[s._v(\"#\")]),s._v(\" IoC 和 DI 有区别吗？\")]),s._v(\" \"),t(\"p\",[s._v(\"IoC（Inverse of Control:控制反转）是一种设计思想或者说是某种模式。这个设计思想就是 \"),t(\"strong\",[s._v(\"将原本在程序中手动创建对象的控制权交给第三方比如 IoC 容易。\")]),s._v(\" 对于我们常用的 Spring 框架来说， IoC 容器实际上就是个 Map（key，value）,Map 中存放的是各种对象。不过，IoC 在其他语言中也有应用，并非 Spring 特有。\")]),s._v(\" \"),t(\"p\",[s._v(\"IoC 最常见以及最合理的实现方式叫做依赖注入（Dependency Injection，简称 DI）。\")]),s._v(\" \"),t(\"p\",[s._v(\"老马（Martin Fowler）在一篇文章中提到将 IoC 改名为 DI，原文如下，原文地址：\"),t(\"a\",{attrs:{href:\"https://martinfowler.com/articles/injection.html\",target:\"_blank\",rel:\"noopener noreferrer\"}},[s._v(\"https://martinfowler.com/articles/injection.html\"),t(\"OutboundLink\")],1),s._v(\" 。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/martin-fowler-injection.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"老马的大概意思是 IoC 太普遍并且不表意，很多人会因此而迷惑，所以，使用 DI 来精确指名这个模式比较好。\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"aop-aspect-oriented-programming\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop-aspect-oriented-programming\"}},[s._v(\"#\")]),s._v(\" AOP（Aspect oriented programming）\")]),s._v(\" \"),t(\"p\",[s._v(\"这里不会涉及太多专业的术语，核心目的是将 AOP 的思想说清楚。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"什么是-aop\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#什么是-aop\"}},[s._v(\"#\")]),s._v(\" 什么是 AOP？\")]),s._v(\" \"),t(\"p\",[s._v(\"AOP（Aspect Oriented Programming）即面向切面编程，AOP 是 OOP（面向对象编程）的一种延续，二者互补，并不对立。\")]),s._v(\" \"),t(\"p\",[s._v(\"AOP 的目的是将横切关注点（如日志记录、事务管理、权限控制、接口限流、接口幂等等）从核心业务逻辑中分离出来，通过动态代理、字节码操作等技术，实现代码的复用和解耦，提高代码的可维护性和可扩展性。OOP 的目的是将业务逻辑按照对象的属性和行为进行封装，通过类、对象、继承、多态等概念，实现代码的模块化和层次化（也能实现代码的复用），提高代码的可读性和可维护性。\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"aop-为什么叫面向切面编程\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop-为什么叫面向切面编程\"}},[s._v(\"#\")]),s._v(\" AOP 为什么叫面向切面编程？\")]),s._v(\" \"),t(\"p\",[s._v(\"AOP 之所以叫面向切面编程，是因为它的核心思想就是将横切关注点从核心业务逻辑中分离出来，形成一个个的\"),t(\"strong\",[s._v(\"切面（Aspect）\")]),s._v(\"。\")]),s._v(\" \"),t(\"p\",[s._v(\"这里顺带总结一下 AOP 关键术语（不理解也没关系，可以继续往下看）：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"横切关注点（cross-cutting concerns）\")]),s._v(\" ：多个类或对象中的公共行为（如日志记录、事务管理、权限控制、接口限流、接口幂等等）。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"切面（Aspect）\")]),s._v(\"：对横切关注点进行封装的类，一个切面是一个类。切面可以定义多个通知，用来实现具体的功能。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"连接点（JoinPoint）\")]),s._v(\"：连接点是方法调用或者方法执行时的某个特定时刻（如方法调用、异常抛出等）。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"通知（Advice）\")]),s._v(\"：通知就是切面在某个连接点要执行的操作。通知有五种类型，分别是前置通知（Before）、后置通知（After）、返回通知（AfterReturning）、异常通知（AfterThrowing）和环绕通知（Around）。前四种通知都是在目标方法的前后执行，而环绕通知可以控制目标方法的执行过程。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"切点（Pointcut）\")]),s._v(\"：一个切点是一个表达式，它用来匹配哪些连接点需要被切面所增强。切点可以通过注解、正则表达式、逻辑运算等方式来定义。比如 \"),t(\"code\",[s._v(\"execution(* com.xyz.service..*(..))\")]),s._v(\"匹配 \"),t(\"code\",[s._v(\"com.xyz.service\")]),s._v(\" 包及其子包下的类或接口。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"织入（Weaving）\")]),s._v(\"：织入是将切面和目标对象连接起来的过程，也就是将通知应用到切点匹配的连接点上。常见的织入时机有两种，分别是编译期织入（AspectJ）和运行期织入（AspectJ）。\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"aop-解决了什么问题\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop-解决了什么问题\"}},[s._v(\"#\")]),s._v(\" AOP 解决了什么问题？\")]),s._v(\" \"),t(\"p\",[s._v(\"OOP 不能很好地处理一些分散在多个类或对象中的公共行为（如日志记录、事务管理、权限控制、接口限流、接口幂等等），这些行为通常被称为 \"),t(\"strong\",[s._v(\"横切关注点（cross-cutting concerns）\")]),s._v(\" 。如果我们在每个类或对象中都重复实现这些行为，那么会导致代码的冗余、复杂和难以维护。\")]),s._v(\" \"),t(\"p\",[s._v(\"AOP 可以将横切关注点（如日志记录、事务管理、权限控制、接口限流、接口幂等等）从 \"),t(\"strong\",[s._v(\"核心业务逻辑（core concerns，核心关注点）\")]),s._v(\" 中分离出来，实现关注点的分离。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/crosscut-logic-and-businesslogic-separation%20%20%20%20%20%20.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"以日志记录为例进行介绍，假如我们需要对某些方法进行统一格式的日志记录，没有使用 AOP 技术之前，我们需要挨个写日志记录的逻辑代码，全是重复的的逻辑。\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 业务逻辑\")]),s._v(\"\\n      xxService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略具体的业务处理逻辑\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 日志记录\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ServletRequestAttributes\")]),s._v(\" attributes \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ServletRequestAttributes\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RequestContextHolder\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getRequestAttributes\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"HttpServletRequest\")]),s._v(\" request \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" attributes\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getRequest\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略记录日志的具体逻辑 如：获取各种信息，写入数据库等操作...\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"success\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method2\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 业务逻辑\")]),s._v(\"\\n      xxService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method2\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略具体的业务处理逻辑\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 日志记录\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ServletRequestAttributes\")]),s._v(\" attributes \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ServletRequestAttributes\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RequestContextHolder\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getRequestAttributes\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"HttpServletRequest\")]),s._v(\" request \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" attributes\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getRequest\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略记录日志的具体逻辑 如：获取各种信息，写入数据库等操作...\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"success\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// ...\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\")])]),t(\"p\",[s._v(\"使用 AOP 技术之后，我们可以日志记录的逻辑封装成一个切面，然后通过切入点和通知来指定在哪些方法需要执行日志记录的操作。\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 日志注解\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Target\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ElementType\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"PARAMETER\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ElementType\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"METHOD\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Retention\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"RetentionPolicy\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"RUNTIME\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Documented\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@interface\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Log\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n     * 描述\\n     */\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"description\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"default\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n     * 方法类型 INSERT DELETE UPDATE OTHER\\n     */\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MethodType\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"methodType\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"default\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MethodType\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"OTHER\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 日志切面\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Component\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Aspect\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"LogAspect\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 切入点，所有被 Log 注解标注的方法\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Pointcut\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"@annotation(cn.javaguide.annotation.Log)\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"webLog\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n\\t\\t\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"/**\\n   * 环绕通知\\n   */\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Around\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"webLog()\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"doAround\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"ProceedingJoinPoint\")]),s._v(\" joinPoint\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"throws\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Throwable\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略具体的处理逻辑\")]),s._v(\"\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n  \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略其他代码\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"8\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"9\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"10\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"11\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"12\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"13\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"14\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"15\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"16\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"17\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"18\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"19\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"20\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"21\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"22\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"23\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"24\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"25\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"26\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"27\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"28\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"29\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"30\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"31\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"32\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"33\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"34\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"35\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"36\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"37\")]),t(\"br\")])]),t(\"p\",[s._v(\"这样的话，我们一行注解即可实现日志记录：\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java line-numbers-mode\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token annotation punctuation\"}},[s._v(\"@Log\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),s._v(\"description \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"method1\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\",\")]),s._v(\"methodType \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MethodType\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token constant\"}},[s._v(\"INSERT\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token generics\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"Object\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 业务逻辑\")]),s._v(\"\\n      xxService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"method1\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"// 省略具体的业务处理逻辑\")]),s._v(\"\\n      \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"return\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"CommonResponse\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"success\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])]),s._v(\" \"),t(\"div\",{staticClass:\"line-numbers-wrapper\"},[t(\"span\",{staticClass:\"line-number\"},[s._v(\"1\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"2\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"3\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"4\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"5\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"6\")]),t(\"br\"),t(\"span\",{staticClass:\"line-number\"},[s._v(\"7\")]),t(\"br\")])]),t(\"h3\",{attrs:{id:\"aop-的应用场景有哪些\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop-的应用场景有哪些\"}},[s._v(\"#\")]),s._v(\" AOP 的应用场景有哪些？\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"日志记录：自定义日志记录注解，利用 AOP，一行代码即可实现日志记录。\")]),s._v(\" \"),t(\"li\",[s._v(\"性能统计：利用 AOP 在目标方法的执行前后统计方法的执行时间，方便优化和分析。\")]),s._v(\" \"),t(\"li\",[s._v(\"事务管理：\"),t(\"code\",[s._v(\"@Transactional\")]),s._v(\" 注解可以让 Spring 为我们进行事务管理比如回滚异常操作，免去了重复的事务管理逻辑。\"),t(\"code\",[s._v(\"@Transactional\")]),s._v(\"注解就是基于 AOP 实现的。\")]),s._v(\" \"),t(\"li\",[s._v(\"权限控制：利用 AOP 在目标方法执行前判断用户是否具备所需要的权限，如果具备，就执行目标方法，否则就不执行。例如，SpringSecurity 利用\"),t(\"code\",[s._v(\"@PreAuthorize\")]),s._v(\" 注解一行代码即可自定义权限校验。\")]),s._v(\" \"),t(\"li\",[s._v(\"接口限流：利用 AOP 在目标方法执行前通过具体的限流算法和实现对请求进行限流处理。\")]),s._v(\" \"),t(\"li\",[s._v(\"缓存管理：利用 AOP 在目标方法执行前后进行缓存的读取和更新。\")]),s._v(\" \"),t(\"li\",[s._v(\"……\")])]),s._v(\" \"),t(\"h3\",{attrs:{id:\"aop-实现方式有哪些\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#aop-实现方式有哪些\"}},[s._v(\"#\")]),s._v(\" AOP 实现方式有哪些？\")]),s._v(\" \"),t(\"p\",[s._v(\"AOP 的常见实现方式有动态代理、字节码操作等方式。\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring AOP 就是基于动态代理的，如果要代理的对象，实现了某个接口，那么 Spring AOP 会使用 \"),t(\"strong\",[s._v(\"JDK Proxy\")]),s._v(\"，去创建代理对象，而对于没有实现接口的对象，就无法使用 JDK Proxy 去进行代理了，这时候 Spring AOP 会使用 \"),t(\"strong\",[s._v(\"Cglib\")]),s._v(\" 生成一个被代理对象的子类来作为代理，如下图所示：\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"https://oss.javaguide.cn/github/javaguide/system-design/framework/spring/230ae587a322d6e4d09510161987d346.jpeg\",alt:\"SpringAOPProcess\"}})]),s._v(\" \"),t(\"p\",[s._v(\"当然你也可以使用 \"),t(\"strong\",[s._v(\"AspectJ\")]),s._v(\" ！Spring AOP 已经集成了 AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"Spring AOP 属于运行时增强，而 AspectJ 是编译时增强。\")]),s._v(\" Spring AOP 基于代理(Proxying)，而 AspectJ 基于字节码操作(Bytecode Manipulation)。\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring AOP 已经集成了 AspectJ ，AspectJ 应该算的上是 Java 生态系统中最完整的 AOP 框架了。AspectJ 相比于 Spring AOP 功能更加强大，但是 Spring AOP 相对来说更简单，\")]),s._v(\" \"),t(\"p\",[s._v(\"如果我们的切面比较少，那么两者性能差异不大。但是，当切面太多的话，最好选择 AspectJ ，它比 Spring AOP 快很多。\")])])}),[],!1,null,null,null);t.default=e.exports}}]);","extractedComments":[]}