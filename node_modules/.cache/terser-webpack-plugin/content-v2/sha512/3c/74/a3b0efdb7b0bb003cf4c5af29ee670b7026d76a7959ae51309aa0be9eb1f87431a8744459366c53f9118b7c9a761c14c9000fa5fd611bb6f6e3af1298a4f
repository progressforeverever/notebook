{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{367:function(v,_,l){\"use strict\";l.r(_);var e=l(4),t=Object(e.a)({},(function(){var v=this,_=v._self._c;return _(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":v.$parent.slotKey}},[_(\"h1\",{attrs:{id:\"restful风格的api\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#restful风格的api\"}},[v._v(\"#\")]),v._v(\" Restful风格的API\")]),v._v(\" \"),_(\"p\",[v._v(\"RESTful（Representational State Transfer）是一种软件架构风格，旨在设计网络服务的标准化和简化。它是基于HTTP协议的一组原则和约束，用于构建可伸缩、可靠和可维护的分布式系统。\")]),v._v(\" \"),_(\"p\",[v._v(\"下面是一些关键的概念和原则，构成了RESTful风格的基础：\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"资源\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#资源\"}},[v._v(\"#\")]),v._v(\" 资源\")]),v._v(\" \"),_(\"p\",[v._v(\"资源（Resources）：RESTful架构将系统中的数据和功能抽象为资源。每个资源都有一个\"),_(\"strong\",[v._v(\"唯一的标识符（URI）\")]),v._v(\"，可以通过该标识符进行访问和操作。\")]),v._v(\" \"),_(\"p\",[v._v(\"任何事物，只要有被引用到的必要，它就是一个资源。\"),_(\"strong\",[v._v(\"资源可以是实体(例如手机号码)，也可以只是一个抽象概念(例如价值)\")]),v._v(\" 。下面是一些资源的例子：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"某用户的手机号码\")]),v._v(\" \"),_(\"li\",[v._v(\"某用户的个人信息\")]),v._v(\" \"),_(\"li\",[v._v(\"最多用户订购的GPRS套餐\")]),v._v(\" \"),_(\"li\",[v._v(\"两个产品之间的依赖关系\")]),v._v(\" \"),_(\"li\",[v._v(\"某用户可以办理的优惠套餐\")]),v._v(\" \"),_(\"li\",[v._v(\"某手机号码的潜在价值\")])]),v._v(\" \"),_(\"p\",[v._v(\"要让一个资源可以被识别，需要有个唯一标识，在Web中这个唯一标识就是\"),_(\"strong\",[v._v(\"URI(Uniform Resource Identifier)。\")])]),v._v(\" \"),_(\"p\",[v._v(\"URI既可以看成是资源的地址，也可以看成是资源的名称。如果某些信息没有使用URI来表示，那它就不能算是一个资源， 只能算是资源的一些信息而已。\"),_(\"strong\",[v._v(\"URI的设计应该遵循可寻址性原则，具有自描述性，需要在形式上给人以直觉上的关联\")]),v._v(\"。\")]),v._v(\" \"),_(\"p\",[v._v(\"下面让我们来看看\"),_(\"strong\",[v._v(\"URI设计上的一些技巧\")]),v._v(\":\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"使用**_或-来让URI可读性更好**\")])]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"曾经Web上的URI都是冰冷的数字或者无意义的字符串\")]),v._v(\"，但现在越来越多的网站使用_或-来分隔一些单词，让URI看上去更为人性化。 例如国内比较出名的开源中国社区，它上面的新闻地址就采用这种风格， 如\"),_(\"code\",[v._v(\"http://www.oschina.net/news/38119/oschina-translate-reward-plan\")]),v._v(\"。\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[_(\"strong\",[v._v(\"使用/来表示资源的层级关系\")])])]),v._v(\" \"),_(\"p\",[v._v(\"例如上述\"),_(\"code\",[v._v(\"/git/git/commit/e3af72cdafab5993d18fae056f87e1d675913d08\")]),v._v(\"就表示了一个多级的资源， 指的是git用户的git项目的某次提交记录，又例如\"),_(\"code\",[v._v(\"/orders/2012/10\")]),v._v(\"可以用来表示2012年10月的订单记录。\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"使用?用来过滤资源\")])]),v._v(\" \"),_(\"p\",[v._v(\"很多人只是把?简单的当做是参数的传递，很容易造成URI过于复杂、难以理解。可以把?用于对资源的过滤， 例如\"),_(\"code\",[v._v(\"/git/git/pulls\")]),v._v(\"用来表示git项目的所有推入请求，而\"),_(\"code\",[v._v(\"/pulls?state=closed\")]),v._v(\"用来表示git项目中已经关闭的推入请求， 这种URL通常对应的是一些特定条件的查询结果或算法运算结果。\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[_(\"strong\",[v._v(\",或;可以用来表示同级资源的关系\")])])]),v._v(\" \"),_(\"p\",[v._v(\"有时候我们需要表示同级资源的关系时，可以使用,或;来进行分割。例如哪天github可以比较某个文件在随意两次提交记录之间的差异，或许可以使用\"),_(\"code\",[v._v(\"/git/git /block-sha1/sha1.h/compare/e3af72cdafab5993d18fae056f87e1d675913d08;bd63e61bdf38e872d5215c07b264dcc16e4febca\")]),v._v(\"作为URI。 不过，现在github是使用…来做这个事情的，例如/git/git/compare/master…next。\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"统一的接口\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#统一的接口\"}},[v._v(\"#\")]),v._v(\" 统一的接口\")]),v._v(\" \"),_(\"p\",[v._v(\"统一的接口（Uniform Interface）：RESTful API应该具有统一的接口，包括对资源的标识、资源状态的表达、资源间关系的表达以及操作资源的方式。\"),_(\"strong\",[v._v(\"常用的HTTP方法（GET、POST、PUT、DELETE等）用于表示对资源的不同操作。\")])]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"最典型的，只用名词 不用动词\")])]),v._v(\" \"),_(\"p\",[v._v(\"比如，我们有一个friends接口，对于“朋友”我们有增删改查四种操作，怎么定义REST接口？\")]),v._v(\" \"),_(\"div\",{staticClass:\"language- line-numbers-mode\"},[_(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[_(\"code\",[v._v(\"增加一个朋友，uri: generalcode.cn/v1/friends 接口类型：POST\\n删除一个朋友，uri: generalcode.cn/v1/friends 接口类型：DELETE\\n修改一个朋友，uri: generalcode.cn/v1/friends 接口类型：PUT\\n查找朋友，uri: generalcode.cn/v1/friends 接口类型：GET\\n\")])]),v._v(\" \"),_(\"div\",{staticClass:\"line-numbers-wrapper\"},[_(\"span\",{staticClass:\"line-number\"},[v._v(\"1\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[v._v(\"2\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[v._v(\"3\")]),_(\"br\"),_(\"span\",{staticClass:\"line-number\"},[v._v(\"4\")]),_(\"br\")])]),_(\"p\",[v._v(\"上面我们定义的四个接口就是符合REST协议的，请注意，\"),_(\"strong\",[v._v(\"这几个接口都没有动词，只有名词friends，都是通过Http请求的接口类型来判断是什么业务操作。\")])]),v._v(\" \"),_(\"p\",[v._v(\"举个反例：\"),_(\"code\",[v._v(\"eneralcode.cn/va/deleteFriends\")]),v._v(\"该接口用来表示删除朋友，这就是\"),_(\"strong\",[v._v(\"不符合REST协议的接口\")]),v._v(\"。\")]),v._v(\" \"),_(\"blockquote\",[_(\"p\",[v._v(\"Q：这里的v1是什么意思？经常在开发中看见接口前加个v1，有什么用？\")]),v._v(\" \"),_(\"p\",[v._v(\"A：在定义控制器接口路径时添加版本号（例如，/v1）是为了支持API的版本管理。  相当于进行版本管理\")])]),v._v(\" \"),_(\"h2\",{attrs:{id:\"其他的特点\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#其他的特点\"}},[v._v(\"#\")]),v._v(\" 其他的特点\")]),v._v(\" \"),_(\"ol\",[_(\"li\",[v._v(\"无状态（Stateless）：RESTful架构是无状态的，即每个请求应该包含所有必要的信息，不依赖于服务器的状态。服务器不会保存客户端的会话信息，使得系统更加简化、可伸缩和可缓存。\")]),v._v(\" \"),_(\"li\",[v._v(\"资源的表述（Representation）：资源的状态以及与之相关的信息通过表述进行传输。常见的表述格式包括JSON、XML等，客户端和服务器之间通过表述进行交互。\")]),v._v(\" \"),_(\"li\",[v._v(\"按需编码（HATEOAS）：RESTful API应该通过返回超媒体链接（Hypermedia Links）的方式，告知客户端可以采取的下一步操作。客户端可以根据链接的指示进行后续操作，减少对API的先验知识依赖。\")])]),v._v(\" \"),_(\"p\",[v._v(\"RESTful风格的优点包括简单性、可扩展性、松耦合性和可缓存性。它适用于构建Web服务、移动应用程序后端API以及分布式系统。\")]),v._v(\" \"),_(\"p\",[v._v(\"在实践中，设计RESTful API时，应遵循上述原则，并结合具体业务需求和最佳实践，合理设计资源的URI、使用适当的HTTP方法、定义\"),_(\"strong\",[v._v(\"合适的状态码和错误处理\")]),v._v(\"等，以确保API的可读性、一致性和易用性。\")]),v._v(\" \"),_(\"h2\",{attrs:{id:\"栗子\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#栗子\"}},[v._v(\"#\")]),v._v(\" 栗子\")]),v._v(\" \"),_(\"h3\",{attrs:{id:\"restful风格的设计\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#restful风格的设计\"}},[v._v(\"#\")]),v._v(\" Restful风格的设计\")]),v._v(\" \"),_(\"p\",[v._v(\"假设我们正在构建一个博客系统，其中有两个主要资源：文章（Article）和评论（Comment）。我们可以设计一套RESTful API来管理这些资源。\")]),v._v(\" \"),_(\"ol\",[_(\"li\",[_(\"p\",[v._v(\"获取文章列表：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回所有文章的列表\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"创建新文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：POST\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：创建一篇新文章，并返回创建后的文章对象\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定文章的详细信息：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定文章的详细信息，其中{articleId}是文章的唯一标识符\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"更新文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：PUT\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：更新特定文章的内容\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"删除文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：DELETE\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：删除特定文章\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定文章的评论列表：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}/comments\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定文章的评论列表\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"创建新评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：POST\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}/comments\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：在特定文章下创建一条新评论，并返回创建后的评论对象\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定评论的详细信息：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}/comments/{commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定评论的详细信息，其中{commentId}是评论的唯一标识符\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"更新评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：PUT\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}/comments/{commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：更新特定评论的内容\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"删除评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：DELETE\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/articles/{articleId}/comments/{commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：删除特定评论\")])])])]),v._v(\" \"),_(\"p\",[v._v(\"在这个示例中，我们通过\"),_(\"strong\",[v._v(\"定义不同的HTTP方法和URI路径，对文章和评论资源进行了基本的CRUD操作\")]),v._v(\"（创建、读取、更新、删除）。通过使用RESTful风格，我们可以使用统一的接口和URI来管理这些资源，并清晰地表达出资源之间的关系。\")]),v._v(\" \"),_(\"p\",[v._v(\"需要注意的是，上述示例中的\"),_(\"strong\",[v._v(\"URI路径中使用了占位符（例如{articleId}和{commentId}），这些占位符表示对应资源的唯一标识符，在实际使用时需要替换为具体的标识符。\")])]),v._v(\" \"),_(\"h3\",{attrs:{id:\"非restful风格\"}},[_(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#非restful风格\"}},[v._v(\"#\")]),v._v(\" 非Restful风格\")]),v._v(\" \"),_(\"p\",[v._v(\"对比一下\")]),v._v(\" \"),_(\"p\",[v._v(\"好的，下面是使用传统非RESTful风格设计的相同例子：\")]),v._v(\" \"),_(\"ol\",[_(\"li\",[_(\"p\",[v._v(\"获取文章列表：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/getArticles\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回所有文章的列表\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"创建新文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：POST\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/createArticle\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：创建一篇新文章，并返回创建后的文章对象\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定文章的详细信息：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/getArticleDetails?articleId={articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定文章的详细信息，其中{articleId}是文章的唯一标识符\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"更新文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：PUT\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/updateArticle?articleId={articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：更新特定文章的内容\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"删除文章：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：DELETE\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/deleteArticle?articleId={articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：删除特定文章\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定文章的评论列表：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/getComments?articleId={articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定文章的评论列表\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"创建新评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：POST\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/createComment?articleId={articleId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：在特定文章下创建一条新评论，并返回创建后的评论对象\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"获取特定评论的详细信息：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：GET\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/getCommentDetails?articleId={articleId}&commentId={commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：返回特定评论的详细信息，其中{articleId}和{commentId}是文章和评论的唯一标识符\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"更新评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：PUT\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/updateComment?articleId={articleId}&commentId={commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：更新特定评论的内容\")])])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"删除评论：\")]),v._v(\" \"),_(\"ul\",[_(\"li\",[v._v(\"请求方法：DELETE\")]),v._v(\" \"),_(\"li\",[v._v(\"路径：/deleteComment?articleId={articleId}&commentId={commentId}\")]),v._v(\" \"),_(\"li\",[v._v(\"功能：删除特定评论\")])])])]),v._v(\" \"),_(\"p\",[v._v(\"在这个非RESTful的设计中，\"),_(\"strong\",[v._v('URI路径中的动词（如\"get\"、\"create\"、\"update\"、\"delete\"）被用于表示不同的操作，而不是使用HTTP方法。每个操作都有自己的独立路径，并且没有统一的资源标识符和接口。')])]),v._v(\" \"),_(\"p\",[_(\"strong\",[v._v(\"（动词、每个都独立路径）\")])]),v._v(\" \"),_(\"p\",[v._v(\"相对于RESTful风格，非RESTful风格的设计中存在以下差异：\")]),v._v(\" \"),_(\"ol\",[_(\"li\",[_(\"p\",[v._v(\"缺乏统一的接口：非RESTful设计中，每个操作都使用独立的路径，缺乏统一的接口约定，导致接口风格不一致。\")])]),v._v(\" \"),_(\"li\",[_(\"p\",[_(\"strong\",[v._v(\"使用动词表示操作\")]),v._v(\"：非RESTful设计中，操作的含义通过路径中的动词来表示，而不是使用标准的HTTP方法，增加了学习和理解的复杂性。\")])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"缺乏资源的自描述性：非RESTful设计中，资源的表述和关系不明确，需要依赖文档或其他外部信息来了解资源的结构和使用方式。\")])]),v._v(\" \"),_(\"li\",[_(\"p\",[v._v(\"依赖查询参数：非RESTful设计中，使用查询参数来传递操作所需的参数，而不是通过URI路径和HTTP请求体的方式，增加了接口调用的复杂性。\")])])]),v._v(\" \"),_(\"p\",[v._v(\"总体而言，RESTful风格的设计更加符合统一接口原则和资源导向的设计理念，通过使用标准的HTTP方法和URI路径，提供了一种简单、一致和可扩展的方式来构建分布式系统和Web服务。\")])])}),[],!1,null,null,null);_.default=t.exports}}]);","extractedComments":[]}